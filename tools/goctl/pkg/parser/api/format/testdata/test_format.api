import (
// a
"aa" // aa
// b
"bbb" // bb
// c
"ccccc" // ccc
)
// alias a

type A int
// alias boolean
type Boolean  bool
type Boolean  =bool
type Number  int64 // number alias
type Number  =int64 // number alias =
// array declare
type Array[2]int // array alias
type Array=[2]int // array alias =
// slice declare
type Slice []int // slice alias
type Slice =[]int // slice alias =
// map declare
type Map map[string]int // map alias
type Map =map[string]int // map alias =
type Placeholder {} // placeholder
type Placeholder = {} // placeholder=
type Person { // Persion
// name declare
Name string `json:"name"` // name
// age declare
Age int `json:"age"`// age
/**desc/ Desc string `json:"desc"`
}

type Person { // Persion
    Name string `json:"name"` // name
    Age int `json:"age"`// age
Desc string
}

type Any    interface{}
type Any  any
type Pointer *int
type Slice2 []{
// lll
}
type Map map[{}]{}
type Slice3 []{
Name string `json:"name"` // name
Age int `json:"age"`// age
Desc string
Inner {
Name string `json:"name"` // name
Age int `json:"age"`// age
Desc string
}
}

type Map map[{
Name string `json:"name"` // name
Age int `json:"age"`// age
Desc string
}]{
Name string `json:"name"` // name
Age int `json:"age"`// age
Desc string
}

type Map map[{Name string `json:"name"` // name
Age int `json:"age"`// age
Desc string
Inner {Name string `json:"name"` // name
Age int `json:"age"`// age
Desc string}
}]{
Name string `json:"name"` // name
Age int `json:"age"`// age
Desc string
Inner {Name string `json:"name"` // name
Age int `json:"age"`// age
Desc string}
}

type Map map[string]int

type Pointer {
Name string `json:"name"` // name
Age int `json:"age"`// age
Desc string
Map map[string]{
Name string `json:"name"` // name
Age int `json:"age"`// age
Desc string
}
Slice [...]{
Name string `json:"name"` // name
Age int `json:"age"`// age
Desc string
Inner {
Name string `json:"name"` // name
Age int `json:"age"`// age
Desc string
Inner {
Name string `json:"name"` // name
Age int `json:"age"`// age
Desc string
Inner {
Name string `json:"name"` // name
Age int `json:"age"`// age
Desc string
}
}
}
}
}

type ()
type (

)
type (
// k
    Int int // kkk
    // l
Boolean bool // lllllllll
)

// alias a
type (
A int
    // alias boolean
Boolean  bool
Boolean  =bool
Number  int64 // number alias
Number  =int64 // number alias =
    // array declare
Array[2]int // array alias
Array=[2]int // array alias =
    // slice declare
Slice []int // slice alias
Slice =[]int // slice alias =
    // map declare
Map map[string]int // map alias
Map =map[string]int // map alias =
Placeholder {} // placeholder
Placeholder = {} // placeholder=
Person { // Persion
    // name declare
Name string `json:"name"` // name
    // age declare
Age int `json:"age"`// age
/**desc/ Desc string `json:"desc"`
}

Person { // Persion
Name string `json:"name"` // name
Age int `json:"age"`// age
Desc string
}

Any    interface{}
Any  any
Pointer *int
Slice2 []{}
Map map[{}]{}
Slice3 []{
Name string `json:"name"` // name
Age int `json:"age"`// age
Desc string
Inner {
Name string `json:"name"` // name
Age int `json:"age"`// age
Desc string
}
}


Map map[{
Name string `json:"name"` // name
Age int `json:"age"`// age
Desc string
}]{
Name string `json:"name"` // name
Age int `json:"age"`// age
Desc string
}

Map map[{Name string `json:"name"` // name
Age int `json:"age"`// age
Desc string}]{
Name string `json:"name"` // name
Age int `json:"age"`// age
Desc string
}

Map map[string]int

Pointer {
Name string `json:"name"` // name
Age int `json:"age"`// age
Desc string
Map map[string]{
Name string `json:"name"` // name
Age int `json:"age"`// age
Desc string
}
Slice [...]{
Name string `json:"name"` // name
Age int `json:"age"`// age
Desc string
Inner {
Name string `json:"name"` // name
Age int `json:"age"`// age
Desc string
Inner {
Name string `json:"name"` // name
Age int `json:"age"`// age
Desc string
Inner {
Name string `json:"name"` // name
Age int `json:"age"`// age
Desc string
}
}
}
}
}

Map map[{
Name string `json:"name"` // name
Age int `json:"age"`// age
Desc string
Inner {
Name string `json:"name"` // name
Age int `json:"age"`// age
Desc string
}
}][2]map[string]{
Name string `json:"name"` // name
Age int `json:"age"`// age
Desc string
Inner {
Name string `json:"name"` // name
Age int `json:"age"`// age
Desc string
}
}
)
