info(
	title: 大一统中控
	desc: >大一统中控相关api<
	author: yangtao
	email: yangtao2@xiaoheiban.cn
)

type (
	JumpDytRequest {
		CampusId int64 `json:"campusId"`
	}

	JumpDytResponse {
		Auth string `json:"auth,omitempty"`
	}
	CreateCampusRequest {
		CampusId int64  `json:"campusId"`
		Creator  string `json:"creator"`
		Mobile   string `json:"mobile"`
	}

	CampusListRequest {
		City     string `json:"city,optional"`
		Name     string `json:"name,optional"`
		Page     int    `json:"page,optional,default=1"`      // 当前页
		PageSize int    `json:"pageSize,optional,default=10"` // 页面展示数
		Province string `json:"province,optional"`
		Code     string `json:"code,optional"`
		Status   string `json:"status,default=0"` //状态Opened-已开通，NotOpened-未开通，All-全部
	}

	CampusList {
		Count          int64     `json:"count"`
		IsUpload       bool      `json:"isUpload"`
		IsEdit         bool      `json:"isEdit"`
		IsSupervisor   bool      `json:"isSupervisor"`
		IsCreateCampus bool      `json:"isCreateCampus"`
		IsLoginCampus  bool      `json:"isLoginCampus"`
		List           []*Campus `json:"list"`
	}

	Campus {
		CampusId       int64  `json:"campusId"`
		Name           string `json:"name"`
		Manager        string `json:"manager,omitempty"`
		ManagerId      int64  `json:"managerId,omitempty"`
		Phone          string `json:"phone"`
		IsCreateCampus bool   `json:"isCreateCampus"`
		Trainer        string `json:"trainer,omitempty"`
		Code           string `json:"code,omitempty"`
		Supervisor     string `json:"supervisor,omitempty"`
		SupervisorCode string `json:"supervisorCode,omitempty"`
		ModuleNum      int    `json:"moduleNum"`
		DeviceNum      int    `json:"deviceNum"`
		QrCode         string `json:"qrCode"`
		IsMine         bool   `json:"isMine"`
	}

	BoolResponse {
		Successful bool `json:"successful"`
	}

	UpdateCampusRequest {
		CampusId     int64 `json:"campusId"`
		OldManagerId int64 `json:"oldManagerId"` // 旧管理员Id
		ManagerId    int64 `json:"managerId"`    // 新管理员Id
	}

	BindTeacherRequest {
		CampusId int64  `json:"campusId"`
		Name     string `json:"name"`
	}

	BindTeacherResponse {
		List []*BindTeacherView `json:"list"`
	}

	BindTeacherView {
		ManagerId int64  `json:"managerId"`
		Name      string `json:"name"`
	}

	CampusModuleListRequest {
		CampusId int64  `json:"campusId"`
		Name     string `json:"name,optional"`
		Page     int    `json:"page"`
		PageSize int    `json:"pageSize"`
	}

	CampusModuleListResponse {
		Count     int                   `json:"count"`
		List      []*CampusModuleDetail `json:"list,omitempty"`
		IsBaoBei  int64                 `json:"isBaoBei"` // 是否开通宝贝别害怕，0是关闭，1是开通
		IsOperate bool                  `json:"isOperate"`
		IsMine    bool                  `json:"isMine"`
	}

	ModuleList {
		List []*ModuleView `json:"list"`
	}

	ModuleView {
		Id         int64         `json:"id"`
		Name       string        `json:"name"`
		Property   string        `json:"property,omitempty"`
		ModuleCode string        `json:"moduleCode,omitempty"`
		Children   []*ModuleView `json:"children,omitempty"`
	}

	CampusModuleDetail {
		ModuleId         int64                  `json:"moduleId,omitempty"`
		ModuleCode       string                 `json:"moduleCode,omitempty"`       // 功能代码
		ModuleName       string                 `json:"moduleName,omitempty"`       // 功能名称
		NickName         string                 `json:"nickName,omitempty"`         // 功能别称
		Status           int                    `json:"status,omitempty"`           // 1是开通，2是隐藏
		OwnWay           int64                  `json:"ownWay"`                     //开通方式：1-整校，2-班级
		GradesAndClasses []*AllGradesAndClasses `json:"gradesAndClasses,omitempty"` //开通班级信息
	}

	OpenModuleListRequest {
		CampusId int64 `path:"campusId"`
	}

	OpenModuleListResponse {
		List []*Modules `json:"list,omitempty"`
	}

	Modules {
		ModuleId   int64  `json:"moduleId,omitempty"`   // 功能代码
		ModuleCode string `json:"moduleCode,omitempty"` // 功能代码
		ModuleName string `json:"moduleName,omitempty"` // 功能名称
	}

	GetGradesAndClassesRequest {
		CampusId int64 `json:"campusId"`
	}

	GradesAndClassesResponse {
		GradesAndClasses []*AllGradesAndClasses `json:"gradesAndClasses"`
	}

	AddCampusModuleRequest {
		CampusId  int64   `json:"campusId"`
		ModuleIds []int64 `json:"moduleIds,optional"`
	}

	DeleteCampusModuleRequest {
		CampusId int64 `json:"campusId"`
		ModuleId int64 `path:"moduleId"`
	}

	DeletePolicyInternalRequest {
		CampusId int64 `json:"campusId"` //校区id
	}

	DeviceListRequest {
		CampusId     int64 `json:"campusId"`
		DeviceStatus int64 `json:"deviceStatus,optional"`
		Page         int64 `json:"page,default=1"`
		PageSize     int64 `json:"pageSize,default=10"`
	}

	DeviceListResponse {
		Count     int           `json:"count"`
		List      []*DeviceInfo `json:"list"`
		IsOperate bool          `json:"isOperate"`
		IsMine    bool          `json:"isMine"`
	}

	AddDeviceRequest {
		CampusId        int64  `json:"campusId"`
		DeviceCode      string `json:"deviceCode"`
		DeviceName      string `json:"deviceName"`
		Ip              string `json:"ip"`
		Scene           string `json:"scene"`
		DeviceType      int64  `json:"deviceType"`
		Account         string `json:"account,optional"`
		Password        string `json:"password,optional"`
		Cdkey           string `json:"cdkey,optional"`
		DeviceEnterType int64  `json:"deviceEnterType,optional"`
	}

	EditDeviceRequest {
		DeviceId        int64  `json:"deviceId"`
		DeviceCode      string `json:"deviceCode"`
		DeviceName      string `json:"deviceName"`
		Ip              string `json:"ip"`
		Scene           string `json:"scene"`
		DeviceType      int64  `json:"deviceType"`
		Account         string `json:"account,optional"`
		Password        string `json:"password,optional"`
		Cdkey           string `json:"cdkey,optional"`
		DeviceEnterType int64  `json:"deviceEnterType,optional"`
	}

	DeleteDeviceRequest {
		DeviceId int64 `path:"deviceId"`
	}

	DeviceInfo {
		DeviceId        int64  `json:"deviceId"`
		DeviceCode      string `json:"deviceCode"`
		DeviceName      string `json:"deviceName"`
		Ip              string `json:"ip"`
		Scene           string `json:"scene"`
		Date            string `json:"date"`
		DeviceStatus    int64  `json:"deviceStatus"`
		CurrentStatus   int64  `json:"currentStatus"`
		DeviceType      int64  `json:"deviceType"`
		Account         string `json:"account"`
		Password        string `json:"password"`
		Cdkey           string `json:"cdkey"`
		DeviceEnterType int64  `json:"deviceEnterType"`
	}

	CampusDistrictRequest {
		PId int64 `path:"pId"`
	}

	CampusDistrictResponse {
		List []*District `json:"list,omitempty"`
	}

	District {
		Name string `json:"name,omitempty"`
		Id   int64  `json:"id,omitempty"`
	}

	CampusSpaceListRequest {
		CampusId int64 `json:"campusId,optional"`
		NowPage  int64 `json:"nowPage"`
		PageSize int64 `json:"pageSize"`
	}

	CampusSpaceListResponse {
		Count     int64                `json:"count,omitempty"`
		List      []*CampusSpaceDetail `json:"list,omitempty"`
		IsOperate bool                 `json:"isOperate"`
	}

	CampusSpaceDetail {
		Id           int64   `json:"id"`
		CampusId     int64   `json:"campusId"`
		SpaceSize    float64 `json:"spaceSize"`
		UseSpaceSize float64 `json:"useSpaceSize"`
		CreatorId    string  `json:"creatorId"`
		SchoolName   string  `json:"school_name"`
		CreateTime   string  `json:"createTime"`
		UpdateTime   string  `json:"updateTime"`
	}

	EditSpaceRequest {
		CampusId  int64   `json:"campus_id"`
		SpaceSize float64 `json:"space_size"`
	}

	CampusInfosRequest {
		SchoolName string `json:"schoolName"`
	}

	CampusesResponse {
		List []*CampusInfoResponse `json:"list"`
	}

	CampusInfoResponse {
		CampusId   int64  `json:"campus_id"`
		SchoolName string `json:"school_name"`
	}
)

type (
	CampusId {
		CampusId int64 `path:"campusId"`
	}
	CampusImportResponse {
		Successful bool        `json:"successful"`
		Message    string      `json:"message"`
		Preview    []*ErrTable `json:"preview"`
	}
	ErrTable {
		Table string      `json:"table"`
		Rows  []ErrDetail `json:"rows"`
	}
	ErrDetail {
		Title   string `json:"title"`
		Reason  string `json:"reason"`
		Suggest string `json:"suggest"`
	}
)

type (
	ImportCheckLimitRequest {
		CampusId int64 `path:"campusId"`
	}
)

type (
	CampusManageListResponse {
		Count        int64                 `json:"count"`
		List         []*CampusManageDetail `json:"list"`
		IsSupervisor bool                  `json:"isSupervisor"` // 是否是督导
		IsAcrEdit    bool                  `json:"isAcrEdit"`    // 是否有架构增删改权限
	}
	CampusManageDetail {
		CampusId          int64  `json:"campusId"`
		Name              string `json:"name"`
		GradeCurrentNum   int64  `json:"gradeCurrentNum"`   // 已创建年级数
		GradeNum          int64  `json:"gradeNum"`          // 标准年级数
		ClassCurrentNum   int64  `json:"classCurrentNum"`   // 已绑定班级数
		ClassNum          int64  `json:"classNum"`          // 已创建班级    		DepartmentNum     int64  `json:"departmentNum"`     // 部门数
		SubjectNum        int64  `json:"subjectNum"`        // 学科数
		TeacherCurrentNum int64  `json:"teacherCurrentNum"` // 已绑定教师数
		TeacherNum        int64  `json:"teacherNum"`        // 已创建教师数
		ParentNum         int64  `json:"parentNum"`         // 家长数，去重
		ModuleNum         int64  `json:"moduleNum"`         // 已开通功能数
		DeviceNum         int64  `json:"deviceNum"`         // 设备数
		QRCode            string `json:"qrCode"`
	}
)

type (
	CommonIndicatorListRequest {
		CampusId int64 `json:"campusId"`
		Page     int   `json:"page"`
		PageSize int   `json:"pageSize"`
	}
	CommonIndicatorListResponse {
		List    []*CommonIndicatorItem `json:"list"`
		Sum     int                    `json:"sum"`
		HasMore bool                   `json:"hasMore"`
	}
	CommonIndicatorItem {
		OrderTagIds   string `json:"orderTagIds"`   // 通用指标id
		Type          int64  `json:"type"`          //
		IndicatorName string `json:"indicatorName"` // 通用指标名称
	}
)

type (
	CommonIndicatorLoadRequest {
		CampusId int64 `path:"campusId"`
	}
	CommonIndicatorLoadResponse {
		List []*CommonIndicatorView `json:"list"`
	}
	CommonIndicatorView {
		OrderTagIds string `json:"orderTagIds"`
		Id          int64  `json:"id"`
		Name        string `json:"name"`
		HasSelected bool   `json:"hasSelected"`
	}
)

type (
	CommonIndicatorAddRequest {
		CampusId           int64   `json:"campusId"`
		CommonIndicatorIds []int64 `json:"commonIndicatorIds"`
	}
)

type (
	UpdateBaoBeiRequest {
		CampusId int64 `json:"campusId"`
		IsBaoBei int64 `json:"isBaoBei"`
	}
)

type (
	UpdateCampusModuleRequest {
		CampusModuleId   int64                  `json:"campusModuleId"`
		CampusId         int64                  `json:"campusId"`
		Nickname         string                 `json:"nickname,optional"`
		Status           int                    `json:"status,optional"`
		ModuleCode       string                 `json:"moduleCode"`
		LimitCount       int64                  `json:"limitCount"` // 单次直播上限人数，当 `moduleCode: "live"` 时生效
		SpaceSize        float64                `json:"spaceSize"`  // 云盘空间大小
		GradesAndClasses []*AllGradesAndClasses `json:"gradesAndClasses,optional"`
	}
	AllGradesAndClasses {
		GradeId         int64       `json:"gradeId,optional"`
		CampusGradeId   int64       `json:"campusGradeId"`
		CampusGradeName string      `json:"campusGradeName"`
		Classes         []*DytClass `json:"classes"`
	}
	DytClass {
		ClassNum      int64  `json:"classNum,optional"`
		ClassId       int64  `json:"classId"`
		ClassName     string `json:"className"`
		XhbClassToken string `json:"xhbClassToken"`
		CampusGradeId int64  `json:"campusGradeId,optional"`
	}
)

type (
	GradeListResponse {
		List      []*GradeDetail `json:"list"`
		IsOperate bool           `json:"isOperate"`
		IsMine    bool           `json:"isMine"`
	}
	GradeDetail {
		CampusGradeId int64  `json:"campusGradeId"`
		GradeId       int64  `json:"gradeId"`
		AliasName     string `json:"aliasName"`
		StandardName  string `json:"standardName"`
	}
)

type (
	AddGradeRequest {
		CampusId  int64  `json:"campusId"`
		GradeId   int64  `json:"gradeId,optional"`
		AliasName string `json:"aliasName,optional"`
	}
)

type (
	ActGradeRequest {
		CampusId      int64  `json:"campusId"`
		CampusGradeId int64  `json:"campusGradeId"`
		GradeId       int64  `json:"gradeId,optional"`
		AliasName     string `json:"aliasName,optional"`
		IsDelete      bool   `json:"isDelete,optional"`
	}
)

type (
	StandardGradeListResponse {
		List []*StandardGradeDetail `json:"list"`
	}
	StandardGradeDetail {
		GradeId   int64  `json:"gradeId"`
		GradeName string `json:"gradeName"`
	}
)

type (
	ClassesListRequest {
		CampusId      int64 `json:"campusId"`
		GradeId       int64 `json:"gradeId,optional"`
		CampusGradeId int64 `json:"campusGradeId"`
		IsBind        int   `json:"isBind,optional,default=2"`
		Page          int   `json:"page,optional,default=1"`
		PageSize      int   `json:"pageSize,optional,default=12"`
	}
	ClassesListResponse {
		List          []*ClassesListInfo `json:"list"`
		TotalPage     int                `json:"total_page"`
		Count         int                `json:"count"`
		IsOperate     bool               `json:"isOperate"`
		IsUpload      bool               `json:"isUpload"`
		IsMine        bool               `json:"isMine"`
		IsBindOperate bool               `json:"isBindOperate"`
	}
	ClassesListInfo {
		ClassesId       int64  `json:"classes_id"`
		ClassName       string `json:"class_name"`
		TeacherId       int64  `json:"teacher_id"`       // 班主任Id
		DirectorTeacher string `json:"director_teacher"` // 班主任姓名
		ParentNum       int64  `json:"parent_num"`
		XhbClassToken   string `json:"xhb_class_token"`
		ClassCode       string `json:"class_code"` // 班级邀请码
		ZxClassName     string `json:"zx_class_name"`
		TeacherNum      int64  `json:"teacher_num"`
		GradeId         int64  `json:"grade_id"`
		CampusGradeId   int64  `json:"campus_grade_id"`
		CampusGradeName string `json:"campusGradeName"`
		StudentNum      int64  `json:"student_num"`
	}
)

type (
	ClassDetailRequest {
		CampusId int64 `json:"campusId"`
		ClassId  int64 `json:"classId"`
	}
	ClassDetailResponse {
		ClassName       string `json:"className"`
		XhbClassName    string `json:"xhbClassName"`
		StandardName    string `json:"standardName"`
		DirectorTeacher string `json:"directorTeacher"`
		ClassCode       string `json:"classCode"`
	}
)

type (
	ClassIdRequest {
		ClassId int64 `path:"classId"`
	}
	TeacherListResponse {
		Count int64          `json:"count"`
		List  []*TeacherView `json:"list"`
	}
	TeacherView {
		TeacherName string `json:"teacherName"`
		SubjectName string `json:"subjectName"`
	}
)

type (
	ParentListResponse {
		Count int64          `json:"count"`
		List  []*StudentView `json:"list"`
	}

	StudentView {
		StudentName string `json:"studentName"`
		UserName    string `json:"userName"`
		Role        string `json:"role"`
	}
)

type (
	AddClassRequest {
		CampusId      int64  `json:"campusId"`
		ClassName     string `json:"className,optional"`
		GradeId       int64  `json:"gradeId"`
		TeacherId     int64  `json:"teacherId,optional"`
		CampusGradeId int64  `json:"campusGradeId"`
		ClassCode     string `json:"classCode,optional"`
	}
)

type (
	UpdateClassRequest {
		ClassId       int64  `json:"classId"`
		CampusId      int64  `json:"campusId"`
		ClassName     string `json:"className,optional"`
		TeacherId     int64  `json:"teacherId,optional"`
		GradeId       int64  `json:"gradeId,optional"`
		CampusGradeId int64  `json:"campusGradeId,optional"`
		ClassCode     string `json:"classCode,optional"`
	}
)

type (
	DeleteClassRequest {
		CampusId int64 `json:"campusId"`
		ClassId  int64 `json:"classId"`
	}
)

type (
	TeacherListInternalRequest {
		TeacherName  string `json:"teacher_name,optional"`         //教师名称
		NowPage      int    `json:"now_page,optional,default=1"`   //当前页
		PageSize     int    `json:"page_size,optional,default=10"` //页面展示数
		CampusId     int64  `json:"campus_id"`                     //校区id
		IsBind       int64  `json:"is_bind"`
		DepartmentId int64  `json:"departmentId,optional"`
	}
	DytTeacherListResponse {
		List      []*TeacherDetail `json:"list"`
		TotalPage int              `json:"total_page"`
		Count     int              `json:"count"`
		NowPage   int              `json:"now_page"`
		IsOperate bool             `json:"isOperate"`
		IsUpload  bool             `json:"isUpload"`
		IsMine    bool             `json:"isMine"`
	}
)

type (
	TeacherInfoInternalRequest {
		TeacherId int64 `json:"teacher_id"`
		CampusId  int64 `json:"campus_id"` //校区id
	}

	TeacherDetail {
		TeacherId     int64           `json:"teacher_id"`
		TeacherName   string          `json:"teacher_name"`
		Mobile        string          `json:"mobile"`
		Department    string          `json:"department"`
		SubjectName   string          `json:"subject_name"`
		Status        string          `json:"status"`
		Avatar        string          `json:"avatar"`
		Email         string          `json:"email"`
		ClassDirector int             `json:"class_director"`
		XhbUserToken  string          `json:"xhb_user_token"`
		CampusId      int64           `json:"campus_id"`
		SchoolId      int64           `json:"school_id"`
		DepartIds     []int64         `json:"depart_ids"`
		ClassSubIds   []*ClassTeacher `json:"class_subids"`
		CampusManager int             `json:"campus_manager"`
	}
)

type (
	//教师新增/编辑
	TeacherActInternalRequest {
		TeacherId     int64           `json:"teacher_id,optional"`     //教师id
		TeacherName   string          `json:"teacher_name"`            //教师姓名
		Mobile        string          `json:"mobile,optional"`         //手机号
		Email         string          `json:"email,optional"`          //邮箱
		Departments   []int64         `json:"departments,optional"`    //部门ids
		ClassTeachers []*ClassTeacher `json:"class_teachers,optional"` //教师关系
		Status        int64           `json:"status,optional"`         //岗位状态
		CampusId      int64           `json:"campus_id"`               //校区id
		ActUserId     string          `json:"act_user_id,,optional"`
	}

	ClassTeacher {
		CampusGradeId int64 `json:"campus_grade_id"`
		GradeId       int64 `json:"grade_id"`
		ClassesId     int64 `json:"class_id"`
		SubjectId     int64 `json:"subject_id"`
		ClassDirector int64 `json:"class_director,optional"`
	}

	//教师新增/编辑返回
	TeacherActReponse {
		Successful bool `json:"successful"` //提示信息
	}
)

type (
	BatchDeleteTeacherInternalRequest {
		TeacherId []int64 `json:"teacher_id"`
		CampusId  int64   `json:"campus_id"` //校区id
	}
)

type (
	TeacherInfoQueryInternalRequest {
		TeacherName string `json:"teacher_name"`
		CampusId    int64  `json:"campus_id"` //校区id
	}
	CampusTeacherList {
		List []*TeacherInfo `json:"list"`
	}
	TeacherInfo {
		TeacherId    int64  `json:"teacher_id"`
		TeacherName  string `json:"teacher_name"`
		XhbUserToken string `json:"xhb_user_token"`
		CampusId     int64  `json:"campus_id"`
		SchoolId     int64  `json:"school_id"`
	}
)

type (
	DepartmentListRequest {
		CampusId int64 `json:"campusId"`
	}
	DepartmentListResponse {
		DepartmentList []*DepartmentBriefInfo `json:"department_list"`
		IsOperate      bool                   `json:"isOperate"`
		IsUpload       bool                   `json:"isUpload"`
		IsMine         bool                   `json:"isMine"`
	}
	DepartmentBriefInfo {
		Title        string              `json:"title"`
		DepartmentId int64               `json:"department_id"`
		Masters      []*DepartmentMaster `json:"masters"`
		Members      []*DepartmentMember `json:"members"`
	}
)

type (
	DepartmentMasterRequest {
		DepartmentId int64 `json:"department_id"`
	}
	DepartmentMasterListResponse {
		Masters []*DepartmentMaster `json:"masters"`
	}

	DepartmentMaster {
		MasterId   int64  `json:"master_id"`
		MasterName string `json:"master_name"`
	}
)

type (
	DepartmentMemberRequest {
		DepartmentId int64 `json:"department_id"`
	}
	DepartmentMemberListResponse {
		Members []*DepartmentMember `json:"members"`
	}
	DepartmentMember {
		MemberId   int64  `json:"member_id"`
		MemberName string `json:"member_name"`
	}
)

type (
	DepartmentAddRequest {
		CampusId  int64   `json:"campus_id"`
		Title     string  `json:"title"`
		MasterIds []int64 `json:"masters,optional"`
		MemberIds []int64 `json:"members,optional"`
	}
)

type (
	DepartmentUpdateRequest {
		Title        string  `json:"title"`
		CampusId     int64   `json:"campus_id"`
		DepartmentId int64   `json:"department_id"`
		Members      []int64 `json:"members,optional"`
		Masters      []int64 `json:"masters,optional"`
	}
)

type (
	DepartmentDeleteRequest {
		CampusId     int64 `json:"campus_id"`
		DepartmentId int64 `json:"department_id"`
	}
)

type (
	DepartmentInfoRequest {
		DepartmentId int64 `json:"department_id"`
	}
	DepartmentInfoResponse {
		Title   string   `json:"title"`
		Masters []string `json:"masters"`
		Members []string `json:"members"`
	}
)

type (
	SubjectListsReponse {
		List      []*SubjectDetail `json:"list"`
		TotalPage int              `json:"total_page"`
		Count     int              `json:"count"`
		NowPage   int              `json:"now_page"`
		IsOperate bool             `json:"isOperate"`
		IsMine    bool             `json:"isMine"`
	}
	SubjectDetail {
		CampusSubjectId int64  `json:"campus_subject_id"`
		CampusId        int64  `json:"campus_id"`
		SubjectName     string `json:"subject_name"`
		Status          string `json:"status"`
		CreateTime      string `json:"create_time"`
		UpdateTime      string `json:"update_time"`
		TeacherCount    int64  `json:"teacher_count"`
	}
)

type (
	CampusSubjectListRequest {
		CampusId    int64  `json:"campus_id"`    //校区id
		SubjectName string `json:"subject_name"` //学科名称
		NowPage     int64  `json:"now_page"`
		PageSize    int64  `json:"pagesize"`
	}
)

type (
	CampusSubjectRequest {
		CampusId int64 `path:"campus_id"`
	}
	GradeClassListResponse {
		List []*GradeInfo `json:"list"`
	}
	GradeInfo {
		CampusGradeId int64        `json:"campus_grade_id"` // 年级id
		GradeId       int64        `json:"grade_id"`
		CampusId      int64        `json:"campus_id"`  // 校区id
		AliasName     string       `json:"alias_name"` // 年级别名
		Classes       []*ClassInfo `json:"classes"`    // 班级列表
	}
	ClassInfo {
		ClassesId     int64  `json:"classes_id"`
		TermId        int64  `json:"term_id"`
		ClassName     string `json:"class_name"`
		ClassNum      int64  `json:"class_num"`
		CampusId      int64  `json:"campus_id"`
		GradeId       int64  `json:"grade_id"`
		XhbClassToken string `json:"xhb_class_token"`
		BindTime      int64  `json:"bind_time"`
	}
)

type (
	InternalSubjectUpdateRequest {
		CampusId    int64  `json:"campus_id"`    //校区id
		SubjectId   int64  `json:"subject_id"`   //科目id
		SubjectName string `json:"subject_name"` //学科名称
		Status      int64  `json:"status"`       //学科状态
	}
)

type (
	InternalSubjectDeleteRequest {
		CampusId  int64   `json:"campus_id"`  //校区id
		SubjectId []int64 `json:"subject_id"` //科目id
	}
)

type (
	InternalSubjectDeleteOneRequest {
		CampusId  int64 `json:"campus_id"`  //校区id
		SubjectId int64 `json:"subject_id"` //科目id
	}
)

type (
	InternalSubjectTeacherDeleteRequest {
		CampusId  int64   `json:"campus_id"`  //校区id
		TeacherId []int64 `json:"teacher_id"` //教师关系id
		SubjectId int64   `json:"subject_id"`
	}
)

type (
	InternalSubjectAddRequest {
		Uid         int64  `json:"-,optional"`
		CampusId    int64  `json:"campus_id"`
		SubjectName string `json:"subject_name"`
		Status      int64  `json:"status"`
	}
)

type (
	InternalSubjectQueryRequest {
		CampusId int64  `json:"campus_id"`
		Query    string `json:"query"`
	}
	InternalSubjectQueryResponse {
		InternalSubjectResponse
		Subject []*InternalSubjectQueryItem `json:"subject"`
	}
	InternalSubjectResponse {
		Code int    `json:"code"`
		Desc string `json:"desc"`
	}
	InternalSubjectQueryItem {
		CampusSubjectId int64  `json:"campus_subject_id"`
		SubjectName     string `json:"subject_name"`
		Status          int64  `json:"status"`
		TeacherCount    int64  `json:"teacher_count"`
	}
)

type (
	StudentImportResponse {
		Successful bool        `json:"successful"`
		Message    string      `json:"message,omitempty"`
		Preview    []*ErrSheet `json:"preview,omitempty"`
	}
	ErrSheet {
		Table string             `json:"table"`
		Rows  []ErrStudentDetail `json:"rows"`
	}
	ErrStudentDetail {
		Key     string `json:"key"`
		Title   string `json:"title"`
		Reason  string `json:"reason"`
		Suggest string `json:"suggest"`
	}
)

type (
	EditDeviceStatusRequest {
		DeviceId     int64 `json:"deviceId"`
		CurrentState int64 `json:"currentState,optional"`
	}
)

type (
	CategoryListRequest {
		CampusId int64 `form:"campusId"`
	}
	CategoryListResponse {
		List []*Category `json:"list"`
	}
	Category {
		CategoryId   int64  `json:"categoryId"`
		CategoryName string `json:"categoryName"`
	}
)

type (
	AttributeListResponse {
		List      []*AttributeView `json:"list"`
		IsOperate bool             `json:"isOperate"`
	}
)

type (
	InternalAddAttributeRequest {
		AttributeName string `json:"attributeName"`
	}
)

type (
	AttributeId {
		AttributeId int64 `path:"attributeId"`
	}
)

type (
	InternalCommentListRequest {
		AttributeId int64  `json:"attributeId,optional"`
		Comment     string `json:"comment,optional"`
		Page        int    `json:"page,optional,default=1"`
		PageSize    int    `json:"pageSize,optional,default=10"`
	}
	InternalCommentListResponse {
		Count     int                    `json:"count"`
		List      []*InternalCommentView `json:"list"`
		IsOperate bool                   `json:"isOperate"`
	}
	InternalCommentView {
		CommentId  int64            `json:"commentId"`
		Comment    string           `json:"comment"`
		Attributes []*AttributeView `json:"attributes"`
	}
	AttributeView {
		AttributeId   int64  `json:"attributeId"`
		AttributeName string `json:"attributeName"`
	}
)

type (
	InternalAddCommentRequest {
		Comment      string  `json:"comment"`
		AttributeIds []int64 `json:"attributeIds"`
	}
)

type (
	InternalEditCommentRequest {
		CommentId    int64   `json:"commentId"`
		Comment      string  `json:"comment"`
		AttributeIds []int64 `json:"attributeIds"`
	}
)

type (
	CommentId {
		CommentId int64 `path:"commentId"`
	}
)

type (
	AppraisalCampusListResponse {
		Count       int64                  `json:"count,omitempty"`
		List        []*AppraisalCampusView `json:"list,omitempty"`
		IsAttribute bool                   `json:"isAttribute"`
		IsTag       bool                   `json:"isTag"`
	}
	AppraisalCampusView {
		CampusId int64  `json:"campusId,omitempty"`
		Name     string `json:"name,omitempty"`
	}
)

type (
	InternalTagListRequest {
		CampusId   int64  `json:"campusId"`
		CategoryId int64  `json:"categoryId,optional"`
		Name       string `json:"name,optional"`
		Page       int    `json:"page,optional,default=1"`
		PageSize   int    `json:"pageSize,optional,default=10"`
	}
	InternalTagListResponse {
		Count     int                `json:"count"`
		List      []*InternalTagView `json:"list"`
		IsOperate bool               `json:"isOperate"`
	}
	InternalTagView {
		TagId     int64          `json:"tagId"`
		TagName   string         `json:"tagName"`
		Attribute *AttributeView `json:"attribute,omitempty"`
	}
)

type (
	InternalEditTagAttributeRequest {
		TagId       int64 `json:"tagId"`
		AttributeId int64 `json:"attributeId"`
	}
)

type (
	CampusManageListRequest {
		Name     string `json:"name,optional"`
		Page     int64  `json:"page,optional,default=1"`
		PageSize int64  `json:"pageSize,optional,default=10"`
	}
	CodeCampusListResponse {
		Count int64             `json:"count,omitempty"`
		List  []*CodeCampusView `json:"list,omitempty"`
	}
	CodeCampusView {
		CampusId       int64  `json:"campusId,omitempty"`
		Name           string `json:"name,omitempty"`
		IndicatorNum   int64  `json:"indicatorNum"`
		QrNum          int64  `json:"qrNum"`
		Status         int    `json:"status"`
		IndicatorCount int    `json:"indicatorCount"` // 当前指标数
	}
)

type (
	InternalQrListRequest {
		CampusId int64 `json:"campusId"`
		Page     int   `json:"page,optional,default=1"`
		PageSize int   `json:"pageSize,optional,default=10"`
	}
	InternalQrListResponse {
		Count     int               `json:"count"`
		List      []*InternalQrList `json:"list"`
		IsOperate bool              `json:"isOperate"`
	}
	InternalQrList {
		Id           int64 `json:"id"`
		Date         int64 `json:"date"`
		IndicatorNum int64 `json:"indicatorNum"`
		Score        int64 `json:"score"`
		QrNum        int64 `json:"qrNum"`
		Status       bool  `json:"status"`
	}
)

type (
	InternalQrDetailRequest {
		Id       int64 `json:"id"`
		Page     int   `json:"page,optional,default=1"`
		PageSize int   `json:"pageSize,optional,default=10"`
	}
	InternalQrDetailResponse {
		Count int64               `json:"count"`
		List  []*InternalQrDetail `json:"list"`
	}
	InternalQrDetail {
		CodeId        int64  `json:"codeId"`
		IndicatorName string `json:"indicatorName"`
		Score         int64  `json:"score"`
		QrNum         int64  `json:"qrNum"`
	}
)

type (
	InternalCreateQrRequest {
		CampusId int64       `json:"campusId"`
		Score    int64       `json:"score"`
		Data     []*CreateQr `json:"data,optional"`
	}
	CreateQr {
		IndicatorId int64 `json:"indicatorId"`
		Number      int64 `json:"number"`
	}
)

type (
	CheckRequest {
		CampusId int64 `form:"campusId"`
	}
	CheckResult {
		List []*CheckPass `json:"list"`
		Warn []*CheckWarn `json:"warn"`
	}
	CheckPass {
		Id    int64  `json:"id"`
		Num   int    `json:"num"`
		Score int    `json:"score"`
		Grade string `json:"grade,optional"`
		Type  int    `json:"type"`
	}
	CheckWarn {
		Line      int    `json:"line"`      // 行数
		Indicator string `json:"indicator"` // 指标名称
		Desc      string `json:"desc"`      // 错误描述
		Status    string `json:"status"`    // 状态
	}
)

type (
	CreateQrFromExcelRequest {
		CampusId int64        `json:"campusId"`
		List     []*CheckPass `json:"list"`
	}
)

type (
	InternalRecoverQrRequest {
		Id int64 `json:"id"`
	}
)

type (
	IndicatorListRequest {
		CampusId int64 `json:"campusId"`
		Type     int64 `json:"type,optional"`
	}
	IndicatorListResponse {
		List []*IndicatorInfo `json:"list"`
	}

	IndicatorInfo {
		IndicatorId   int64  `json:"indicatorId,omitempty"`
		IndicatorName string `json:"indicatorName,omitempty"`
	}
)

type (
	JumpDytV2Request {
		CampusId int64 `json:"campusId"`
	}
	JumpDytV2Response {
		Auth string `json:"auth,omitempty"`
	}
)

type (
	//验证码
	VerifyCodeRequest {
		CampusId int64 `json:"campusId"`
	}
	VerifyCodeResponse {
		RealName    string `json:"realName"`
		MobilePhone string `json:"mobilePhone"`
	}
)

type (
	GetTermResponse {
		TermName  string    `json:"termName"`
		StartTime int64     `json:"startTime"`
		EndTime   int64     `json:"endTime"`
		PrevTerm  *TermInfo `json:"prevTerm"`
		NextTerm  *TermInfo `json:"nextTerm"`
	}

	TermInfo {
		TermId   int64  `json:"termId"`
		TermName string `json:"termName"`
	}
)

type (
	AdjustTermInternalRequest {
		CampusId   int64  `json:"campusId"`
		TermId     int64  `json:"termId"`
		AdjustType string `json:"adjustType"`
	}
)

type (
	GetCampusLiveConfigRequest {
		CampusId int64 `path:"campusId"`
	}
	GetCampusLiveConfigResponse {
		LimitCount int64 `json:"limitCount"`
	}
)

type (
	AppraisalSettingRequest {
		CampusId int64 `json:"campusId"`
	}
	GradeConfig {
		Positive []*GradeConfigItem `json:"positive"`
		Negative []*GradeConfigItem `json:"negative,optional"`
	}
	GradeConfigItem {
		Name  string `json:"name"`
		Score int    `json:"score"`
	}
	ScoreRange {
		Positive []int `json:"positive"`
		Negative []int `json:"negative"`
	}
	GetScoreSettingResponse {
		MaxSingleScore      int64        `json:"maxSingleScore,range=[1:100]"`
		RatingFrequency     int64        `json:"ratingFrequency,range=[0:1]"`
		RatingLimit         int64        `json:"ratingLimit"`
		HighlightRatedTime  int64        `json:"highlightRatedTime,range=[0:240]"`
		Type                int          `json:"type"`
		GradeConfig         *GradeConfig `json:"gradeConfigs"`
		ScoreRange          *ScoreRange  `json:"scoreRange"`
		IsXhbAppraiseEnable bool         `json:"isXhbAppraiseEnable"`
	}
	ExportQrRequest {
		Id int64 `path:"id"`
	}

	ExportResponse {
		Url string `json:"url,omitempty"`
	}

	LoadCommonIndicatorTableRequest {
	}
)

@server(
	port:8080
)
service controlpanel {
	@doc(
		summary: 到处二维码
	)
	@server(
		handler: AppraisalExportHandler
	)
	get /dytcontrol/appraisal/qr/export/:id(ExportQrRequest) returns(ExportResponse)
}

@server(
	jwt: Auth
)
service controlpanel {
	@doc(
		summary: 大一统学校列表
	)
	@server(
		handler: DytCampusListHandler
	)
	post /dytcontrol/campus/list(CampusListRequest) returns(CampusList)
	
	@doc(
		summary: 编辑学校信息
	)
	@server(
		handler: DytCampusUpdateHandler
	)
	post /dytcontrol/campus/update(UpdateCampusRequest) returns(BoolResponse)
	
	@doc(
		summary: 绑定教师列表
	)
	@server(
		handler: DytCampusBindManagerListHandler
	)
	post /dytcontrol/campus/bindManager/list(BindTeacherRequest) returns(BindTeacherResponse)
	
	@doc(
		summary: 功能列表
	)
	@server(
		handler: DytModuleListHandler
	)
	post /dytcontrol/module/list() returns(ModuleList)
	
	@doc(
		summary: 学校功能列表
	)
	@server(
		handler: DytCampusModuleListHandler
	)
	post /dytcontrol/campus/module/list(CampusModuleListRequest) returns(CampusModuleListResponse)
	
	@doc(
		summary: 添加学校功能
	)
	@server(
		handler: DytCampusModuleAddHandler
	)
	post /dytcontrol/campus/module/add(AddCampusModuleRequest) returns(BoolResponse)
	
	@doc(
		summary: 删除学校功能
	)
	@server(
		handler: DytCampusModuleDeleteHandler
	)
	post /dytcontrol/campus/module/delete/:moduleId(DeleteCampusModuleRequest) returns(BoolResponse)
	
	@doc(
		summary: 已开通功能列表
	)
	@server(
		handler: DytCampusOpenModuleListHandler
	)
	post /dytcontrol/campus/openModule/list/:campusId(OpenModuleListRequest) returns(OpenModuleListResponse)
	
	@doc(
		summary: 学校设备列表
	)
	@server(
		handler: DytCampusDeviceListHandler
	)
	post /dytcontrol/campus/device/list(DeviceListRequest) returns(DeviceListResponse)
	
	@doc(
		summary: 添加学校设备
	)
	@server(
		handler: DytCampusDeviceAddHandler
	)
	post /dytcontrol/campus/device/add(AddDeviceRequest) returns(BoolResponse)
	
	@doc(
		summary: 编辑学校设备
	)
	@server(
		handler: DytCampusDeviceUpdateHandler
	)
	post /dytcontrol/campus/device/update(EditDeviceRequest) returns(BoolResponse)
	
	@doc(
		summary: 删除学校设备
	)
	@server(
		handler: DytCampusDeviceDeleteHandler
	)
	get /dytcontrol/campus/device/delete/:deviceId(DeleteDeviceRequest) returns(BoolResponse)
	
	@doc(
		summary: 编辑设备状态
	)
	@server(
		handler: DytCampusDeviceStatusEditHandler
	)
	post /dytcontrol/campus/device/edit-current-status(EditDeviceStatusRequest) returns(BoolResponse)
	
	@doc(
		summary: 学校年级班级列表
	)
	@server(
		handler: DytCampusGradeAndClassListHandler
	)
	post /dytcontrol/campus/grades-and-classes(GetGradesAndClassesRequest) returns(GradesAndClassesResponse)
	
	@doc(
		summary: 区域列表
	)
	@server(
		handler: DytDistrictHandler
	)
	get /dytcontrol/district/:pId(CampusDistrictRequest) returns(CampusDistrictResponse)
	
	@doc(
		summary: 获取大一统认证信息
	)
	@server(
		handler: DytTeacherHandler
	)
	post /dytcontrol/jump-dyt(JumpDytRequest) returns(JumpDytResponse)
	
	@doc(
		summary: 开通大一统
	)
	@server(
		handler: DytImportHandler
	)
	post /dytcontrol/create-dyt(CreateCampusRequest)
	
	@doc(
		summary: 云盘空间列表
	)
	@server(
		handler: DytSpaceListHandler
	)
	post /dytcontrol/campus/space/list(CampusSpaceListRequest) returns(CampusSpaceListResponse)
	
	@doc(
		summary: 调整云盘空间
	)
	@server(
		handler: DytSpaceEditHandler
	)
	post /dytcontrol/campus/space/edit(EditSpaceRequest) returns(BoolResponse)
	
	@doc(
		summary: dytcontrol/campus/space/campuses
	)
	@server(
		handler: DytSpaceCampusesHandler
	)
	post /dytcontrol/campus/space/campuses(CampusInfosRequest) returns(CampusesResponse)
	
}

@server(
	jwt: Auth
	folder: ControlPanelRest
)
service controlpanel {
	
	@doc(
		summary: /dytcontrol/import/:campusId()
	)
	@server(
		handler: CampusImportHandler
	)
	post /dytcontrol/import/:campusId(CampusId) returns(CampusImportResponse)
	
	@doc(
		summary: /dytcontrol/import/check-limit/:campusId()
	)
	@server(
		handler: CheckCampusImportLimitHandler
	)
	get /dytcontrol/import/check-limit/:campusId(ImportCheckLimitRequest)
	
	@doc(
		summary: 学校管理列表
	)
	@server(
		handler: CampusManageListHandler
	)
	post /dytcontrol/campus/manageList(CampusManageListRequest) returns(CampusManageListRequest)
	
	@doc(
		summary: 加载学校开通的通用指标列表
	)
	@server(
		handler: CommonIndicatorListHandler
	)
	post /dytcontrol/campus/common-indicator-list(LoadCommonIndicatorTableRequest) returns(CommonIndicatorLoadResponse)
	
	@doc(
		summary: 加载全部通用指标
	)
	@server(
		handler: CommonIndicatorLoadHandler
	)
	get /dytcontrol/campus/common-indicator-load/:campusId(LoadCommonIndicatorTableRequest) returns(CommonIndicatorLoadResponse)
	
	@doc(
		summary: 学校添加通用指标
	)
	@server(
		handler: CampusAddCommIndicatorHandler
	)
	post /dytcontrol/campus/common-indicator-add(CommonIndicatorAddRequest)
	
	@doc(
		summary: 宝贝别害怕
	)
	@server(
		handler: BaoBeiHandler
	)
	post /dytcontrol/campus/module/baobei(UpdateBaoBeiRequest) returns(BoolResponse)
	
	@doc(
		summary: 编辑功能
	)
	@server(
		handler: UpdateCampusModuleHandler
	)
	post /dytcontrol/campus/module/update(UpdateCampusModuleRequest) returns(BoolResponse)
	
	@doc(
		summary: 家长导入
	)
	@server(
		handler: ImportParentOnlyHandler
	)
	post /dytcontrol/import/parent/:campusId(CampusId) returns(CampusImportResponse)
	
	@doc(
		summary: 老师导入
	)
	@server(
		handler: ImportTeacherOnlyHandler
	)
	post /dytcontrol/import/teacher/:campusId(CampusId) returns(CampusImportResponse)
	
	@doc(
		summary: 部门导入
	)
	@server(
		handler: ImportDepartmentOnlyHandler
	)
	post /dytcontrol/import/department/:campusId(CampusId) returns(CampusImportResponse)
	
	@doc(
		summary: 教室导入
	)
	@server(
		handler: ImportClassOnlyHandler
	)
	post /dytcontrol/import/class/:campusId(CampusId) returns(CampusImportResponse)
	
	@doc(
		summary: 年级列表
	)
	@server(
		handler: GradeListHandler
	)
	post /dytcontrol/campus/grade/list/:campusId(CampusId) returns(GradeListResponse)
	
	@doc(
		summary: 添加年级
	)
	@server(
		handler: GradeAddHandler
	)
	post /dytcontrol/campus/grade/add(AddGradeRequest) returns(BoolResponse)
	
	@doc(
		summary: 编辑年级
	)
	@server(
		handler: GradUpdateHandler
	)
	post /dytcontrol/campus/grade/update(ActGradeRequest) returns(BoolResponse)
	
	@doc(
		summary: 删除年级
	)
	@server(
		handler: GradeDeleteHandler
	)
	post /dytcontrol/campus/grade/delete(ActGradeRequest) returns(BoolResponse)
	
	@doc(
		summary: 标准年级列表
	)
	@server(
		handler: GradeStandardListHandler
	)
	post /dytcontrol/campus/standardGrade/list/:campusId(CampusId) returns(StandardGradeListResponse)
	
	@doc(
		summary: 班级列表
	)
	@server(
		handler: ClassListHandler
	)
	post /dytcontrol/campus/class/list(ClassesListRequest) returns(ClassesListResponse)
	
	@doc(
		summary: 班级详情
	)
	@server(
		handler: ClassDetailHandler
	)
	post /dytcontrol/campus/class/detail(ClassDetailRequest) returns(ClassDetailResponse)
	
	@doc(
		summary: 班级内教师列表
	)
	@server(
		handler: ClassTeacherListHandler
	)
	post /dytcontrol/campus/class/teacher/list/:classId(ClassIdRequest) returns(TeacherListResponse)
	
	@doc(
		summary: 班级内家长列表
	)
	@server(
		handler: ClassParentListHanlder
	)
	post /dytcontrol/campus/class/parent/list/:classId(ClassIdRequest) returns(ParentListResponse)
	
	@doc(
		summary: 添加班级
	)
	@server(
		handler: ClassAddHandler
	)
	post /dytcontrol/campus/class/add(AddClassRequest) returns(BoolResponse)
	
	@doc(
		summary: 编辑班级
	)
	@server(
		handler: ClassUpdateHandler
	)
	post /dytcontrol/campus/class/update(UpdateClassRequest) returns(BoolResponse)
	
	@doc(
		summary: 删除班级
	)
	@server(
		handler: ClassDeleteHander
	)
	post /dytcontrol/campus/class/delete(DeleteClassRequest) returns(BoolResponse)
	
	@doc(
		summary: 用户老师列表
	)
	@server(
		handler: UserTeacherListHandler
	)
	post /dytcontrol/campus/user/teacherlist(TeacherListInternalRequest) returns(DytTeacherListResponse)
	
	@doc(
		summary: 用户老师信息
	)
	@server(
		handler: UserTeacherInfoHandler
	)
	post /dytcontrol/campus/user/teacherinfo(TeacherInfoInternalRequest) returns(TeacherDetail)
	
	@doc(
		summary: 添加用户老师
	)
	@server(
		handler: UserTeacherAddHandler
	)
	post /dytcontrol/campus/user/teacheradd(TeacherActInternalRequest) returns(TeacherActReponse)
	
	@doc(
		summary: 编辑用户老师
	)
	@server(
		handler: UserTeacherEditHandler
	)
	post /dytcontrol/campus/user/teacheredit(TeacherActInternalRequest) returns(TeacherActReponse)
	
	@doc(
		summary: 用户老师删除
	)
	@server(
		handler: UserTeacherDelHandler
	)
	post /dytcontrol/campus/user/teacherdel(TeacherInfoInternalRequest) returns(TeacherActReponse)
	
	@doc(
		summary: 用户老师批量删除
	)
	@server(
		handler: UserTeacherBatchDelHandler
	)
	post /dytcontrol/campus/user/teacher/batch/delete(BatchDeleteTeacherInternalRequest) returns(TeacherActReponse)
	
	@doc(
		summary: 全部用户老师
	)
	@server(
		handler: UserTeacherAllHandler
	)
	post /dytcontrol/campus/user/teacherall(TeacherInfoQueryInternalRequest) returns(CampusTeacherList)
	
	@doc(
		summary: 部门列表
	)
	@server(
		handler: DepartmentListHandler
	)
	post /dytcontrol/campus/department/list(DepartmentListRequest) returns(DepartmentListResponse)
	
	@doc(
		summary: 部门管理员
	)
	@server(
		handler: DepartmentMasterListHandler
	)
	post /dytcontrol/campus/department/master/list(DepartmentMasterRequest) returns(DepartmentMasterListResponse)
	
	@doc(
		summary: 部门成员
	)
	@server(
		handler: DepartmentMemberListHandler
	)
	post /dytcontrol/campus/department/member/list(DepartmentMemberRequest) returns(DepartmentMemberListResponse)
	
	@doc(
		summary: 部门添加
	)
	@server(
		handler: DepartmentAddHandler
	)
	post /dytcontrol/campus/department/add(DepartmentAddRequest) returns(BoolResponse)
	
	@doc(
		summary: 部门更新
	)
	@server(
		handler: DepartmentUpdateHandler
	)
	post /dytcontrol/campus/department/update(DepartmentUpdateRequest) returns(BoolResponse)
	
	@doc(
		summary: 部门删除
	)
	@server(
		handler: DepartmentDelHandler
	)
	post /dytcontrol/campus/department/delete(DepartmentDeleteRequest) returns(BoolResponse)
	
	@doc(
		summary: 部门信息
	)
	@server(
		handler: DepartmentInfoHandler
	)
	post /dytcontrol/campus/department/info(DepartmentInfoRequest) returns(DepartmentInfoResponse)
	
	@doc(
		summary: 校区所有学科
	)
	@server(
		handler: SubjectAllHandler
	)
	get /dytcontrol/campus/subject/subjectall/:campus_id(CampusSubjectRequest) returns(SubjectListsReponse)
	
	@doc(
		summary: 校区学科列表
	)
	@server(
		handler: SubjectListHandler
	)
	post /dytcontrol/campus/subject/subjectlist(CampusSubjectListRequest) returns(SubjectListsReponse)
	
	@doc(
		summary:  获取年级班级
	)
	@server(
		handler: GradeClassesInfoHandler
	)
	get /dytcontrol/campus/class/gradeclasses/:campus_id(CampusSubjectRequest) returns(GradeClassListResponse)
	
	@doc(
		summary: 编辑学科
	)
	@server(
		handler: SubjectActHandler
	)
	post /dytcontrol/campus/subject/subjectact(InternalSubjectUpdateRequest) returns(BoolResponse)
	
	@doc(
		summary: 批量删除学科
	)
	@server(
		handler: SubjectBatchDelHandler
	)
	post /dytcontrol/campus/subject/batchdelete(InternalSubjectDeleteRequest) returns(BoolResponse)
	
	@doc(
		summary: 删除单个学科
	)
	@server(
		handler: SubjectDelHandler
	)
	post /dytcontrol/campus/subject/delete(InternalSubjectDeleteOneRequest) returns(BoolResponse)
	
	@doc(
		summary: 学科中移除老师
	)
	@server(
		handler: SubjectTeacherDelHandler
	)
	post /dytcontrol/campus/subject/removeteacher(InternalSubjectTeacherDeleteRequest) returns(BoolResponse)
	
	@doc(
		summary: 学科添加
	)
	@server(
		handler: SubjectAddHandler
	)
	post /dytcontrol/campus/subject/add(InternalSubjectAddRequest) returns(BoolResponse)
	
	@doc(
		summary: 通过学科名字查找
	)
	@server(
		handler: SubjectQueryByNameHandler
	)
	post /dytcontrol/campus/subject/querybyname(InternalSubjectQueryRequest) returns(InternalSubjectQueryResponse)
	
	@doc(
		summary: 学生导入
	)
	@server(
		handler: StudentImportHandler
	)
	post /dytcontrol/campus/student/import/:campusId(CampusId) returns(StudentImportResponse)
	
	@doc(
		summary: 编辑设备状态
	)
	@server(
		handler: DeviceEditStatusHandler
	)
	post /dytcontrol/campus/device/current-state(EditDeviceStatusRequest) returns(BoolResponse)
	
	@doc(
		summary: 标签分类列表
	)
	@server(
		handler: CategoryListHandler
	)
	get /dytcontrol/appraisal/category/list(CategoryListRequest) returns(CategoryListResponse)
	
	@doc(
		summary: 属性列表
	)
	@server(
		handler: AttributeListHandler
	)
	get /dytcontrol/appraisal/attribute/list() returns(AttributeListResponse)
	
	@doc(
		summary: 新增属性
	)
	@server(
		handler: AttributeAddHandler
	)
	post /dytcontrol/appraisal/attribute/add(InternalAddAttributeRequest)
	
	@doc(
		summary: 删除属性
	)
	@server(
		handler: AttributeDelHandler
	)
	get /dytcontrol/appraisal/attribute/delete/:attributeId(AttributeId)
	
	@doc(
		summary: 评语库
	)
	@server(
		handler: CommentListHandler
	)
	post /dytcontrol/appraisal/comment/list(InternalCommentListRequest) returns(InternalCommentListResponse)
	
	@doc(
		summary: 新增评语
	)
	@server(
		handler: CommentAddHandler
	)
	post /dytcontrol/appraisal/comment/add(InternalAddCommentRequest)
	
	@doc(
		summary: 编辑评语
	)
	@server(
		handler: CommentEditHandler
	)
	post /dytcontrol/appraisal/comment/edit(InternalEditCommentRequest)
	
	@doc(
		summary: 删除评语
	)
	@server(
		handler: CommentDelHandler
	)
	get /dytcontrol/appraisal/comment/delete/:commentId(CommentId)
	
	@doc(
		summary: 晓评价学校列表
	)
	@server(
		handler: CampusAppraisalListHandler
	)
	post /dytcontrol/appraisal/campus/list(CampusManageListRequest) returns(AppraisalCampusListResponse)
	
	@doc(
		summary: 标签列表
	)
	@server(
		handler: TagListHandler
	)
	post /dytcontrol/appraisal/tag/list(InternalTagListRequest) returns(InternalTagListResponse)
	
	@doc(
		summary: 配置属性
	)
	@server(
		handler: AttributeTagEditHandler
	)
	post /dytcontrol/appraisal/tag/attribute/config(InternalEditTagAttributeRequest)
	
	@doc(
		summary: 导入评语
	)
	@server(
		handler: CommentImportHandle
	)
	post /dytcontrol/appraisal/comment/import()
	
	@doc(
		summary: 卡片二维码学校列表
	)
	@server(
		handler: CampusCodeListHandle
	)
	post /dytcontrol/appraisal/qr/campus/list(CampusManageListRequest) returns(CodeCampusListResponse)
	
	@doc(
		summary: 二维码生成列表
	)
	@server(
		handler: QrListHandler
	)
	post /dytcontrol/appraisal/qr/list(InternalQrListRequest) returns(InternalQrListResponse)
	
	@doc(
		summary: 查看二维码详情
	)
	@server(
		handler: QrDetailHandler
	)
	post /dytcontrol/appraisal/qr/detail(InternalQrDetailRequest) returns(InternalQrDetailResponse)
	
	@doc(
		summary: 生成二维码
	)
	@server(
		handler: QrCreateHandler
	)
	post /dytcontrol/appraisal/qr/create(InternalCreateQrRequest)
	
	@doc(
		summary: 检测通过上传文件创建生成二维码数据正确性
	)
	@server(
		handler: QrCheckingCreateByExcel
	)
	post /dytcontrol/indicator/checking(CheckRequest) returns(CheckResult)
	
	@doc(
		summary: 检测通过上传文件创建生成二维码
	)
	@server(
		handler: QrCreateByExcelHandler
	)
	post /dytcontrol/indicator/generate(CreateQrFromExcelRequest)
	
	@doc(
		summary: 回收卡片
	)
	@server(
		handler: QrRecoverHandler
	)
	post /dytcontrol/appraisal/qr/recover(InternalRecoverQrRequest)
	
	@doc(
		summary: 指标列表
	)
	@server(
		handler: IndicatorListHandler
	)
	post /dytcontrol/appraisal/indicator/list(IndicatorListRequest) returns(IndicatorListResponse)
	
	@doc(
		summary: 获取学校评价设置
	)
	@server(
		handler: AppraisalSettingHandler
	)
	get /dytcontrol/appraisal/score/setting(AppraisalSettingRequest) returns(GetScoreSettingResponse)
	
	@doc(
		summary: JumpDytV2
	)
	@server(
		handler: JumpDytV2Handler
	)
	post /dytcontrol/jump-dyt/v2(JumpDytV2Request) returns(JumpDytV2Response)
	
	@doc(
		summary: 发送验证码
	)
	@server(
		handler: VerifyCodeHandler
	)
	post /dytcontrol/verifycode(VerifyCodeRequest) returns(VerifyCodeResponse)
	
	@doc(
		summary: 学期信息
	)
	@server(
		handler: TermInfoGetHandler
	)
	get /dytcontrol/campus/class/term/info/:campusId(CampusId) returns(GetTermResponse)
	
	@doc(
		summary: 变更学期
	)
	@server(
		handler: TermAdjustHandler
	)
	post /dytcontrol/campus/class/term/adjust(AdjustTermInternalRequest)
	
	@doc(
		summary: 获取直播配置
	)
	@server(
		handler: CampusLiveGetConfigHandler
	)
	get /dytcontrol/live/get-config/:campusId(GetCampusLiveConfigRequest) returns(GetCampusLiveConfigResponse)
	
}