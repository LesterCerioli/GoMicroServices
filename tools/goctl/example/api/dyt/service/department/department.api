type DepartmentListRequest {
}

type DepartmentListResponse {
	Children []*Department `json:"children"`
}

type AddDepartmentRequest {
	Title string `json:"title"`
}

type BatchAddDepartmentDytRequest { // 批量添加部门
	Titles []string `json:"titles"` // 部门名称数组
}

type DelDepartmentRequest {
	DepartmentId int64 `json:"departmentId"`
}

type EditDepartmentRequest {
	DepartmentId int64  `json:"departmentId"`
	Title        string `json:"title"`
}

type Department {
	Id       int64         `json:"id,optional"`
	Name     string        `json:"name,optional"`
	Number   int64         `json:"number"`
	Children []*Department `json:"children"`
}

type DepartmentTeachersRequest {
	DepartmentId int64 `form:"departmentId"`
}

type DepartmentTeachersResponse {
	OutDepartmentTeachers []*DepartmentTeacher `json:"outDepartmentTeachers"`
}

type UseDefaultDepartmentAskStatusDytResponse {
	Asked bool `json:"asked"` // 是否已询问过
}

type DepartmentTeacher {
	TeacherId   int64  `json:"teacherId"`
	TeacherName string `json:"teacherName"`
}

type DepartmentMembersRequest {
	KeyWord      string `form:"keyWord,optional"json:"keyWord,optional"`
	Page         int    `form:"page,optional"json:"page,optional"`
	PageSize     int    `form:"pageSize,optional"json:"pageSize,optional"`
	DepartmentId int64  `form:"departmentId,optional"json:"departmentId,optional"`
}

type DepartmentMembersResponse {
	DepartmentMembers []*DepartmentMember `json:"departmentMembers"`
	Total             int                 `json:"total"`
}

type DepartmentMember {
	DepartmentMemberId int64  `json:"departmentMemberId"`
	EncryptMobile      string `json:"encryptMobile"`
	IsMaster           int    `json:"isMaster"`
	MainSubjectName    string `json:"mainSubjectName"`
	MemberId           int64  `json:"memberId"`
	Mobile             string `json:"mobile"`
	Name               string `json:"name"`
}

type AddDepartmentMemberRequest {
	DepartmentId int64                  `json:"departmentId"`
	Members      []*AddDepartmentMember `json:"members"`
}

type UpdateDepartmentMemberDytRequest {
	DepartmentMemberId int64 `json:"departmentMemberId"` // 部门-成员 ID (非教师 ID，部门-成员关系 ID)
	IsMaster           int   `json:"isMaster"`           // 是否为负责人 ，0-否，1-是
}

type DelDepartmentMemberRequest {
	DepartmentMemberIds []int64 `json:"departmentMemberIds"`
}

type AddDepartmentMember {
	MemberId int64 `json:"memberId"`
	IsMaster int8  `json:"isMaster"`
}

type ImportRequest {
	File string `json:"file"`
}

type ImportResponse {
	TaskId int64 `json:"taskId"`
}

type ImportUpdateRequest {
	Code string `path:"code"` // 验证码
}

type DepartmentTeacherListRequest {
	WithXhb     bool `form:"withXhb"`
	OnlyBind    bool `form:"onlyBind"`
	ContainSelf bool `form:"containSelf"`
	Other       bool `form:"other,optional,default=false"`
}
type DepartmentTeacherItem {
	Id       int64                 `json:"id"`
	Name     string                `json:"name"`
	Children []*DepartmentChildren `json:"children"`
}

type DepartmentChildren {
	Id            int64  `json:"id"`
	Name          string `json:"name"`
	XhbUserToken  string `json:"xhbUserToken,omitempty"`
	XhbUserName   string `json:"xhbUserName,omitempty"`
	XhbUserAvatar string `json:"xhbUserAvatar,omitempty"`
	BindXhb       bool   `json:"bindXhb"`
}

@server(
	host: 0.0.0.0
	port: 8080
	jwt: Auth
)
service department {
	@doc(
		summary: 新增部门
	)
	@server(
		handler: addDepartmentHandler
	)
	post /department/dyt/add(AddDepartmentRequest)
	
	@doc(
		summary: 删除部门
	)
	@server(
		handler: delDepartmentHandler
	)
	post /department/dyt/del(DelDepartmentRequest)
	
	@doc(
		summary: 编辑部门
	)
	@server(
		handler: editDepartmentHandler
	)
	post /department/dyt/update(EditDepartmentRequest)
	
	@doc(
		summary: 部门列表
	)
	@server(
		handler: departmentListHandler
	)
	get /department/dyt/list(DepartmentListRequest) returns(DepartmentListResponse)
	
	@doc(
		summary: 教师列表
	)
	@server(
		handler: departmentTeacherListHandler
	)
	get /department/dyt/teachers(DepartmentTeachersRequest) returns(DepartmentTeachersResponse)
	
	@doc(
		summary: 部门成员列表
	)
	@server(
		handler: departmentMembersHandler
	)
	get /department/dyt/member/list(DepartmentMembersRequest) returns(DepartmentMembersResponse)
	
	@doc(
		summary: 添加部门成员
	)
	@server(
		handler: addDepartmentMemberHandler
	)
	post /department/dyt/member/add(AddDepartmentMemberRequest)
	
	@doc(
		summary: 更新部门成员
	)
	@server(
		handler: updateDepartmentMemberHandler
	)
	post /department/dyt/member/update(UpdateDepartmentMemberDytRequest)
	
	@doc(
		summary: 删除部门成员
	)
	@server(
		handler: delDepartmentMemberHandler
	)
	post /department/dyt/member/del(DelDepartmentMemberRequest)
	
	@doc(
		summary: 批量添加部门信息
	)
	@server(
		handler: DytDepartmentBatchAddHandler
	)
	post /department/dyt/batch-add(BatchAddDepartmentDytRequest)
	
	@doc(
		summary: 是否已询问过用户是否使用默认部门
	)
	@server(
		handler: DytGetUseDefaultDepartmentsAskStatusHandler
	)
	get /department/dyt/get-ask() returns(UseDefaultDepartmentAskStatusDytResponse)
	
	@doc(
		summary: 设置是否已询问过用户是否使用默认部门
	)
	@server(
		handler: DytSetUseDefaultDepartmentsAskStatusHandler
	)
	post /department/dyt/set-ask()
}

@server(
	jwt: Auth
	folder: imports
)

service department {
	@doc(
		summary: send template sms code
	)
	@server(
		handler: SendTemplateCode
	)
	get /department/import/send/sms()
	
	@doc(
		summary: 下载导入部门成员模板
	)
	@server(
		handler: ImportTemplateHandler
	)
	get /department/dyt/import/template()
	
	@doc(
		summary: 导入部门成员
	)
	@server(
		handler: ImportsHandler
	)
	post /department/dyt/import(ImportRequest) returns(ImportResponse)
	
	@doc(
		summary: 下载更新导入部门成员模板
	)
	@server(
		handler: ImportUpdateTemplateHandler
	)
	get /department/dyt/import/template/:code(ImportUpdateRequest)
	
	@doc(
		summary: 更新导入部门成员
	)
	@server(
		handler: ImportUpdateHandler
	)
	post /department/dyt/update/import(ImportRequest) returns(ImportResponse)
}

@server(
	jwt: Auth
	folder: list
)

service department {
	@doc(
		summary: 部门架构教师列表
	)
	@server(
		handler: listDepartmentTeacher
	)
	get /department/teacher/list(DepartmentTeacherListRequest) returns([]*DepartmentTeacherItem)
}