info(
	title: 学生
	desc: 学生相关api，大一统版本
	author: Jancd
	email: sergeychang@gmail.com
)

type AddStudentDytRequest {
	CampusId    int64            `json:"-,optional"`
	ClassId     int64            `json:"classId"`
	Name        string           `json:"name"`
	Avatar      []string         `json:"avatar,optional"` // 头像
	Mobile      string           `json:"mobile,optional"`
	StudentCode string           `json:"studentCode"` // 学号
	IdNumber    string           `json:"idNumber,optional"`
	Gender      int64            `json:"gender,default=0"` // 男1女2,其他数字都为未知
	Parents     []*AddParentInfo `json:"parents,optional,omitempty"`
	Places      []*PlacesInfoDyt `json:"places,optional,omitempty"`
}

type AddClassStudentDytRequest {
	CampusId    int64            `json:"-,optional"`
	ClassId     int64            `json:"classId"`
	Name        string           `json:"name"`
	Avatar      []string         `json:"avatar,optional"` // 头像
	StudentCode string           `json:"studentCode"`     // 学号
	IdNumber    string           `json:"idNumber,optional"`
	Gender      int64            `json:"gender,default=0"` // 男1女2,其他数字都为未知
	Parents     []*AddParentInfo `json:"parents,optional,omitempty"`
}

type UpdateStudentDytRequest {
	Id          int64                     `json:"id,optional"`
	StudentId   string                    `json:"studentId,optional"`
	CampusId    int64                     `json:"-,optional"`
	ClassId     int64                     `json:"classId,optional"`
	Name        string                    `json:"name"`
	Avatar      []string                  `json:"avatar,optional"`
	Mobile      string                    `json:"mobile,optional"`
	StudentCode string                    `json:"studentCode"`
	IdNumber    string                    `json:"idNumber,optional"`
	Gender      int64                     `json:"gender,default=0"` // 男1女2,其他数字都为未知
	Parents     []*UpdateParentsWithClass `json:"parents,optional,omitempty"`
	Places      []*PlacesInfoDyt          `json:"places,optional,omitempty"`
}

type UpdateParentsWithClass {
	Relationship string   `json:"relationship"`
	Avatar       []string `json:"avatar,optional"`
	Mobile       string   `json:"mobile"`
}

type UpdateClassStudentDytRequest {
	Id          string                    `json:"id"`
	CampusId    int64                     `json:"-,optional"`
	ClassId     int64                     `json:"classId"`
	Name        string                    `json:"name"`
	Avatar      []string                  `json:"avatar,optional"`
	StudentCode string                    `json:"studentCode"`
	IdNumber    string                    `json:"idNumber,optional"`
	Gender      int64                     `json:"gender,default=0"` // 男1女2,其他数字都为未知
	Parents     []*ParentInfoDytForUpdate `json:"parents,optional,omitempty"`
}

type ParentInfoDytForUpdate {
	RelationshipId int64    `json:"rId,optional"`
	Relationship   string   `json:"relationship,optional"`
	Mobile         string   `json:"mobile,optional"`
	Avatar         []string `json:"avatar,optional"`
}

type ParentInfoDyt {
	Relationship    RoleAlias    `json:"relationship,optional"`
	UserId          string       `json:"userId,optional"`
	Mobile          string       `json:"mobile,optional"`
	Avatar          []string     `json:"avatar,optional"`
	Name            string       `json:"name"`
	Class           *ClassInfo   `json:"classInfo,omitempty"`
	InterestClasses []*ClassInfo `json:"interestClasses,omitempty"`
}

type AddParentInfo {
	Relationship string   `json:"relationship,optional"`
	Mobile       string   `json:"mobile,optional"`
	Avatar       []string `json:"avatar,optional"`
}

type ParentEnterClassRequest {
	ClassroomId string          `json:"classroomId"`
	StudentId   string          `json:"studentId"`
	Parents     []AddParentInfo `json:"parents"`
}

type ParentEnterClassResponse {
}

type ParentLeaveClassRequest {
	ClassroomId   string   `json:"classroomId"`
	StudentId     string   `json:"studentId"`
	ParentsMobile []string `json:"parentsMobile"`
}

type ParentLeaveClassResponse {
}

type UnbindParentsRequest {
	StudentId     string   `json:"studentId"`
	ParentsMobile []string `json:"parentsMobile"`
}

type UnbindParentsResponse {
}

type PlacesInfoDyt {
	PlaceTypeId   int64  `json:"placeTypeId,optional,omitempty"`
	PlaceId       int64  `json:"placeId,optional,omitempty"`
	PlaceTypeName string `json:"placeTypeName,optional,omitempty"`
	PlaceName     string `json:"placeName,optional,omitempty"`
}

type RoleAlias {
	Alias string `json:"alias"`
	Map   string `json:"map"`
}

type GetStudentInfoDytRequest {
	StudentId string `path:"studentId"`
}

type GetClassStudentInfoDytRequest {
	StudentId   string `form:"id"`
	ClassroomId string `form:"classroomId"`
}

type DeleteStudentDytRequest {
	Id int64 `path:"id"`
}

type h5CampusStudentListResponse {
	List []*h5CampusStudentItem `json:"list"`
}

type h5CampusStudentItem {
	StudentProfileId int64  `json:"studentProfileId"`
	Name             string `json:"name"`
	Avatar           string `json:"avatar"`
	Gender           int64  `json:"gender"`
	Code             string `json:"code"`
	IdNumber         string `json:"idNumber"`
	ClassId          int64  `json:"classId"`
	CampusId         int64  `json:"campusId"`
	CampusGradeId    int64  `json:"campusGradeId"`
	GradeClassName   string `json:"gradeClassName"`
	ClassName        string `json:"className,omitempty"`
	CampusGradeName  string `json:"campusGradeName,omitempty"`
	// 班主任
	Master      string        `json:"master"`
	MasterPhone string        `json:"masterPhone"`
	Roles       []*ParentRole `json:"roles"`
}

type ParentRole {
	// 角色名称，如：爸爸
	RoleName string `json:"roleName"`
	Phone    string `json:"phone"`
}

type GetClassStudentInfoDytResponse {
	CampusId    int64            `json:"-"`
	GradeId     int64            `json:"gradeId"`
	ClassId     int64            `json:"classId"`
	GradeClass  string           `json:"gradeClass"`
	Name        string           `json:"name"`
	Mobile      string           `json:"mobile"`
	Avatar      []string         `json:"avatar"`
	H5Url       string           `json:"h5Url"`
	StudentCode string           `json:"studentCode"`
	IdNumber    string           `json:"idNumber"`
	Gender      int64            `json:"gender"`
	Parents     []*ParentInfoDyt `json:"parents"`
	Places      []*PlacesInfoDyt `json:"places"`
}

type GetParentsRoleResponse {
	List []RoleAlias `json:"list"`
}

type GetStudentParentBindingListRequest {
	ClassId     int64  `form:"classId"`
	StudentName string `form:"studentName,optional"`
}

type StudentListRequest {
	ClassId       int64  `json:"classId,optional"`
	NowPage       int    `json:"nowPage,optional,default=1"`
	PageSize      int    `json:"pageSize,optional,default=12"`
	SearchType    int64  `json:"searchType,optional"` // 1-学生姓名，2-成长记录，3-学生编号，4-地点
	SearchContent string `json:"searchContent,optional"`
}

type ClassStudentListRequest {
	ClassId       int64  `json:"classId"`
	SearchContent string `json:"searchContent"`
}

type ClassStudentListResponse {
	ClassroomId string         `json:"classroomId"`
	Count       int64          `json:"count"`
	StudentList []*StudentInfo `json:"studentList"`
}

type StudentListResponse {
	TotalPage   int            `json:"totalPage,omitempty"`
	Count       int64          `json:"count"`
	NowPage     int            `json:"nowPage,omitempty"`
	StudentList []*StudentInfo `json:"studentList"`
}

type StudentInfo {
	StudentId       string            `json:"studentId"` // 学生个人用户id，来自晓黑板 C 端
	Name            string            `json:"name"`
	Gender          int64             `json:"gender"`
	GradeClassName  string            `json:"className,omitempty"`
	InterestClasses []string          `json:"interestClasses,omitempty"`
	StudentCode     string            `json:"studentCode,omitempty"`
	H5Url           string            `json:"url,omitempty"`
	Places          string            `json:"places,omitempty"`
	ParentNum       int64             `json:"parentNum"`
	FaceEntryNum    int64             `json:"faceEntryNum,omitempty"`
	FaceTotalNum    int64             `json:"faceTotalNum,omitempty"`
	Parents         []ParentBriefInfo `json:"parents,omitempty"`
	CreateTime      int64             `json:"-,omitempty,optional"`
}

type ParentBriefInfo {
	Relation string `json:"relation"`
	Mobile   string `json:"mobile"`
}

// 学生花名册列表
type StudentRosterList {
	Total       int              `json:"total"`
	Count       int64            `json:"count"`
	NowPage     int              `json:"nowPage"`
	StudentList []*StudentRoster `json:"studentList"`
}

type StudentRoster {
	StudentId       string            `json:"studentId"` // 学生个人用户id，来自晓黑板 C 端
	Name            string            `json:"name"`
	Gender          int64             `json:"gender"`
	ParentCount     int64             `json:"parentCount"`
	Parents         []ParentBriefInfo `json:"parents,omitempty"`
	GradeClassName  string            `json:"className,omitempty"`
	InterestClasses []string          `json:"interestClasses,omitempty"`
	StudentCode     string            `json:"studentCode"`
	Places          string            `json:"places,omitempty"`
}

type StudentQRCodeRequest {
	ClassId       int64  `json:"classId,optional"`
	NowPage       int    `json:"nowPage,optional,default=1"`
	PageSize      int    `json:"pageSize,optional,default=12"`
	SearchType    int64  `json:"searchType,optional"` // 1-学生姓名，2-成长记录，3-学生编号，4-地点
	SearchContent string `json:"searchContent,optional"`
}

type StudentQRCodeResponse {
	TotalPage   int                  `json:"totalPage"`
	Count       int64                `json:"count"`
	NowPage     int                  `json:"nowPage"`
	StudentList []*StudentQRCodeInfo `json:"studentList"`
}

type StudentQRCodeInfo {
	Id             int64  `json:"id"`
	Name           string `json:"name"`
	GradeClassName string `json:"className"`
	H5Url          string `json:"url"`
}

type StudentMiniProgramRequest {
}

type StudentMiniProgramResponse {
	Url string `json:"url"`
}

type StudentImportURLRequest {
}

type StudentImportURLResponse {
	Url string `json:"url"`
}

type StudentDelAllBindingRequest {
	UserToken string `form:"userToken"`
}

type StudentStudentDelAllBindingResponse {
}

type StudentBindingRelationRequest {
	Code     string `json:"code,optional"`
	IdNumber string `json:"idNumber,optional"`
}

type StudentBindingRelationResponse {
	List []*BindRelationItem `json:"list"`
}

type BindRelationItem {
	Role      string `json:"role"`
	AliasName string `json:"aliasName"`
	Bind      bool   `json:"bind"`
	Disabled  bool   `json:"disabled"`
}

type StudentBindingInfo {
	StudentProfileId    int64  `json:"studentProfileId"`
	RelationId          int64  `json:"relationId"`
	Name                string `json:"name"`
	StudentNumber       string `json:"studentNumber"`
	StudentIdCardNumber string `json:"studentIdCardNumber"`
	Relation            string `json:"relation"`
	ClassName           string `json:"className"`
}

type StudentIdRequest {
	StudentId string `path:"studentId"`
}

type StudentDeleteRequest {
	StudentId int64 `path:"studentId"`
	ClassId   int64 `path:"classId,optional"`
}

type ClassStudentDeleteRequest {
	StudentId string `path:"studentId"`
	ClassId   string `path:"classId,optional"`
}

type StudentDeleteResponse {
}

type StudentUpdateBindingRequest {
	UserToken      string                      `json:"userToken"`
	CampusId       int64                       `json:"-,optional"`
	CurrentUserId  string                      `json:"-,optional"`
	Tel            string                      `json:"tel"`
	Students       []*StudentUpdateBindingInfo `json:"students"`
	FacePhotos     []string                    `json:"facePhotos"`
	DelRelationIds []int64                     `json:"delRelationIds"`
}

type StudentUpdateBindingInfo {
	StudentProfileId int64  `json:"studentProfileId"`
	StudentName      string `json:"studentName,optional"`
	RelationId       int64  `json:"relationId,optional"`
	Relation         string `json:"relation"`
}

type StudentUpdateBindingResponse {
}

type RosterImportRequest {
	Url string `json:"file"`
}

type RosterImportResponse {
	TaskId int64 `json:"taskId"`
}

type InterestClassStudentImportRequest {
	File string `json:"file"`
}

type InterestClassStudentImportResponse {
	TaskId int64 `json:"taskId"`
}

type RosterUpdateImportRequest {
	Url string `json:"file"`
}

type RosterUpdateImportResponse {
	TaskId int64 `json:"taskId"`
}

type UpdateImportTemplateRequest {
	Code string `path:"code"` // 验证码
}

type GraduatedStudentListRequest {
	ClassId       int64  `path:"classId"`
	GraduatedYear int64  `form:"graduatedYear"` // 毕业年份
	PageSize      int    `form:"pageSize,optional,default=12"`
	NowPage       int    `form:"nowPage,optional,default=1"`
	SearchContent string `form:"searchContent,optional"`
}

type GraduatedStudentListResponse {
	Count   int64               `json:"count"`
	NowPage int                 `json:"nowPage"`
	List    []*GraduatedStudent `json:"studentList"`
}

type GraduatedStudent {
	DataStudentId string `json:"-"`
	StudentId     int64  `json:"id"`
	StudentName   string `json:"name"`
	Gender        int64  `json:"gender"`
	ParentsCount  int64  `json:"parentNum"`
}

type GraduatedStudentInfoRequest {
	StudentId int64 `path:"studentId"`
}

type GraduatedStudentInfoResponse {
	ClassId     int64            `json:"classId"`
	GradeClass  string           `json:"gradeClass"`
	Name        string           `json:"name"`
	Mobile      string           `json:"mobile"`
	Avatar      []string         `json:"avatar"`
	StudentCode string           `json:"studentCode"`
	IdNumber    string           `json:"idNumber"`
	Gender      int64            `json:"gender"`
	Parents     []*ParentInfoDyt `json:"parents"`
	Places      []*PlacesInfoDyt `json:"places"`
}

type GetStudentInfoDytResponse {
	Class           *ClassInfo       `json:"classInfo,omitempty"`
	InterestClasses []*ClassInfo     `json:"interestClasses"`
	Name            string           `json:"name"`
	Mobile          string           `json:"mobile"`
	Avatar          []string         `json:"avatar"`
	H5Url           string           `json:"h5Url"`
	StudentCode     string           `json:"studentCode"`
	IdNumber        string           `json:"idNumber"`
	Gender          int              `json:"gender"`
	Parents         []*ParentInfoDyt `json:"parents"`
	Places          []*PlacesInfoDyt `json:"places"`
}

type InterestClassRemoveStudentRequest {
	StudentId string `path:"studentId"`
	ClassId   string `form:"classId"`
}

type InterestClassAddStudentRequest {
	ClassId    int64   `json:"classId"`    // 兴趣班 id
	StudentIds []int64 `json:"studentIds"` // 学生 id
}

type InterestClassAddStudentResponse {
	ErrorInfos []*InterestClassAddStudentErrorInfo `json:"errorInfos"` // 错误原因
}

type InterestClassAddStudentErrorInfo {
	StudentId      int64  `json:"studentId"`
	StudentName    string `json:"studentName"`
	GradeClassName string `json:"gradeClassName"`
	Reason         string `json:"reason"`
}

type StudentFindRequest {
	Ids         []int64 `json:"ids,optional,omitempty"`
	StudentName string  `json:"studentName,optional"`
	ClassId     int64   `json:"classId,optional"`
}

type ParentStudentInfoList {
	List []*SingleStudentProfileData `json:"list"`
}

type SingleStudentProfileData {
	StudentProfileId int64  `json:"studentProfileId"`
	Name             string `json:"name"`
	Avatar           string `json:"avatar"`
	ClassId          int64  `json:"classId"`
	GradeClassName   string `json:"gradeClassName"`
	CampusGradeName  string `json:"campusGradeName"` // 年级,
	ClassName        string `json:"className"`       // 班级
	StudentNumId     string `json:"studentNumId"`
}

type ClassStudentBriefListRequest {
	ClassId        int64 `json:"classId"`
	JoiningClassId int64 `json:"joiningClassId,optional"` // 将要入班的班级id
}

type ClassStudentBriefListResponse {
	List []*StudentBriefInfo `json:"list"`
}

type StudentBriefInfo {
	StudentId     int64  `json:"studentId"`
	StudentName   string `json:"studentName"`
	DataStudentId string `json:"dataStudentId"`
}

type SearchStudentRequest {
	Content string `json:"content"`
}

type SearchStudentResponse {
	List []*StudentBriefInfo `json:"list"`
}

type ClassInfo {
	ClassId         int64  `json:"classId,omitempty"`
	ClassName       string `json:"className,omitempty"`
	CampusGradeName string `json:"campusGradeName,omitempty"`
}

type StudentSelfClassListResponse {
	StudentId     string       `json:"studentId"`
	StdClass      []*ClassInfo `json:"stdClass,omitempty"`
	InterestClass []*ClassInfo `json:"interestClass,omitempty"`
}

type StudentInfoRequest {
	NumberType int    `json:"numberType"` // 1->学籍号 2->身份证号
	Number     string `json:"number"`     // 学籍号/身份证号
	Relation   string `json:"relation"`   // 关系
}

type StudentInfoResponse {
	Successful  bool   `json:"successful"`
	StudentId   int64  `json:"studentId,omitempty"`
	StudentName string `json:"studentName,omitempty"`
}
type UpdateStudentAvatarRequest {
	Id      int64    `json:"id"`
	Avatars []string `json:"avatars"`
}

type h5StudentListResponse {
	List []*h5StudentItem `json:"list"`
}

type h5StudentItem {
	StudentProfileId int64  `json:"studentProfileId"`
	Name             string `json:"name"`
	Avatar           string `json:"avatar"`
	Gender           int64  `json:"gender"`
	Code             string `json:"code"`
	IdNumber         string `json:"idNumber"`
	ClassId          int64  `json:"classId"`
	CampusId         int64  `json:"campusId"`
	CampusGradeId    int64  `json:"campusGradeId"`
	GradeClassName   string `json:"gradeClassName"`
	ClassName        string `json:"className,omitempty"`
	CampusGradeName  string `json:"campusGradeName,omitempty"`
	// 班主任
	Master      string        `json:"master"`
	MasterPhone string        `json:"masterPhone"`
	Roles       []*ParentRole `json:"roles"`
}

type BindRelationRequest {
	// 学生学籍号 code|idNumber二选一
	Code string `json:"code,optional"`
	// 学生身份证 code|idNumber二选一
	IdNumber string `json:"idNumber,optional"`
}

type BindRelationResponse {
	List []*BindRelationItem `json:"list"`
}

type (
	CampusCardListRequest {
		CampusId int64 `json:"-,optional"`
		//筛选条件
		CampusGradeId int64  `json:"campusGradeId,optional"`
		ClassId       int64  `json:"classId,optional"`
		Name          string `json:"name,optional"`
		CardStatus    int64  `json:"cardStatus,optional,default=3"`
		//分页查询
		NowPage  int `json:"nowPage,optional,default=1"`
		PageSize int `json:"pageSize,optional,default=12"`
	}

	CampusCardListResponse {
		NowPage      int               `json:"nowPage,omitempty"`
		TotalPage    int               `json:"totalPage,omitempty"`
		Count        int64             `json:"count,omitempty"`
		CardInfoList []*CampusCardInfo `json:"cardList,omitempty"`
		CardCodeList []*CardInfo       `json:"list,omitempty"`
	}

	InitAvatarRequest {
		CampusId int64 `json:"-,optional"`
		Page     int64 `json:"page,optional,default=1"`
		Limit    int64 `json:"limit,optional,default=20"`
	}

	InitAvatarResponse {
		TotalNum int64                     `json:"totalNum,optional"`
		List     []*InitAvatarResponseList `json:"list,optional"`
	}

	InitAvatarV2Request {
		CampusId int64 `json:"-,optional"`
		Role     int64 `json:"role,optional"`
		Page     int64 `json:"page,optional,default=1"`
		Limit    int64 `json:"limit,optional,default=20"`
	}
	InitAvatarV2Response {
		TotalNum int64                       `json:"totalNum,optional"`
		List     []*InitAvatarV2ResponseList `json:"list,optional"`
	}

	InitAvatarV2ResponseList {
		StudentId string   `json:"userNo,optional"`
		Avatars   []string `json:"avatars,optional"`
		Name      string   `json:"name,optional"`
	}

	InitAvatarResponseList {
		StudentId int64  `json:"studentId,optional"`
		Avatar    string `json:"avatar,optional"`
		Name      string `json:"name,optional"`
	}

	CampusCardInfo {
		Id             int64  `json:"id,omitempty"`
		GradeClassName string `json:"gradeClassName,omitempty"`
		Name           string `json:"name,omitempty"`
		StudentCode    string `json:"code,omitempty"`
		CardCode       string `json:"cardCode,omitempty"`
		CardStatus     int64  `json:"cardStatus"` //不添加omitempty，防止状态为0时前端收不到该字段
	}

	CardInfo {
		CardCode string `json:"cardCode,omitempty"`
	}

	UploadFeatureRequest {
		List []*Feature `json:"list,optional"`
	}

	Feature {
		UserNo  string `json:"userNo,optional"`
		Avatar  string `json:"avatar,optional"`
		Feature string `json:"feature,optional"`
	}
)

type InitAvatarV3Request {
	CampusId int64 `json:"-,optional"`
	Role     int64 `json:"role,optional"`
	Page     int64 `json:"page,optional,default=1"`
	Limit    int64 `json:"limit,optional,default=20"`
}

type InitAvatarV3Response {
	TotalNum int64                       `json:"totalNum,optional"`
	List     []*InitAvatarV3ResponseList `json:"list,optional"`
}

type InitAvatarV3ResponseList {
	StudentId string   `json:"userNo,optional"`
	Name      string   `json:"name,optional"`
	Features  []string `json:"features"`
}

type InitAvatarV4Request {
	CampusId int64 `json:"-,optional"`
	Role     int64 `json:"role,optional"`
	Page     int64 `json:"page,optional,default=1"`
	Limit    int64 `json:"limit,optional,default=20"`
}

type InitAvatarV4Response {
	HasMore  int8                        `json:"hasmore,optional"`
	TotalNum int64                       `json:"totalNum,optional"`
	List     []*InitAvatarV4ResponseList `json:"list,optional"`
}

type InitAvatarV4ResponseList {
	StudentId string    `json:"userNo,optional"`
	Avatars   []*Avatar `json:"avatars,optional"`
	Name      string    `json:"name,optional"`
}

type Avatar {
	Avatar  string `json:"avatar,optional"`
	Feature string `json:"feature,optional"`
}

type AvatarList {
	XhbUserToken string `json:"xhbUserToken,omitempty"`
	TeacherName  string `json:"teacherName,omitempty"`
	Avatar       string `json:"avatar,omitempty"`
}

type SendFailNotice {
	CampusId    int64    `json:"campusId,optional"`
	ReceiverIds []string `json:"receiverIds,optional"`
	Sender      string   `json:"sender,optional"`
}

type (
	H5GetClassStudentsRequest {
		CampusId int64 `json:"-,optional,omitempty"`
		ClassId  int64 `json:"classId"`
	}
	H5GetClassStudentsResponse {
		CampusName       string          `json:"campusName"`
		RecordedStudents int             `json:"recordedStudents"` // 学生及其家长都起码有一张照的数量
		TotalStudents    int             `json:"totalStudents"`
		List             []*StudentsInfo `json:"list"`
	}
	StudentsInfo {
		Completed      bool         `json:"completed"` // 学生及其家长一张照没传，为false
		Name           string       `json:"name"`
		StudentId      int64        `json:"student_id"`
		Code           string       `json:"code,optional,omitempty"`     // 学籍号
		IdNumber       string       `json:"idNumber,optional,omitempty"` // 身份证号
		StudentAvatars []string     `json:"studentAvatars"`              // 学生头像
		Relatives      []*Relatives `json:"relatives"`
	}

	Relatives {
		Role         string   `json:"role"` // 学生所有关系，自己是studentSelf，参考studentimort.go，只传回有注册的
		XhbUserToken string   `json:"xhbUserToken"`
		Avatars      []string `json:"avatars"`
	}

	IdRequest {
		Id int64 `path:"id"`
	}

	InfoResponse {
		ClassId       int64  `json:"classId"`
		DataStudentId string `json:"dataStudentId"`
	}
)

@server(
	jwt: Auth
	group: roster
)
service student-api {
	@doc(
		summary: 更新学生信息
	)
	@server(
		handler: UpdateStudentDytHandler
	)
	post /student/dyt/info/update(UpdateStudentDytRequest)
	
	@doc(
		summary: 学生花名册解绑家长
	)
	@server(
		handler: UnbindParentsHandler
	)
	post /student/dyt/parents/unbind-relation(UnbindParentsRequest) returns(UnbindParentsResponse)
	
	@doc(
		summary: 学生花名册获取学生信息
	)
	@server(
		handler: GetStudentInfoDytHandler
	)
	get /student/dyt/info/:studentId(StudentIdRequest) returns(GetStudentInfoDytResponse)
	
	@doc(
		summary: 学生花名册学生列表
	)
	@server(
		handler: StudentListHandler
	)
	post /student/dyt/list(StudentListRequest) returns(StudentRosterList)
	
	@doc(
		summary: 学生花名册删除学生
	)
	@server(
		handler: StudentDeleteHandler
	)
	delete /student/dyt/:studentId(StudentIdRequest) returns(StudentDeleteResponse)
	
	@doc(
		summary: 批量导出二维码
	)
	@server(
		handler: StudentQRCodeHandler
	)
	post /student/dyt/qrcode/images(StudentQRCodeRequest) returns(StudentQRCodeResponse)
	
	@doc(
		summary: 分享校园档案小程序
	)
	@server(
		handler: StudentMiniProgramHandler
	)
	get /student/dyt/miniprogram/url(StudentMiniProgramRequest) returns(StudentMiniProgramResponse)
	
	@doc(
		summary: 分享上传图片
	)
	@server(
		handler: StudentImportURLHandler
	)
	get /student/dyt/miniprogram/import-url(StudentImportURLRequest) returns(StudentImportURLResponse)
}

@server(
	jwt: Auth
	group:importroster
)
service student-api {
	@doc(
		summary: 学生花名册新增导入
	)
	@server(
		handler: RosterImportHandler
	)
	post /student/dyt/rosterimport(RosterImportRequest) returns(RosterImportResponse)
	
	@doc(
		summary: 学生花名册更新导入
	)
	@server(
		handler: RosterUpdateImportHandler
	)
	post /student/dyt/update/rosterimport(RosterUpdateImportRequest) returns(RosterUpdateImportResponse)
	
	@doc(
		summary: 学生花名册新增模板下载
	)
	@server(
		handler: ImportTemplateHandler
	)
	get /student/dyt/import-template()
	
	@doc(
		summary: 学生花名册更新模板下载
	)
	@server(
		handler: UpdateImportTemplateHandler
	)
	get /student/dyt/update/import-template/:code(UpdateImportTemplateRequest)
	
	@doc(
		summary: send template sms code
	)
	@server(
		handler: SendRosterTemplateCode
	)
	get /student/dyt/import/roster/send/sms()
}

@server(
	jwt: Auth
	group:class
)
service student-api {
	@doc(
		summary: 班级学生列表
	)
	@server(
		handler: ClassStudentsListHandler
	)
	post /student/dyt/classes/class-student-list(ClassStudentListRequest) returns(ClassStudentListResponse)
	
	@doc(
		summary: 班级学生列表,无分页
	)
	@server(
		handler: ClassStudentBriefListHandler
	)
	post /student/dyt/class/brief-list(ClassStudentBriefListRequest) returns(ClassStudentBriefListResponse)
	
	@doc(
		summary: 班级内获取学生信息
	)
	@server(
		handler: ClassStudentInfoHandler
	)
	get /student/dyt/classes/student/info(GetClassStudentInfoDytRequest)returns(GetClassStudentInfoDytResponse)
	
	@doc(
		summary: 班级内删除学生
	)
	@server(
		handler: DeleteClassStudentHandler
	)
	delete /student/dyt/classes/student/:studentId/:classId(ClassStudentDeleteRequest)
	
	@doc(
		summary: 班级内新增学生
	)
	@server(
		handler: AddClassStudentHandler
	)
	post /student/dyt/classes/class-add-student(AddClassStudentDytRequest)
	
	@doc(
		summary: 班级内编辑学生
	)
	@server(
		handler: UpdateClassStudentHandler
	)
	post /student/dyt/classes/class-update-student(UpdateClassStudentDytRequest)
	
	@doc(
		summary: 学生所在的行政班与兴趣班
	)
	@server(
		handler: StudentSelfClassListHandler
	)
	get /student/classes/self/class-list/:studentId(StudentIdRequest) returns(StudentSelfClassListResponse)
}

@server(
	jwt: Auth
	group:graduated
)
service student-api {
	@doc(
		summary: "班级内毕业的学生列表，classId 为毕业班级id"
	)
	@server(
		handler: GraduatedStudentListHandler
	)
	get /student/dyt/classes/graduated-student/list/:classId(GraduatedStudentListRequest)returns(GraduatedStudentListResponse)
	
	@doc(
		summary: "班级内毕业的学生信息；说明：studentId 为 '班级内毕业的学生列表' 中提供的 studentId"
	)
	@server(
		handler: GraduatedStudentInfoHandler
	)
	get /student/dyt/classes/graduated-student/info/:studentId(GraduatedStudentInfoRequest)returns(GetStudentInfoDytResponse)
}

@server(
	jwt: Auth
	group: interestclass
)
service student-api {
	@doc(
		summary: 兴趣班添加学生，说明-对于机构学校不适用
	)
	@server(
		handler: InterestClassAddStudentHandler
	)
	post /student/dyt/interest-class/class-add-student(InterestClassAddStudentRequest) returns(InterestClassAddStudentResponse)
	
	@doc(
		summary: 兴趣班移除学生
	)
	@server(
		handler: InterestClassRemoveStudentHandler
	)
	delete /student/dyt/interest-class/class-remove-student/:studentId(InterestClassRemoveStudentRequest)
	
	@doc(
		summary: 兴趣班学生新增模板下载
	)
	@server(
		handler: ImportInterestTemplateHandler
	)
	get /student/dyt/interest-class/import-template()
	
	@doc(
		summary: 兴趣班学生新增导入
	)
	@server(
		handler: InterestClassStudentImportHandler
	)
	post /student/dyt/interest-class/import(InterestClassStudentImportRequest) returns(InterestClassStudentImportResponse)
}

@server(
	jwt: Auth
	group: common
)
service student-api {
	@doc(
		summary: 校内搜索学生
	)
	@server(
		handler: SearchStudentHandler
	)
	post /student/search(SearchStudentRequest) returns(SearchStudentResponse)
	
	@doc(
		summary: 获取家长身份列表
	)
	@server(
		handler: GetParentsRoleDytHandler
	)
	get /student/dyt/parents/role-list() returns(GetParentsRoleResponse)
	
	@doc(
		summary: 特定学生列表
	)
	@server(
		handler: StudentListV2Handler
	)
	post /student/list/v2(StudentFindRequest) returns(ParentStudentInfoList)
	
	@doc(
		summary: 班级架构下家长加入班级
	)
	@server(
		handler: ParentEnterClassHandler
	)
	post /student/dyt/classes/class-add-parents(ParentEnterClassRequest) returns(ParentEnterClassResponse)
	
	@doc(
		summary: 班级架构下将家长请出班级
	)
	@server(
		handler: ParentLeaveClassHandler
	)
	post /student/dyt/classes/parent-leave-class(ParentLeaveClassRequest) returns(ParentLeaveClassResponse)
	
	@doc(
		summary: h5人脸获取class中学生信息
	)
	@server(
		handler: H5GetClassStudentsHandler
	)
	post /student/h5/class-students(H5GetClassStudentsRequest) returns(H5GetClassStudentsResponse)
	
	@doc(
		summary: 根据studentId获取学生信息(临时用，后面可能会删除)
	)
	@server(
		handler: GetStudentInfoById
	)
	get /student/dyt/student-info/:id (IdRequest) returns(InfoResponse)
}

@server(
	jwt: Auth
	group: h5
)
service student-api {
	@doc(
		summary: h5当前学校家长的学生列表
	)
	@server(
		handler: h5CampusParentStudentList
	)
	get /student/h5/studentList() returns(h5StudentListResponse)
	
	@doc(
		summary: h5获得所有家长的学生列表
	)
	@server(
		handler: h5ParentStudentList
	)
	get /student/h5/parent/bind/students() returns(h5StudentListResponse)
	
	@doc(
		summary: 查询学生信息
	)
	@server(
		handler: h5SearchStudentInfo
	)
	post /student/h5/studentInfo(StudentInfoRequest) returns(StudentInfoResponse)
	@doc(
		summary: 学生更新头像
	)
	@server(
		handler: h5UpdateAvatar
	)
	post /student/h5/v2/avatar/update(UpdateStudentAvatarRequest)
	
	@doc(
		summary: 获取学生绑定的家长
	)
	@server(
		handler: h5GetBindRelation
	)
	post /student/h5/bind/relation(BindRelationRequest) returns(BindRelationResponse)
}

@server(
	group: device
)
service student-api {
	@doc(
		summary: 学生卡列表
	)
	@server(
		handler: StudentCardList
	)
	post /student/card/list(CampusCardListRequest) returns(CampusCardListResponse)
	@doc(
		summary: 人脸信息初始化
	)
	@server(
		handler: InitAvatarList
	)
	post /student/face-punch/initAvatarList(InitAvatarRequest) returns(InitAvatarResponse)
	@doc(
		summary: 人脸信息初始化
	)
	@server(
		handler: V2InitAvatarList
	)
	post /student/v2/face-punch/initAvatarList(InitAvatarV2Request) returns(InitAvatarV2Response)
	@doc(
		summary: 人脸信息初始化
	)
	@server(
		handler: V3InitAvatarList
	)
	post /student/v3/face-punch/initAvatarList() returns(h5StudentListResponse)
	@doc(
		summary:人脸信息初始化
	)
	@server(
		handler: V4InitAvatarList
	)
	post /student/v4/face-punch/initAvatarList() returns(h5StudentListResponse)
	@doc(
		summary: 上传特征值
	)
	@server(
		handler: V4UploadFeature
	)
	post /student/v4/face-punch/uploadFeature(UploadFeatureRequest)
}