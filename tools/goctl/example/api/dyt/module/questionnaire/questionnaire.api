info(
	title: "大一统调查问卷"
	desc:
	author: "dylan"
	email: "wangdi@xiaoheiban.cn"
)

type (
	QuestionnaireInfo {
		Id             int64      `json:"id"`
		TeacherId      int64      `json:"teacherId"`
		TeacherName    string     `json:"teacherName"`
		Title          string     `json:"title"`
		ClassroomName  []string   `json:"classroomName,omitempty"`
		DepartmentName []string   `json:"departmentName,omitempty"`
		Questionnaire  *XhbSurvey `json:"questionnaire"`
		StatusName     string     `json:"statusName"`
		EndTime        int64      `json:"endTime,omitempty"`
		CreateTime     int64      `json:"createTime,omitempty"`
		TimingType     int        `json:"timingType,omitempty"`
		TimingDate     int64      `json:"timingDate,omitempty"`
	}

	SendClassrooms {
		ClassroomId string  `json:"classroomId,optional"`
		Type        string  `json:"type"`
		EndTime     int64   `json:"endTime,optional"`
		ReceiverIds []int64 `json:"receiverIds,optional"`
		Additions   []int64 `json:"additions,optional"`
	}

	UpdateQuestionnaireRequest {
		Id            int64  `json:"id"`
		Questionnaire string `json:"questionnaire"`
		EndTime       int64  `json:"endTime,optional"`
	}

	// 问卷json解析结构
	Questionnaire {
		Survey *XhbSurvey `json:"survey,optional"`
	}

	XhbSurvey {
		Id                 int64       `json:"id,omitempty"`
		Title              string      `json:"title"`
		SubTitle           string      `json:"subTitle,optional"`
		FileUpload         bool        `json:"fileUpload,optional"`
		Anonymous          bool        `json:"anonymous,optional"`
		Open               bool        `json:"open,optional"`
		ExpireTime         int64       `json:"expireTime,optional"`
		From               string      `json:"from,optional"`
		QuestionList       []*Question `json:"questionList,optional,omitempty"`
		InvisibleForSender bool        `json:"invisibleForSender,omitempty,optional"`
	}

	Question {
		Content        string    `json:"content,optional"`
		Type           string    `json:"type,optional"`
		Options        []*Option `json:"options,optional"`
		MustAnswer     bool      `json:"mustAnswer,optional"`
		MaxOptionalNum int       `json:"maxOptionalNum,optional"`
		Images         []*Image  `json:"images,optional,omitempty"`
	}

	Option {
		Value string `json:"value,optional"`
		Image *Image `json:"image,optional,omitempty"`
	}

	Image {
		// 原始图id
		Original string `json:"original,omitempty,optional"`
		// 预览图
		Preview string `json:"preview,omitempty,optional"`
		// 缩略图id
		Thumbnail string `json:"thumbnail,omitempty,optional"`
		// 原图大小
		Size int `json:"size,omitempty,optional"`
		// 高
		Height int `json:"height,omitempty,optional"`
		// 宽
		Width int `json:"width,omitempty,optional"`
	}

	TemplateListResponse {
		Surveys []*XhbSurvey `json:"surveys,omitempty"`
		Count   int          `json:"count,omitempty"`
	}

	TemplateListRequest {
		Page int `form:"page,optional"`
		Size int `form:"size,default=10"`
	}

	IdReqeust {
		Id int64 `path:"id"`
	}

	UpdateTimingExtRequest {
		Id       int64  `json:"id"`
		EndTime  int64  `json:"endTime,optional"`  // 过期时间 时间戳,超过这个时间，定时任务将停止
		Cron     string `json:"cron"`              // cron 表达式
		Type     int    `json:"type,optional"`     // 定时类型 1-单次定时，2-周期定时
		ExpireAt int64  `json:"expireAt,optional"` // 问卷截止时间 seconds + 60*min
	}
)

@server(
	jwt: Auth
	group: template
)
service questionnaire-api {
	@doc "获取调查问卷模板"
	@handler getTemplate
	get /questionnaire/template/list(TemplateListRequest) returns (TemplateListResponse)
	
	@doc "获取调查问卷模板详情"
	@handler getTemplateDetail
	get /questionnaire/template/detail/:id(IdReqeust) returns (XhbSurvey)
}

@server(
	jwt: Auth
	group: timing
)
service questionnaire-api {
	@doc "更改调查问卷定时规则"
	@handler updateTiming
	post /questionnaire/timing/update (UpdateTimingExtRequest)
	
	@doc "获取调查问卷模板详情"
	@handler getTimingDetail
	get /questionnaire/timing/detail/:id(IdReqeust) returns (XhbSurvey)
}