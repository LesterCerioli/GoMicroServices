info(
	title: user
	desc: user
	author: jianghuan
	email: jianghuan@xiaoheiban.cn
)

type GenQrcodeRequest {
}

type GenQrcodeResponse {
	Id string `json:"id"`
}

type BindQrcodeRequest {
	Id   string `json:"id"`
	Type string `json:"type"`
}

type BindQrcodeResponse {
}

type PullQrcodeRequest {
	Id string `form:"id"`
}

type Tokens {
	AccessToken   string `json:"access_token"`
	AccessExpire  int64  `json:"access_expire"`
	RefreshToken  string `json:"refresh_token"`
	RefreshExpire int64  `json:"refresh_expire"`
	RefreshAfter  int64  `json:"refresh_after"`
}

type PullQrcodeResponse {
	BarcodeStatus string `json:"barcodeStatus"` // waiting 等待确认, scanned 已确认/userId和Avatar有效, success 登陆成功/返回所有字段，expire 已过期
	UserId        string `json:"userId"`
	Tokens        Tokens `json:"tokens"`
	Role          string `json:"role"`
	Avatar        string `json:"avatar"`
	School        string `json:"school"`
	Realname      string `json:"realname"`
	Mobile        string `json:"mobile"`
	CreateTime    int64  `json:"createTime"`
}

type PasswordStatusRequest {
	Token string `path:"token"`
}

type PasswordStatusResponse {
	Successful bool `json:"successful"`
}

type ProfileRequest {
	Token string `path:"token"`
}

type UserView {
	Id          string `json:"id"`
	Username    string `json:"username,omitempty"`
	Realname    string `json:"realname,omitempty"`
	Email       string `json:"email,omitempty"`
	Mobile      string `json:"mobile"`
	Role        string `json:"role"`
	Avatar      string `json:"avatar,omitempty"`
	Pinyin      string `json:"pinyin,omitempty"`
	School      string `json:"school,omitempty"`
	DisplayName string `json:"displayName"`
	CreateTime  int64  `json:"createTime"`
}

type LoginActivationRequest {
	Mobile string `json:"mobile"`
	// 图形验证码
	CaptchaId          string `json:"captchaId,optional"`
	CaptchaVerifyValue string `json:"captchaVerifyValue,optional"`
}

type LoginActivationResponse {
	Successful bool   `json:"successful"` // 是否成功应答
	Code       string `json:"code"`
}

type ChangePasswordActivationRequest {
	Mobile string `json:"mobile"`
}

type ChangePasswordActivationResponse {
	Successful bool   `json:"successful"` // 是否成功应答
	Code       string `json:"code"`
}

type BoolResponse {
	Successful bool `json:"successful"` // 是否成功应答
}

type UpdateUserProfileRequest {
	Token    string `path:"token"`
	Avatar   string `json:"avatar,optional"`
	Realname string `json:"realname,optional"`
	Email    string `json:"email,optional"`
	School   string `json:"school,optional"`
}

type NewPasswordRequest {
	Mobile            string `path:"mobile"`
	PasswordEncrypted bool   `json:"passwordEncypted,optional"`  // 传递的密码是否是加密的
	EncryptedPassword string `json:"encryptedPassword,optional"` // 密码
	PrintFinger       string `json:"printFinger,optional"`       // 指纹
	Password          string `json:"password,optional"`
	Code              string `json:"code"`
}

type AddPasswordRequest {
	Token             string `path:"token"`
	Password          string `json:"password"`
	PrintFinger       string `json:"printFinger,optional"`
	PasswordEncrypted bool   `json:"passwordEncrypted,optional"`
}

type UpdatePasswordRequest {
	Token             string `path:"token"`
	OriginalPassword  string `json:"original"`
	NewPassword       string `json:"password"`
	PrintFinger       string `json:"printFinger,optional"`
	PasswordEncrypted bool   `json:"passwordEncrypted,optional"`
}

type ValidateMobileRequest {
	Token  string `path:"token"`
	Mobile string `json:"mobile"` // 手机号
	UserId string `json:"userId"` // 用户id
}

type LoginRequest {
	Username          string `json:"username"` // 用户名
	LoginMode         string `json:"loginMode,optional"`
	VerificationCode  string `json:"verificationCode,optional"`  // 验证码
	Protocol          string `json:"protocol"`                   // 使用推送协议类型
	EncryptedPassword string `json:"encryptedPassword,optional"` // 密码
	PrintFinger       string `json:"printFinger,optional"`
	PublicServiceId   string `json:"publicServiceId,optional"`
	DeviceType        string `json:"deviceType,optional"`
	// 图形验证码
	CaptchaId          string `json:"captchaId,optional"`
	CaptchaVerifyValue string `json:"captchaVerifyValue,optional"`
}

type LoginResponse {
	UserId        string `json:"userId"`        // 用户id
	Host          string `json:"host"`          // host
	Port          int    `json:"port"`          // port
	Token         string `json:"token"`         // 用户登录token
	Tokens        Tokens `json:"tokens"`        // access token and refresh token
	NotifierToken string `json:"notifierToken"` // notifier平台的token
	Role          string `json:"role"`          // 当前用户的角色 PARENT/TEACHER
	Avatar        string `json:"avatar"`
	School        string `json:"school"`
	Realname      string `json:"realname"`
	Mobile        string `json:"mobile"`
	CreateTime    int64  `json:"createTime"`
}

type UserClassroomRelationRequest {
	Token string `path:"token"`
}

type UserRelateUsersResponse {
	LastTimestamp    int64     `json:"lastTimestamp"` // 最近拉取时间
	ClassroomMembers []*Relate `json:"classroomMembers,omitempty"`
}

type Relate {
	ClassroomId string      `json:"classroomId"`       // 班级id
	Members     []*UserView `json:"members,omitempty"` // 班级成员
}

type RegisterByCodeRequest {
	Name string `json:"name,optional"`
	// 手机号码
	Mobile string `json:"mobile"`
	// 角色
	Role string `json:"role"`
	// 密码
	Password string `json:"password,optional"`
	// 注册邀请码
	InvitationNumber string `json:"invitationNumber,optional"`
	// 注册验证码
	ActivationNumber string `json:"activationNumber"`
	// 注册来源
	AccountSource string `json:"accountSource,optional"`
	DeviceType    string `json:"deviceType,optional"` //设备类型
	Idfa          string `json:"idfa,optional"`       //唯一标识
	Realname      string `json:"realname,optional"`   // 548注册参数
	Grade         string `json:"grade,optional"`      // 548注册参数
	Subject       string `json:"subject,optional"`    // 548注册参数
}

type RegisterByCodeResponse {
	// 验证返回信息
	Message string `json:"message"`
	// 验证状态
	State string `json:"state"`
	// 结果
	Result bool `json:"result"`
	// 注册后直接返回token
	Token string `json:"token"`
	// access token and refresh token
	Tokens Tokens `json:"tokens"`
}

type UpdateStudentRelationRequest {
	StudentId   string `json:"studentId"`
	NewRelation string `json:"newRelation"`
}

type UpdateStudentRelationResponse {
}

type GetTeacherInfoRequest {
	Token string `path:"token"`
}

type GetTeacherInfoResponse {
	Grade      string `json:"grade"`
	Subject    string `json:"subject"`
	IsComplete bool   `json:"isComplete"`
}

type UpdateTeacherInfoRequest {
	Token   string `json:"token"`
	Name    string `json:"name"`
	Grade   string `json:"grade"`
	Subject string `json:"subject"`
}

type UpdateTeacherInfoResponse {
}
service user-api {
	@doc(
		summary: 生成二维码
	)
	@server(
		handler: GenQrcodeHandler
	)
	get /user/qrcode/gen(GenQrcodeRequest) returns(GenQrcodeResponse)
	
	@doc(
		summary: 二维码和用户绑定  第一次调用预绑定/第二次调用绑定
	)
	@server(
		handler: BindQrcodeHandler
	)
	post /user/qrcode/bind(BindQrcodeRequest) returns(BindQrcodeResponse)
	
	@doc(
		summary: 获取二维码状态
	)
	@server(
		handler: PullQrcodeHandler
	)
	get /user/qrcode/pull(PullQrcodeRequest) returns(PullQrcodeResponse)
	
	@doc(
		summary: 检查用户密码是否设置
	)
	@server(
		handler: PasswordStatusHandler
	)
	post /user/password/status/:token(PasswordStatusRequest) returns(PasswordStatusResponse)
	
	@doc(
		summary: 查看个人profile
	)
	@server(
		handler: ProfileHandler
	)
	get /profile/:token(ProfileRequest) returns(UserView)
	
	@doc(
		summary: 更新个人profile
	)
	@server(
		handler: UpdateProfileHandler
	)
	post /profile/:token(UpdateUserProfileRequest) returns(UserView)
	
	@doc(
		summary: 验证码登录生成验证码
	)
	@server(
		handler: LoginActivationHandler
	)
	post /login/activation(LoginActivationRequest) returns(LoginActivationResponse)
	
	@doc(
		summary: 生成修改密码验证码
	)
	@server(
		handler: ChangePasswordActivationHandler
	)
	post /change/password/activation(ChangePasswordActivationRequest) returns(ChangePasswordActivationResponse)
	
	@doc(
		summary: 重置密码
	)
	@server(
		handler: NewPasswordHandler
	)
	post /new/password/:mobile(NewPasswordRequest) returns(BoolResponse)
	
	@doc(
		summary: 添加密码
	)
	@server(
		handler: AddPasswordHandler
	)
	post /add/password/:token(AddPasswordRequest) returns(BoolResponse)
	
	@doc(
		summary: 修改密码
	)
	@server(
		handler: UpdatePasswordHandler
	)
	post /password/:token(UpdatePasswordRequest) returns(BoolResponse)
	
	@doc(
		summary: 验证用户手机信息
	)
	@server(
		handler: ValidateMobileHandler
	)
	post /validate/user/mobile/:token(ValidateMobileRequest) returns(BoolResponse)
	
	@doc(
		summary: 登录
	)
	@server(
		handler: LoginHandler
	)
	post /login(LoginRequest) returns(LoginResponse)
	
	@doc(
		summary: 用户关联用户(全量接口)
	)
	@server(
		handler: UserClassroomRelationHandler
	)
	get /related/users/:token(UserClassroomRelationRequest) returns(UserRelateUsersResponse)
	
	@doc(
		summary: 检验验证码并注册
	)
	@server(
		handler: RegisterByCodeHandler
	)
	post /register/and/check/activationNumber(RegisterByCodeRequest) returns(RegisterByCodeResponse)
	
	@doc(
		summary: 更新学生关系
	)
	@server(
		handler: UpdateStudentRelation
	)
	post /user/student-relation/update(UpdateStudentRelationRequest) returns(UpdateStudentRelationResponse)
	
	@doc(
		summary: 获取老师信息
	)
	@server(
		handler: getTeacherInfo
	)
	get /user/teacher/info/:token(GetTeacherInfoRequest) returns(GetTeacherInfoResponse)
	
	@doc(
		summary: 更新老师信息
	)
	@server(
		handler: updateTeacherInfo
	)
	post /user/teacher/info/update(UpdateTeacherInfoRequest) returns(UpdateTeacherInfoResponse)
}