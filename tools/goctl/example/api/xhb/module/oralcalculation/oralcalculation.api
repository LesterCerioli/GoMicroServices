info(
	title: 口算
	desc:  口算服务api
	author: xuehao
	email: xuehao@xiaoheiban.cn
)

type SubmitPicRequest {
	ImageUrl   string `json:"imageUrl"`            // 图片URL
	ExerciseId string `json:"exerciseId,optional"` // 口算练习ID（提交口算练习时附带此参数）
}

type SubmitPicResponse {
	State        int               `json:"state"`        // 是否识别成功 =0 处理成功 >0 处理失败
	ImgId        string            `json:"imgId"`        // 图片ID
	Direction    int               `json:"direction"`    // 图片旋转角度
	ImageWidth   int               `json:"imageWidth"`   // 图片宽度
	ImageHeight  int               `json:"imageHeight"`  // 图片高度
	ImageUrl     string            `json:"imageUrl"`     // 图片URL
	RightCnt     int               `json:"rightCnt"`     // 图中题目正确数
	QuestionCnt  int               `json:"questionCnt"`  // 图中题目数量
	RightRate    float32           `json:"rightRate"`    // 图中题目正确率 0~1.00
	QuestionImgs []*QuestionDetail `json:"questionImgs"` // 图片结果列表
}

type WrongQuestionDetail {
	ImgId           string `json:"imgId,omitempty"`          // 图片ID
	ImgUrl          string `json:"imgUrl,omitempty"`         // 图片URL
	ImgW            int    `json:"imgW,omitempty"`           // 图片宽度
	ImgH            int    `json:"imgH,omitempty"`           // 图片高度
	WrongId         string `json:"wrongId,omitempty"`        // 错题ID
	LeftX           int    `json:"leftX,omitempty"`          // 图片左上角横坐标
	TopY            int    `json:"topY,omitempty"`           // 图片左上角纵坐标
	QuestionHeight  int    `json:"questionHeight,omitempty"` // 图片高度
	QuestionWidth   int    `json:"questionWidth,omitempty"`  // 图片宽度
	Timestamp       int64  `json:"timestamp,omitempty"`      // 错题产生时间
	RightAnswer     string `json:"rightAnswer"`              // 正确内容
	QuestionContext string `json:"questionContext"`          // 题目文本
}

type WrongQuestionsListRequest {
	Page     int `form:"page"`     // 页码
	PageSize int `form:"pageSize"` // 单页记录数量
}

type WrongQuestionsListResponse {
	Page     int                    `json:"page"`     // 页码
	PageSize int                    `json:"pageSize"` // 单页记录数量
	Total    int                    `json:"total"`    // 总记录条数
	DayCnt   int                    `json:"dayCnt"`   // 当日记录数量
	WeekCnt  int                    `json:"weekCnt"`  // 当周记录数量
	MonthCnt int                    `json:"monthCnt"` // 当月记录数量
	CntByDay []*DailyDetail         `json:"cntByDay"` // 每日记录数量
	List     []*WrongQuestionDetail `json:"list"`     // 错题列表
}

type AnalyzeQuestionRequest {
	Wrongs string `json:"wrongs"` // 错题内容 {"q_0":{"question":"1+3=5","position":[4]}}
}

type WrongAnalyzeDetail {
	WrongExample string `json:"wrongExample"`
	WrongDesc    string `json:"wrongDesc"`
}

type AnalyzeQuestionResponse {
	Question    string                `json:"question"`
	ExplainUrl  string                `json:"explainUrl"`
	WrongDetail []*WrongAnalyzeDetail `json:"wrongDetail"`
	WrongTitle  string                `json:"wrongTitle"`
	SimilarQ    []string              `json:"similarQ"`
}

type CheckHistoryDetailRequest {
	HistoryId string `json:"historyId"` // 检查记录ID
}

type CheckHistoryListRequest {
	Timestamp int64 `form:"timestamp"`                    // 下一页偏移量
	PageSize  int   `form:"pageSize,optional,default=10"` // 单页记录数量
}

type CheckHistoryListResponse {
	HasMore       bool          `json:"hasMore"`        // 是否有下一页
	LastTimestamp int64         `json:"lastTimestamp"`  // 时间偏移量
	Total         int64         `json:"total"`          // 总记录数
	List          []*ImageBrief `json:"list,omitempty"` // 检查记录列表
}

type DeleteCheckHistoryRequest {
	HistoryIds []string `json:"historyIds,optional"` // 按 检查ID 删除
	Days       []string `json:"days,optional"`       //按日期删除  ["2020-07-28","2020-07-29"]
}

type DeleteCheckHistoryResponse {
}

type DailyDetail {
	Date int64 `json:"date"` // 日期零时时间戳
	Cnt  int   `json:"cnt"`  // 记录条数
}

type DeleteWrongRequest {
	Range    string   `json:"range"`             // Several-多条 Weekly-单周 Monthly-全月 All-全部
	WrongIds []string `json:"wrongIds,optional"` // 错题ID
}

type DeleteWrongResponse {
	Cnt int `json:"cnt"` // 删除记录条数
}

// 获取反馈原因列表
type FeedbackReason {
	Id   int    `json:"id"`
	Name string `json:"name"`
}

type GetFeedbackRequest struct{}

type GetFeedbackResponse {
	Reasons []*FeedbackReason `json:"reasons"`
}

// 提交反馈原因
type SubmitFeedbackReasonRequest {
	ImgId       string   `json:"imgId"`
	ReasonId    []int    `json:"reasonId"`    // 原因ID集合
	Pics        []string `json:"pics"`        // 图片数组
	Content     string   `json:"content"`     // 反馈内容
	Network     string   `json:"network"`     // 网络模式 wifi 4G
	ContactInfo string   `json:"contactInfo"` // 联系方式
}

type SubmitFeedbackReasonResponse struct{}

type ExerciseDetailRequest {
	ExerciseId string `path:"exerciseId"`
}

type ExerciseDetailResponse {
	Exercise *ExerciseDetailView `json:"exercise"`
}

type ExerciseDetailView {
	Id           string   `json:"id,omitempty"`
	Title        string   `json:"title,omitempty"`        // 练习标题
	EndTime      int64    `json:"endTime,omitempty"`      // 练习结束时间
	Content      string   `json:"content,omitempty"`      // 练习内容
	Images       []*Image `json:"images,omitempty"`       // 练习图片
	ClassroomId  string   `json:"classroomId,omitempty"`  // 班级ID
	DeliveryTime int64    `json:"deliveryTime,omitempty"` // 定时发送时间
	SenderId     string   `json:"senderId,omitempty"`     // 发布人ID
	SendTo       string   `json:"sendTo,omitempty"`       // 发送到  wechat-发送到微信  none-不做任何操作
	ReceiverIds  []string `json:"receiverIds,omitempty"`  // 消息接收者ID集合
	ReceiverType string   `json:"receiverType,omitempty"` // 消息发送方式
	Additions    []string `json:"additions,omitempty"`
	CreateTime   int64    `json:"createTime,omitempty"`
	UpdateTime   int64    `json:"updateTime,omitempty"`
	SubmitCount  int64    `json:"submitCount,omitempty"` //提交次数
}

// 练习列表
type ExerciseListRequest {
	PageSize int   `form:"pageSize"`
	LastTime int64 `form:"lastTime"`
}

type ExerciseItem {
	Id                string              `json:"id"`
	Category          string              `json:"category,omitempty"`          // 消息分类
	CreateTime        int64               `json:"createTime"`                  // 创建时间
	DeliveryTime      int64               `json:"deliveryTime,omitempty"`      // 定时发送时间
	Timestamp         int64               `json:"timestamp"`                   // 用于排序的时间
	OralCalculation   *ExerciseDetailView `json:"oralCalculation,omitempty"`   // 口算练习
	PeriodCalculation *PeriodItem         `json:"periodCalculation,omitempty"` // 周期口算
	ClassroomId       string              `json:"classroomId,omitempty"`       // 班级ID
	SenderId          string              `json:"senderId,omitempty"`          // 发送者用户ID
	Classroom         *ClassroomView      `json:"classroom,omitempty"`         // 班级信息
	Sender            *SenderView         `json:"sender,omitempty"`            // 消息发送者
	Observer          bool                `json:"observer,omitempty"`          //是展示小眼睛
	UnreadCount       int64               `json:"unreadCount,omitempty"`       // 未读数字
	IsTop             bool                `json:"isTop"`                       // 是否为置顶消息
	IsParticipate     bool                `json:"isParticipate,omitempty"`     // 是否参与
}

type ExerciseListResponse {
	LastTimestamp int64           `json:"lastTimestamp,omitempty"`
	HasMore       bool            `json:"hasMore"`
	TotalSize     int             `json:"totalSize"`
	List          []*ExerciseItem `json:"list"`
}

type ExercisePublishRequest {
	DeliveryTime int64                `json:"deliveryTime,optional"` // 发送时间
	Receivers    []*Receiver          `json:"receivers"`
	Exercise     *ExerciseRequestView `json:"exercise"`
}

type ExercisePublishResponse {
	Messages []*ExercisePublishMessageView `json:"messages"`
}

type ExercisePublishMessageView {
	Id              string              `json:"id"`
	Category        string              `json:"category,omitempty"`
	Timestamp       int64               `json:"timestamp,omitempty"`
	Observer        bool                `json:"observer,omitempty"`
	SenderId        string              `json:"senderId,omitempty"`
	ClassroomId     string              `json:"classroomId,omitempty"`
	OralCalculation *ExerciseDetailView `json:"oralCalculation,omitempty"`
	IsTop           bool                `json:"isTop,omitempty"`
	IsParticipate   bool                `json:"isParticipate,omitempty"`
	CreateTime      int64               `json:"createTime,omitempty"`
}

type ExerciseStatistic {
	Total     int `json:"total"`     // 总人数
	UnJoin    int `json:"unJoin"`    // 未提交人数
	Joined    int `json:"joined"`    // 已提交人数
	AllRight  int `json:"allRight"`  // 全对人数
	PartRight int `json:"partRight"` // 未全对人数
}

type ExerciseRequestView {
	Title      string   `json:"title"`
	EndTime    int64    `json:"endTime"` // 结束时间
	Content    string   `json:"content"`
	QuestionId string   `json:"questionId,optional,omitempty"` // 题目ID
	Images     []*Image `json:"images,optional"`
}

type Image {
	Original  string `json:"original,optional,omitempty"`  // 原始图id
	Preview   string `json:"preview,optional,omitempty"`   // 预览图
	Thumbnail string `json:"thumbnail,optional,omitempty"` // 缩略图id
	Size      int    `json:"size,optional,omitempty"`      // 原图大小
	Height    int    `json:"height,optional,omitempty"`    // 高
	Width     int    `json:"width,optional,omitempty"`     // 宽
}

type ImageBrief {
	HistoryId    string            `json:"historyId"`    // 检查记录ID
	ImgId        string            `json:"imgId"`        // 图片id
	ImgPath      string            `json:"imgPath"`      // 图片地址
	ImageWidth   int               `json:"imageWidth"`   // 图片宽度
	ImageHeight  int               `json:"imageHeight"`  // 图片高度
	QuestionImgs []*QuestionDetail `json:"questionImgs"` // 图片结果列表
	QuestionCnt  int               `json:"questionCnt"`  // 题目数量
	RightCnt     int               `json:"rightCnt"`     // 正确题目数量
	CreateTime   int64             `json:"createTime"`   // 判题日期
	ThumbImg     string            `json:"thumbImg"`     // 题目缩略图URL
}

type QuestionDetail {
	AnswerResult    int    `json:"answerResult"`    // 判题结果 0：错误 1：正确
	QuestionId      string `json:"questionId"`      // 题目ID
	QuestionContext string `json:"questionContext"` // 题目文本
	LeftX           int    `json:"leftX"`           // 题目左上角横坐标
	TopY            int    `json:"topY"`            // 题目左上角纵坐标
	QuestionHeight  int    `json:"questionHeight"`  // 题目高度
	QuestionWidth   int    `json:"questionWidth"`   // 题目宽度
	HandWritten     int    `json:"handWritten"`
	RightAnswer     string `json:"rightAnswer"` // 正确内容
}

type Receiver {
	ClassroomId string   `json:"classroomId,optional"`
	Type        string   `json:"type"` // 消息类型  整班 老师 学生 定向选择
	ReceiverIds []string `json:"receiverIds,optional"`
	StudentIds  []string `json:"studentIds,optional"`
	Additions   []string `json:"additions,optional"`
}

// 用户成果详情
type ResultDetailRequest {
	ResultId string `path:"resultId"`
}
type ResultDetailResponse {
	Result *ResultView `json:"result"` // 成果详情
}

type UserJoinView {
	UnJoin []*UsersItem `json:"unJoin"`
	Joined []*UsersItem `json:"joined"`
}

type UsersItem {
	UserId       string `json:"userId"`
	ResultId     string `json:"resultId"` // 成果ID
	HeadImage    string `json:"headImage"`
	RealName     string `json:"realName"`
	LastJoinTime int64  `json:"lastJoinTime"`
	RightNum     int    `json:"rightNum"`
	WrongNum     int    `json:"wrongNum"` // 错题数
	Phone        string `json:"phone"`
	IsRead       bool   `json:"isRead"` // 是否已阅 true-已阅  false-未阅
}

type ExerciseJoinRequest {
	ExerciseId string `json:"exerciseId"`
	TalImageId string `json:"talImageId"` // 好未来图片ID
}

type ExerciseJoinResponse {
	Result *ResultView `json:"result"`
}
type ResultView {
	Id               string            `json:"id,omitempty"`
	ExerciseId       string            `json:"exerciseId,omitempty"`
	Sender           *SenderView       `json:"sender,omitempty"`
	ClassroomId      string            `json:"classroomId,omitempty"`
	QuestionNum      int               `json:"questionNum,omitempty"`      // 总题数
	WrongQuestionNum int               `json:"wrongQuestionNum,omitempty"` // 总错题数
	CreateTime       int64             `json:"createTime,omitempty"`
	IsRead           bool              `json:"isRead"`
	Praise           bool              `json:"praise"` //是否被点赞
	PraiseUsers      []string          `json:"praiseUsers,omitempty"`
	FamilyMembers    []string          `json:"familyMembers,omitempty"`
	JoinItems        []*ResultJoinItem `json:"joinItems,omitempty"`
}

type ResultJoinItem {
	SenderId     string            `json:"senderId,omitempty"`
	TalImageId   string            `json:"talImageId,omitempty"`   // 图片ID
	Direction    int               `json:"direction,omitempty"`    // 图片旋转角度
	ImageWidth   int               `json:"imageWidth,omitempty"`   // 图片宽度
	ImageHeight  int               `json:"imageHeight,omitempty"`  // 图片高度
	ImageUrl     string            `json:"imageUrl,omitempty"`     // 图片URL
	RightCnt     int               `json:"rightCnt,omitempty"`     // 图中题目正确数
	QuestionCnt  int               `json:"questionCnt,omitempty"`  // 图中题目数量
	RightRate    float32           `json:"rightRate,omitempty"`    // 图中题目正确率
	CreateTime   int64             `json:"createTime,omitempty"`   // 创建时间
	QuestionImgs []*QuestionDetail `json:"questionImgs,omitempty"` // 图片结果列表
}
type SenderView {
	Id string `json:"id"`
	// 显示名
	DisplayName string `json:"displayName,omitempty"`
	// 头像图片id
	Avatar string `json:"avatar,omitempty"`
}

type ClassroomView {
	Id        string `json:"id"`
	Name      string `json:"name,omitempty"`
	BadgeId   string `json:"badgeId,omitempty"`
	BadgeType string `json:"badgeType,omitempty"`
	BgImage   string `json:"bgImage,omitempty"`
}

type ResultInfoRequest {
	ExerciseId string `path:"exerciseId"`
}

type ResultInfoResponse {
	Statistic  *ResultStatistic `json:"statistic"`
	JoinList   []*ResultView    `json:"joinList"`
	UnJoinList []*ResultView    `json:"unJoinList"`
}

type ResultStatistic {
	Total     int `json:"total,omitempty"`     // 总人数
	UnJoin    int `json:"unJoin,omitempty"`    // 未提交人数
	Joined    int `json:"joined,omitempty"`    // 已提交人数
	AllRight  int `json:"allRight,omitempty"`  // 全对人数
	PartRight int `json:"partRight,omitempty"` // 未全对人数
}

type ExerciseWrongQuestionsRequest {
	ExerciseId string `path:"exerciseId"`
}

type ExerciseWrongQuestionsResponse {
	List []*ResultWrongQuestionView `json:"list"`
}

type ResultWrongQuestionView {
	Sender            *SenderView   `json:"sender,omitempty"`
	ClassroomId       string        `json:"classroomId, omitempty"`
	WrongQuestionsNum int           `json:"wrongQuestionsNum,omitempty"` // 疑题总数
	TalImgs           []*TalImgView `json:"talImgs,omitempty"`
}

type TalImgView {
	ImgUrl    string                 `json:"imgUrl,omitempty"`
	ImgW      int                    `json:"imgW,omitempty"`
	ImgH      int                    `json:"imgH,omitempty"`
	WrongList []*WrongQuestionDetail `json:"wrongList,omitempty"`
}

type UserResultDetailRequest {
	ExerciseId string `path:"exerciseId"`
}

type UserResultDetailResponse {
	Result *ResultView `json:"result"`
}

type QuestionItem {
	QuestionCount int      `json:"questionCount,omitempty"` //题目数
	Images        []*Image `json:"images,omitempty"`        //对应的图片
}

type QuestionBank {
	Id            string          `json:"id"`
	Grade         string          `json:"grade,omitempty"`         // 年级
	Term          string          `json:"term,omitempty"`          // 学期
	Press         string          `json:"press,omitempty"`         // 教材
	Category      string          `json:"category,omitempty"`      // 分类
	Title         string          `json:"title,omitempty"`         // 知识点
	Description   string          `json:"description,omitempty"`   // 描述
	QuestionItems []*QuestionItem `json:"questionItems,omitempty"` // 题目选项
	IsLast        bool            `json:"isLast"`                  // 是否上次布置
	CreateTime    int64           `json:"createTime,omitempty"`
	UpdateTime    int64           `json:"updateTime,omitempty"`
}

type QuestionBankListRequest {
	Grade string `form:"grade"` // 年级
	Term  string `form:"term"`  // 学期
	Press string `form:"press"` // 教材
}

type QuestionBankListResponse {
	List []*QuestionBank `json:"list,omitempty"`
}

type GradePressConfigRequest {
}

type GradePressConfigResponse {
	Grades  []string `json:"grades"`  //年级
	Terms   []string `json:"terms"`   //学区
	Presses []string `json:"presses"` //出版社
}

type PraiseBatchRequest { // 口算点赞（批量）
	ExerciseId string `path:"exerciseId"`
}

type PraiseBatchResponse { // 口算点赞（批量）
	Success bool `json:"success"`
}

type PraiseSingleRequest { // 口算点赞（个人）
	ExerciseId string `path:"exerciseId"`
	UserId     string `path:"userId"`
}

type PraiseSingleResponse { // 口算点赞（个人）
	Success bool `json:"success"`
}

type TemplateView {
	Id          string   `json:"id,omitempty"`
	Name        string   `json:"name,omitempty"`        // 模板名
	Explain     string   `json:"explain,omitempty"`     // 说明
	Description string   `json:"description,omitempty"` // 描述
	Material    string   `json:"material,omitempty"`    // 教材
	Grade       string   `json:"grade,omitempty"`       // 年级
	Week        int64    `json:"week,omitempty"`        // 周时
	Pictures    []*Image `json:"pictures,omitempty"`    // 图片最大9张 单张20M
	Appendix    string   `json:"appendix,omitempty"`    // 附件 单张50M
	Cover       string   `json:"cover,omitempty"`       // 封面20M
	UsedTimes   int      `json:"usedTimes,omitempty"`   // 被使用次数
	ClickTimes  int      `json:"clickTimes,omitempty"`  // 被点击次数
	IsLast      bool     `json:"isLast,omitempty"`      // 是否为上次使用
}

type PeriodExerciseTemplatesRequest { // 获取口算模板
	Material string `json:"material,optional"` // 教材
	Grade    string `json:"grade"`             // 年级
}

type PeriodExerciseTemplatesResponse {
	Templates []*TemplateView `json:"templates,omitempty"` // 模板列表
}

type PeriodExerciseView {
	TemplateId string `json:"templateId"` // 模板ID
	Title      string `json:"title"`
	Content    string `json:"content"`
	EndTime    int64  `json:"endTime,omitempty,optional"` // 结束时间,默认是当天23:59
}

type PeriodPublishMessageView {
	Id                string            `json:"id"`
	Category          string            `json:"category,omitempty"`
	Timestamp         int64             `json:"timestamp,omitempty"`
	Observer          bool              `json:"observer,omitempty"`
	SenderId          string            `json:"senderId,omitempty"`
	ClassroomId       string            `json:"classroomId,omitempty"`
	PeriodCalculation *PeriodDetailView `json:"periodCalculation,omitempty"`
	IsTop             bool              `json:"isTop,omitempty"`
	IsParticipate     bool              `json:"isParticipate,omitempty"`
	CreateTime        int64             `json:"createTime,omitempty"`
}

type PeriodPublishRequest {
	PeriodExercise *PeriodExerciseView `json:"periodExercise"` // 周期练习信息
	DeliveryTime   int64               `json:"deliveryTime"`   // 发送时间
	Receivers      []*Receiver         `json:"receivers"`
}

type PeriodPublishResponse {
	Messages []*PeriodPublishMessageView `json:"messages"`
}

type CalendarDetail {
	ExerciseId  string `json:"exerciseId"`
	SubmitCnt   int    `json:"submitCnt"`
	TotalCnt    int    `json:"totalCnt"`
	DeliverTime int    `json:"deliverTime"`
}

type PeriodCalendarRequest {
	PeriodId string `path:"periodId"`
}

type PeriodDetailView {
	Id           string   `json:"id,omitempty"`
	Title        string   `json:"title,omitempty"`        // 练习标题
	EndTime      int64    `json:"endTime,omitempty"`      // 练习结束时间
	Content      string   `json:"content,omitempty"`      // 练习内容
	Images       []*Image `json:"images,omitempty"`       // 练习图片
	ClassroomId  string   `json:"classroomId,omitempty"`  // 班级ID
	DeliveryTime int64    `json:"deliveryTime,omitempty"` // 定时发送时间，即第一份练习的发布时间戳，每份练习在每天同一时间发布
	SenderId     string   `json:"senderId,omitempty"`     // 发布人ID
	SendTo       string   `json:"sendTo,omitempty"`       // 发送到  wechat-发送到微信  none-不做任何操作
	ReceiverIds  []string `json:"receiverIds,omitempty"`  // 消息接收者ID集合
	ReceiverType string   `json:"receiverType,omitempty"` // 消息发送方式
	DeliverCnt   int      `json:"deliverCnt,omitempty"`   // 已发布练习数量
	TotalCnt     int      `json:"totalCnt,omitempty"`     // 总练习数量
}

type PeriodCalendarResponse {
	Template        *TemplateView     `json:"template"`        // 模板信息
	Period          *PeriodDetailView `json:"period"`          // 周期练习汇总信息
	CalendarDetails []*CalendarDetail `json:"calendarDetails"` // 日历信息
}

type PeriodItem {
	Id            string         `json:"id"`
	Category      string         `json:"category,omitempty"`      // 消息分类
	Content       string         `json:"content"`                 // 内容
	Title         string         `json:"title"`                   // 标题
	CreateTime    int64          `json:"createTime"`              // 创建时间
	DeliveryTime  int64          `json:"deliveryTime,omitempty"`  // 定时发送时间
	EndTime       int64          `json:"endTime,omitempty"`       // 截止时间
	Timestamp     int64          `json:"timestamp"`               // 用于排序的时间
	ClassroomId   string         `json:"classroomId,omitempty"`   // 班级ID
	SenderId      string         `json:"senderId,omitempty"`      // 发送者
	TemplateId    string         `json:"templateId,omitempty"`    // 模板ID
	Classroom     *ClassroomView `json:"classroom,omitempty"`     // 班级信息
	CommitUsers   []*SenderView  `json:"sender,omitempty"`        // 成果提交者
	IsTop         bool           `json:"isTop"`                   // 是否为置顶消息
	IsParticipate bool           `json:"isParticipate,omitempty"` // 是否参与
	PublishCnt    int            `json:"publishCnt,omitempty"`    // 已发布练习数
	TotalCnt      int            `json:"totalCnt,omitempty"`      // 总练习数
	ResultCnt     int            `json:"resultCnt,omitempty"`     // 提交成果数
}

type TemplateClickRequest {
	TemplateId string `path:"templateId"`
}

type TemplateClickResponse {
}

type GetTeachingBasicInfoRequest {
}

type GetTeachingBasicInfoResponse {
	Grade   []string `json:"grade"`   // 年级列表
	Term    []string `json:"term"`    // 学期列表
	Version []string `json:"version"` //教材列表
}

type GetBookUnitTypeRequest {
	GradeId   int32 `json:"gradeId,optional"`   //年级id
	TermId    int32 `json:"termId,optional"`    //学期id
	VersionId int32 `json:"versionId,optional"` //版本id
}

type GetBookUnitTypeResponse {
	BookUnit []BaseKeyValue `json:"bookUnit"`
}

type BaseKeyValue {
	Id   int64  `json:"id"`   //单元id
	Name string `json:"name"` //单元名称
}

type GetBookUnitRequest {
	GradeId         int32   `json:"gradeId,optional"`
	TermId          int32   `json:"termId,optional"`
	VersionId       int32   `json:"versionId,optional"`
	BookUnitTypeIds []int32 `json:"bookUnitTypeIds"` //单元类型ID集合
}

type GetBookUnitResponse {
	BookUnits []BookUnit `json:"bookUnits"` //单元集合
}

type BookUnit {
	ParentId  string     `json:"parentId"` //父单元ID
	Name      string     `json:"name"`     //单元名称
	Example   string     `json:"example"`  //示例
	UnitId    string     `json:"unitId"`   //单元ID
	Type      int32      `json:"type"`     //类型ID
	ChildList []BookUnit `json:"childList"`
}

type SearchQuestionRequest {
	QuestionNumber int32  `json:"questionNumber"` //搜题数量
	BookUnitId     string `json:"bookUnitId"`     //单元ID集合
}

type SearchQuestionResponse {
	Questions []Question `json:"questions"`
}

type Question {
	Id           string `json:"id"`
	QuestionBody string `json:"questionBody"` //题目
	SymbolType   int32  `json:"symbolType"`   //占位符类型
	Type         int32  `json:"type"`         //题型标签
	Answer       string `json:"answer"`       //答案
	VerticalJson string `json:"verticalJson"` //竖式json
	Latex        string `json:"latex"`        //latex
	RenderTex    string `json:"renderTex"`    //可以渲染的tex
}

service oralcalculation-api {
	@doc(
		summary: 提交照片拍照
	)
	@server(
		handler: SubmitPicHandler
	)
	post /oralcalculation/submit-pic(SubmitPicRequest) returns(SubmitPicResponse)
	
	@doc(
		summary: 分析错误结果
	)
	@server(
		handler: AnalyzeQuestionHandler
	)
	post /oralcalculation/analyze-question(AnalyzeQuestionRequest) returns(AnalyzeQuestionResponse)
	
	@doc(
		summary: 获取检查记录列表
	)
	@server(
		handler: CheckHistoryListHandler
	)
	get /oralcalculation/check-history-list(CheckHistoryListRequest) returns(CheckHistoryListResponse)
	
	@doc(
		summary: 删除检查记录
	)
	@server(
		handler: DeleteCheckHistoryHandler
	)
	post /oralcalculation/delete-check-history(DeleteCheckHistoryRequest) returns(DeleteCheckHistoryResponse)
	
	@doc(
		summary: 检查记录详情
	)
	@server(
		handler: CheckHistoryDetailHandler
	)
	get /oralcalculation/check-history-detail(CheckHistoryDetailRequest) returns(SubmitPicResponse)
	
	@doc(
		summary: 获取错题本列表
	)
	@server(
		handler: WrongQuestionsListHandler
	)
	get /oralcalculation/wrong-question-list(WrongQuestionsListRequest) returns(WrongQuestionsListResponse)
	
	@doc(
		summary: 删除错题本记录
	)
	@server(
		handler: DeleteWrongHandler
	)
	post /oralcalculation/delete-wrong(DeleteWrongRequest) returns(DeleteWrongResponse)
	
	@doc(
		summary: 获取反馈原因列表
	)
	@server(
		handler: GetFeedbackHandler
	)
	get /oralcalculation/feedback-reasons(GetFeedbackRequest) returns(GetFeedbackResponse)
	
	@doc(
		summary: 提交反馈原因
	)
	@server(
		handler: SubmitFeedbackReasonHandler
	)
	post /oralcalculation/submit-feedback-reason(SubmitFeedbackReasonRequest) returns(SubmitFeedbackReasonResponse)
	
	@doc(
		summary: 发布练习
	)
	@server(
		handler: PublishExercise
	)
	post /oralcalculation/exercise/publish(ExercisePublishRequest) returns(ExercisePublishResponse)
	
	@doc(
		summary: 练习详情
	)
	@server(
		handler: ExerciseDetail
	)
	get /oralcalculation/exercise/detail/:exerciseId(ExerciseDetailRequest) returns(ExerciseDetailResponse)
	
	@doc(
		summary: 练习列表
	)
	@server(
		handler: ExerciseList
	)
	get /oralcalculation/exercise/list(ExerciseListRequest) returns(ExerciseListResponse)
	
	@doc(
		summary: 用户练习详情
	)
	@server(
		handler: ResultDetailHandler
	)
	get /oralcalculation/result/detail/:resultId(ResultDetailRequest) returns(ResultDetailResponse)
	
	@doc(
		summary: 提交练习成果
	)
	@server(
		handler: ExerciseJoinHandler
	)
	post /oralcalculation/exercise/join(ExerciseJoinRequest) returns(ExerciseJoinResponse)
	
	@doc(
		summary: 获取成果列表
	)
	@server(
		handler: ResultInfoHandler
	)
	get /oralcalculation/result/info/:exerciseId(ResultInfoRequest) returns(ResultInfoResponse)
	
	@doc(
		summary: 用户成果详情
	)
	@server(
		handler: UserResultDetailHandler
	)
	get /oralcalculation/user/result-detail/:exerciseId(UserResultDetailRequest) returns(UserResultDetailResponse)
	
	@doc(
		summary: 获取错题列表
	)
	@server(
		handler: ExerciseWrongQuestionsHandler
	)
	get /oralcalculation/exercise/wrong-questions/:exerciseId(ExerciseWrongQuestionsRequest) returns(ExerciseWrongQuestionsResponse)
	
	@doc(
		summary: 获取题库列表
	)
	@server(
		handler: QuestionBankListHandler
	)
	get /oralcalculation/question-bank-list(QuestionBankListRequest) returns(QuestionBankListResponse)
	
	@doc(
		summary: 班级，教材配置
	)
	@server(
		handler: GradePressConfigHandler
	)
	get /oralcalculation/grade-press-config(GradePressConfigRequest) returns(GradePressConfigResponse)
	
	@doc(
		summary: 口算点赞（批量）
	)
	@server(
		handler: PraiseBatchHandler
	)
	put /oralcalculation/praise/batch/:exerciseId(PraiseBatchRequest) returns(PraiseBatchResponse)
	
	@doc(
		summary: 口算点赞/取消（个人）
	)
	@server(
		handler: PraiseSingleHandler
	)
	put /oralcalculation/praise/single/:exerciseId/:userId(PraiseSingleRequest) returns(PraiseSingleResponse)
	
	@doc(
		summary: 获取口算周期练习模板列表
	)
	@server(
		handler: PeriodExerciseTemplatesHandler
	)
	post /oralcalculation/period/templates(PeriodExerciseTemplatesRequest) returns(PeriodExerciseTemplatesResponse)
	
	@doc(
		summary: 布置口算周期练习
	)
	@server(
		handler: PeriodPublishHandler
	)
	post /oralcalculation/period/publish(PeriodPublishRequest) returns(PeriodPublishResponse)
	
	@doc(
		summary: 获取口算周期任务详情页
	)
	@server(
		handler: PeriodCalendarHandler
	)
	get /oralcalculation/period/calendar/:periodId(PeriodCalendarRequest) returns(PeriodCalendarResponse)
	
	@doc(
		summary: 口算模板点击
	)
	@server(
		handler: TemplateClickHandler
	)
	put /oralcalculation/period/template-click/:templateId(TemplateClickRequest) returns(TemplateClickResponse)
	
	@doc(
		summary: 获取口算练习的教材基础信息
	)
	@server(
		handler: TeachingBasicInfoHandler
	)
	get /oralcalculation/teaching/basic/info(GetTeachingBasicInfoRequest) returns(GetTeachingBasicInfoResponse)
	
	@doc(
		summary: 获取教材单元类型
	)
	@server(
		handler: BookUnitTypeHandler
	)
	post /oralcalculation/teaching/book/unit/type(GetBookUnitTypeRequest) returns(GetBookUnitTypeResponse)
	
	@doc(
		summary: 获取教材单元列表
	)
	@server(
		handler: BookUnitListHandler
	)
	post /oralcalculation/teaching/book/unit/list(GetBookUnitRequest) returns(GetBookUnitResponse)
	
	@doc(
		summary: 搜题
	)
	@server(
		handler: SearchQuestionHandler
	)
	post /oralcalculation/teaching/search/question(SearchQuestionRequest) returns(SearchQuestionResponse)
	
}