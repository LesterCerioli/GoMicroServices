type IsAuthRequest {
}

type Receiver {
	ClassroomId string   `json:"classroomId,optional"`
	Type        string   `json:"type"` // 消息类型  整班 老师 学生 定向选择
	ReceiverIds []string `json:"receiverIds,optional"`
	Additions   []string `json:"additions,optional"`
}

type RecallHomeworkRequest {
	HomeworkId string `path:"homeworkId"`
}

type DetailHomeworkRequest {
	HomeworkId string `path:"homeworkId"`
}

type IsAuthResponse {
	Auth bool `json:"auth"`
}

type PublishHomeworkResponse {
	Messages []*PublishHomeworkMessageView `json:"messages,omitempty"`
}

type RecallHomeworkResponse {
}

type DetailHomeworkResponse {
	UnReadCount              int64                  `json:"unReadCount"`
	Id                       string                 `json:"id"`
	SenderId                 string                 `json:"senderId,omitempty"` // 作业发布者
	Sender                   *SimpleSenderView      `json:"sender,omitempty"`
	ClassroomView            *ClassroomView         `json:"classroom,omitempty"`
	Title                    string                 `json:"title,omitempty"`   // 标题
	Content                  string                 `json:"content,omitempty"` // 内容
	IsJoind                  bool                   `json:"isJoind,omitempty"`
	Images                   []*Image               `json:"images,omitempty"` // 图片id列表, 需要先上传
	Audio                    *Audio                 `json:"audio,omitempty"`  // 语音上传后的对象
	Video                    *Video                 `json:"video,omitempty"`
	Attachments              []*Attachment          `json:"attachements,omitempty"`   // 其他附件
	ExtraHomeworkCount       int64                  `json:"extraHomeworkCount"`       // 补充作业
	ExtraHomeworkUnreadCount int64                  `json:"extraHomeworkUnreadCount"` // 补充作业未读
	Extras                   map[string]interface{} `json:"extras,omitempty"`
	From                     string                 `json:"from,omitempty"`  // 来自哪里
	Open                     bool                   `json:"open"`            // 成果是否互相可见
	NeedJoin                 bool                   `json:"needJoin"`        // 是否需要家长参与上传作业
	NeedSignature            bool                   `json:"needSignature"`   // 是否需要签名
	SuggestDuration          int64                  `json:"suggestDuration"` // 建议时长
	Grade                    string                 `json:"grade,optional"`
	Subject                  string                 `json:"subject,optional"`
	TextContent              string                 `json:"textContent"`            // 是否开启 口语测评
	HomeworkType             string                 `json:"homeworkType,omitempty"` // 作业类型
	AiReportUrl              string                 `json:"aiReportUrl,omitempty"`  // ai评测 小程序url地址
	TestPaper                *TestPaperInfo         `json:"testPaper,omitempty"`    // 第三方题库作业信息
	NeedTeacherJoin          bool                   `json:"needTeacherJoin"`        // 老师是否可以提交作业
	CreateTime               int64                  `json:"createTime"`
	UpdateTime               int64                  `json:"updateTime"`
	EndTime                  int64                  `json:"endTime"`      // 结束时间
	DeliveryTime             int64                  `json:"deliveryTime"` //定时发送时间
	JoinUserId               string                 `json:"joinUserId"`
	Status                   string                 `json:"status"`    // "Needless", 无需参加, "Joined" 已提交,"UnJoin" 未提交
	SubStatus                string                 `json:"subStatus"` // 当status == Joined时，如果 subStatus不为空，则去subStatus，为空则取status，// "Review", 需订正, "Reviewed" 已订正,"Pass" 已通过
	SubjectCategory          string                 `json:"subjectCategory,optional"`
	SubType                  string                 `json:"subType,omitempty"` // recite-背诵  readLoud-朗读
	HanlinAcademy            *HanlinAcademyView     `json:"hanlinAcademy,omitempty"`
}

type HanlinAcademyView {
	TextId      string           `json:"textId,optional"`
	Grade       string           `json:"grade,optional"`
	BookVersion string           `json:"bookVersion,optional"`
	Sections    []*HanlinSection `json:"sections,optional"`
	BookType    string           `json:"bookType,optional,default=official"` // official-课内 extra-课外
}

type HanlinSection {
	SectionId string `json:"sectionId,optional"`
}

type HomeWorkRequestBase {
	SuggestDuration    int64                `json:"suggestDuration,optinal"` // 建议时长
	EndTime            int64                `json:"endTime,optional"`        // 结束时间
	Title              string               `json:"title,optional"`
	Content            string               `json:"content,optional"`
	Images             []*ImageRequest      `json:"images,optional"`
	Audio              *AudioRequest        `json:"audio,optional"`
	Video              *VideoRequest        `json:"video,optional"`
	Attachments        []*AttachmentRequest `json:"attachements,optional"`
	FileUpload         bool                 `json:"fileUpload,optional"`    // 是否上传至班级文件
	Open               bool                 `json:"open,optional"`          // 成果是否互相可见
	NeedJoin           bool                 `json:"needJoin,optional"`      // 是否需要家长参与上传作业
	NeedSignature      bool                 `json:"needSignature,optional"` // 是否需要签名
	Grade              string               `json:"grade,optional"`
	Subject            string               `json:"subject,optional"`
	SubjectCategory    string               `json:"subjectCategory,omitempty"`
	TextContent        string               `json:"textContent,optional" filter:"badword"` // 课本、读背内容
	ActivityTemplateId string               `json:"activityTemplateId,optional"`           // 活动模板ID
	HanlinAcademy      *HanlinAcademyView   `json:"hanlinAcademy,optional"`                // 翰林院相关信息
}

type ImageRequest {
	Original  string `json:"original,optional"`  // 原始图id
	Preview   string `json:"preview,optional"`   // 预览图
	Thumbnail string `json:"thumbnail,optional"` // 缩略图id
	Size      int    `json:"size,optional"`      // 原图大小
	Height    int    `json:"height,optional"`    // 高
	Width     int    `json:"width,optional"`     // 宽
}

type AudioRequest {
	Id            string `json:"id"`                     // 语音文件id
	Duration      int    `json:"duration,optional"`      // 持续时间
	FileExtension string `json:"fileExtension,optional"` // 文件后缀名
	Size          int    `json:"size,optional"`          // 文件大小
	Name          string `json:"name,optional"`          // 显示名称
}

type VideoRequest {
	Title        string `json:"title,optional"`        // 视频标题
	Desc         string `json:"desc,optional"`         // 视频描述
	CoverUrl     string `json:"coverUrl,optional"`     // 视频封面url
	PlayUrl      string `json:"playUrl"`               // 视频url
	PlayTime     int    `json:"playTime,optional"`     // 视频的播放时长
	MagicContext string `json:"magicContext,optional"` // 视频回调标识字段[回调透传字段]
	Type         string `json:"type,optional"`         // 视频类型
	Height       int    `json:"height,optional"`       // 视频高
	Width        int    `json:"width,optional"`        // 视频宽
}

type IsGrayUserRequest {
}

type PublishHomeworkRequest {
	DeliveryTime int64                `json:"deliveryTime,optional"` // 定时发送
	Receivers    []*Receiver          `json:"receivers"`             // 接收人
	HomeWork     *HomeWorkRequestBase `json:"homework,optional"`
	// "COMMON" - 常规作业人， "TESTPAPER" - 题库作业
	HomeworkType string `json:"homeworkType,optional"` //  "COMMON" - 常规作业人， "TESTPAPER" - 题库作业   "AISPEECH" - 口语测评
	//接入选择完题库作业后的第三方信息
	TestPaper *TestPaperInfo `json:"testPaper,optional"` // 第三方题库作业信息
	Aispeech  *Aispeech      `json:"aispeech,optional"`  // 口语测评
}

type Aispeech {
	BookType string `json:"bookType"`         // official-课内 extra-课外
	SubType  string `json:"subType,optional"` // recite-背诵  readLoud-朗读
}

type TestPaperInfo {
	// 题库作业id
	Id string `json:"id"`
	//题库作业名称
	Title string `json:"title"`
	//题库作业正确率
	CorrectRate float64 `json:"correctRate,optional,omitempty"` // 题库作业正确率
	// 由教研云记录的创建时间
	CreateTime int64 `json:"createTime,optional,omitempty"`
	//由教研云记录的修改时间
	ModifyTime int64 `json:"modifyTime,optional,omitempty"`
	//试卷学科
	Subject string `json:"subject,optional,omitempty"`
	//试题信息统计
	CatalogInfo []*JyyCatalogInfo `json:"catalogInfo,optional,omitempty"`
}

type AttrsRequest {
	Size string `json:"size,optional"`
}

type PublishHomeworkMessageView {
	Title           string                 `json:"title,omitempty"`        // 标题
	Content         string                 `json:"content,omitempty"`      // 内容
	Images          []*Image               `json:"images,omitempty"`       // 图片id列表, 需要先上传
	Audio           *Audio                 `json:"audio,omitempty"`        // 语音上传后的对象
	Video           *Video                 `json:"video,omitempty"`        // 上传后的视频
	Attachments     []*Attachment          `json:"attachements,omitempty"` // 其他附件
	Extras          map[string]interface{} `json:"extras,omitempty"`
	From            string                 `json:"from,omitempty"` // 来自哪里
	Id              string                 `json:"id"`             // 作业id
	SenderId        string                 `json:"senderId,omitempty"`
	ClassroomId     string                 `json:"classroomId,omitempty"`
	Sender          *SimpleSenderView      `json:"sender,omitempty"`
	ClassroomView   *ClassroomView         `json:"classroom,omitempty"`
	CreateTime      int64                  `json:"createTime,omitempty"`
	Timestamp       int64                  `json:"timestamp,omitempty"`
	EndTime         int64                  `json:"endTime"`
	SuggestDuration int64                  `json:"suggestDuration,omitempty"` // 建议时长
	Category        string                 `json:"category"`                  // 类型
	HomeworkView    *HomeworkView          `json:"homeworkView,omitempty"`    // 5.0 add
	Receipt         *Receipt               `json:"receipt,omitempty"`
}

type ClassroomView {
	Id        string `json:"id"`
	Name      string `json:"name,omitempty"`
	BadgeId   string `json:"badgeId,omitempty"`
	BadgeType string `json:"badgeType,omitempty"`
	BgImage   string `json:"bgImage,omitempty"`
}

type Receipt {
	Total        int              `json:"total"`                // 消息接收总数量
	Receipted    int              `json:"receipted"`            // 已成功接收数量
	Feedbacked   int              `json:"feedbacked,omitempty"` // 已成功反馈数量
	Attitude     string           `json:"attitude,omitempty"`   // 我发送的反馈
	Received     bool             `json:"received,omitempty"`   // 我是否已经已收到此消息
	IsObserver   bool             `json:"isObserver,omitempty"`
	HomeworkItem *HomeworkReceipt `json:"homeworkItem,omitempty"`
}

type HomeworkReceipt {
	JoinUsers []string `json:"joinUsers"`
}

type IsGrayUserResponse {
	Ok bool `json:"ok"`
}

type HomeworkView {
	Title       string                 `json:"title,omitempty"`        // 标题
	Content     string                 `json:"content,omitempty"`      // 内容
	Images      []*Image               `json:"images,omitempty"`       // 图片id列表, 需要先上传
	Audio       *Audio                 `json:"audio,omitempty"`        // 语音上传后的对象
	Video       *Video                 `json:"video,omitempty"`        // 上传后的视频
	Attachments []*Attachment          `json:"attachements,omitempty"` // 其他附件
	Extras      map[string]interface{} `json:"extras,omitempty"`
	From        string                 `json:"from,omitempty"` // 来自哪里
	Status      string                 `json:"status"`         // "Needless", 无需参加, "Joined" 已提交,"UnJoin" 未提交
	SubStatus   string                 `json:"subStatus"`      // "Review", 需订正, "Reviewed" 已订正,"Pass" 已通过
	EndTime     int64                  `json:"endTime"`
}

type ContentableView {
	Title       string                 `json:"title,omitempty"`        // 标题
	Content     string                 `json:"content,omitempty"`      // 内容
	Images      []*Image               `json:"images,omitempty"`       // 图片id列表, 需要先上传
	Audio       *Audio                 `json:"audio,omitempty"`        // 语音上传后的对象
	Video       *Video                 `json:"video,omitempty"`        // 上传后的视频
	Attachments []*Attachment          `json:"attachements,omitempty"` // 其他附件
	Extras      map[string]interface{} `json:"extras,omitempty"`
	From        string                 `json:"from,omitempty"` // 来自哪里
}

type FamilyGroupInfo {
	FamilyChildName    string `json:"familyChildName"`
	FamilyMergedUserId string `json:"familyMergedUserId"`
}

type Image {
	Original  string `json:"original,omitempty"`
	Preview   string `json:"preview,omitempty"`
	Thumbnail string `json:"thumbnail,omitempty"`
	Size      int    `json:"size,omitempty"`
	Height    int    `json:"height,omitempty"`
	Width     int    `json:"width,omitempty"`
}

type Audio {
	Id            string `json:"id"`
	Duration      int    `json:"duration,omitempty"`
	FileExtension string `json:"fileExtension,omitempty"`
	Size          int    `json:"size,omitempty"`
	Name          string `json:"name,omitempty"`
}

type Video {
	PlayUrl      string `json:"playUrl,omitempty"`
	Title        string `json:"title,omitempty"`
	Desc         string `json:"desc,omitempty"`
	CoverUrl     string `json:"coverUrl,omitempty"`
	PlayTime     int    `json:"playTime,omitempty"`
	MagicContext string `json:"magicContext,omitempty"`
	Type         string `json:"type,omitempty"`
	Height       int    `json:"height,omitempty"`
	Width        int    `json:"width,omitempty"`
}

type Attachment {
	Id       string `json:"id"`
	Name     string `json:"name,omitempty"`
	MimeType string `json:"mimeType,omitempty"`
	Attrs    *Attrs `json:"attrs,omitempty"`
	Size     string `json:"size,omitempty"` // 5.0.0 add
}

type StatisticsHomeworkRequest {
	HomeworkId string `path:"homeworkId"`
}

type StatisticsHomeworkResponse {
	JoinUsers   []string `json:"joinUsers"`   // 已参与已阅用户ids
	UnJoinUsers []string `json:"unJoinUsers"` // 未参与未读用户ids
}

type UpdateHomeworkSettingRequest {
	HomeworkId   string `path:"homeworkId"`
	EndTime      int64  `json:"endTime,optional"`
	IsOpen       bool   `json:"isOpen,optional"`       // 成果是否相互可见
	IsNeedUpload bool   `json:"isNeedUpload,optional"` // 是否需要家长上传签名
}

type UpdateHomeworkSettingResponse {
}

type PraiseRequest {
	HomeworkId string `json:"homeworkId,optional"`
	ResultId   string `path:"resultId"`
	Praise     bool   `json:"praise"` // 如果为true就是点赞
}

type PraiseResponse {
}

type CommentRequest {
	HomeworkId  string          `json:"homeworkId,optional"`
	ResultId    string          `path:"resultId"`
	Content     string          `json:"content,optional"`
	CommentedId string          `json:"commentedId,optional"`
	Images      []*ImageRequest `json:"images,optional"`
	Audio       *AudioRequest   `json:"audio,optional"`
	Video       *VideoRequest   `json:"video,optional"`
}

type CommentResponse {
	Data *CommentView `json:"data,omitempty"`
}

type Comment {
	UserId        string   `json:"userId"`
	BeReplyUserId string   `json:"beReplyUserId"`
	Content       string   `json:"content,optional"`
	Images        []*Image `json:"images,optional"`
	Audio         *Audio   `json:"audio,optional"`
	Video         *Video   `json:"video,optional"`
}

type ResultHighQualityRequest {
	HomeworkId string `json:"homeworkId,optional"`
	ResultId   string `path:"resultId"`
}

type ResultHighQualityRecallRequest {
	HomeworkId string `json:"homeworkId,optional"`
	ResultId   string `path:"resultId"`
}

type ResultListRequest {
	HomeworkId string `path:"homeworkId"`
	PageSize   int64  `form:"pageSize"`
	TimeStamp  int64  `form:"timeStamp"`
	Mode       string `form:"mode"` // 家长端传=Normal 作业发布者未批改=NoOperate 已批改=Operated 待批改 Review 通过 Pass
	ShowSender bool   `form:"showSender,default=false"`
}

type ResultJoinRequest {
	HomeworkId  string                 `path:"homeworkId"`
	TakeTime    int64                  `json:"takeTime,optional"`  // 用时多久
	Signature   *ImageRequest          `json:"signature,optional"` // 家长签名
	Content     string                 `json:"content,optional"`
	Images      []*ImageRequest        `json:"images,optional"`
	Audio       *AudioRequest          `json:"audio,optional"`
	Video       *VideoRequest          `json:"video,optional"`
	Attachments []*AttachmentRequest   `json:"attachements,optional"` // 其他附件
	Extras      map[string]interface{} `json:"extras,optional"`       // 额外属性
	AiSpeech    *AiSpeechOral          `json:"aiSpeech,optional"`     // 口语测评
}

type AiSpeechOral {
	Status     int    `json:"status,optional"`
	OralResult string `json:"oralResult,optional"`
}

type AttachmentRequest {
	Id       string        `json:"id"`                // 网络文件id
	Name     string        `json:"name,optional"`     // 显示名称
	MimeType string        `json:"mimeType,optional"` // 附件mimeType
	Attrs    *AttrsRequest `json:"attrs,optional"`    // 其他属性
}

type ResultRecallRequest {
	HomeworkId string `json:"homeworkId,optional"`
	ResultId   string `path:"resultId"`
}

type ResultHighQualityResponse {
}

type ResultHighQualityRecallResponse {
}

type ResultListResponse {
	Total           int64     `json:"totalSize"`
	HasMore         bool      `json:"hasMore"`
	LastTimeStamp   int64     `json:"lastTimestamp"`
	Results         []*Result `json:"resultViews"`
	TotalResultSize int64     `json:"totalResultSize"`
}

type ResultJoinResponse {
	ResultId       string                 `json:"resultId"`
	HomeworkId     string                 `json:"homeworkId"`
	SenderId       string                 `json:"senderId"`
	ClassroomId    string                 `json:"classroomId"`
	FinishDuration int64                  `json:"finishDuration"`
	Status         string                 `json:"status"`
	SubStatus      string                 `json:"subStatus"`
	Title          string                 `json:"title,omitempty"`        // 标题
	Content        string                 `json:"content,omitempty"`      // 内容
	Images         []*Image               `json:"images,omitempty"`       // 图片id列表, 需要先上传
	Audio          *Audio                 `json:"audio,omitempty"`        // 语音上传后的对象
	Video          *Video                 `json:"video,omitempty"`        // 上传后的视频
	Attachments    []*Attachment          `json:"attachements,omitempty"` // 其他附件
	Extras         map[string]interface{} `json:"extras,omitempty"`
	From           string                 `json:"from,omitempty"` // 来自哪里
}

type ResultRecallResponse {
}

type ResultMark {
	ResultMarkType string `json:"resultMarkType"`
	Score          int64  `json:"score"`
	Timestamp      int64  `json:"timestamp"`
}

type Result {
	Id              string              `json:"id"`
	Sender          string              `json:"sender"`
	SenderView      *SimpleSenderView   `json:"senderView,omitempty"` // 仅供web使用
	CreateTime      int64               `json:"createTime"`           // 提交时间
	UpdateTime      int64               `json:"updateTime"`           // 更新时间
	TakeTime        int64               `json:"takeTime"`             // 完成时间
	ClassroomId     string              `json:"classroomId,omitempty"`
	IsPraise        bool                `json:"isPraise"`
	IsHighQuality   bool                `json:"isHighQuality"`            // 是否精品
	IsAppraisal     bool                `json:"isAppraisal"`              // 是否已评价
	AppraisalTotal  int64               `json:"appraisalTotal,omitempty"` // 已评价的指标数
	AppraisalScore  int64               `json:"appraisalScore,omitempty"` // 已评价的指标分数
	AppraisalList   []*AppraisalViews   `json:"appraisalList,omitempty"`  // 评价列表
	IsSignature     bool                `json:"isSignature"`              // 是否签名
	Signature       *Image              `json:"signature,optional"`       // 家长签名
	Content         string              `json:"content,optional"`
	Images          []*Image            `json:"images,optional"`
	Audio           *Audio              `json:"audio,optional"`
	Video           *Video              `json:"video,optional"`
	Praiselist      []string            `json:"praiseList,omitempty"`     // 点赞列表
	PraiseViewlist  []*SimpleSenderView `json:"praiseViewList,omitempty"` // 点赞列表 仅供web使用
	CommentList     []*CommentView      `json:"commentList,omitempty"`
	Status          string              `json:"status"`             // Joined 未批改 Review 未订正 Reviewed 已订正 Pass 通过
	ResultMark      *ResultMark         `json:"resultMark"`         // 成果评分/评星
	HomeworkType    string              `json:"homeworkType"`       //  "COMMON" - 常规作业人， "TESTPAPER" - 题库作业   "AISPEECH" - 口语测评
	TestPaper       *TestPaperInfo      `json:"testPaper,optional"` // 第三方题库作业信息
	OralItem        *OralItem           `json:"oralItem,omitempty"`
	AiSpeechLike    int                 `json:"aiSpeechLike,omitempty"` //ai评测反馈  [-1:踩 ,0:未操作 , 1:赞]
	ThumbUpCount    int32               `json:"thumbUpCount"`
	EarliestThumbUp []string            `json:"earliestThumbUp,omitempty"` //最早的点赞人
	ShowMark        bool                `json:"showMark"`                  // 根据角色判断是否显示评分
	NeedJoin        bool                `json:"needJoin"`
	EndTime         int64               `json:"endTime"`  // 结束时间
	IsFamily        bool                `json:"isFamily"` // 结果详情与当前用户之前的关系  true - 家庭成员关系   false - 非家庭成员关系
	IsRead          bool                `json:"isRead"`   // true 已读  false 未读
	ReplyItems      *ReplyItems         `json:"replyItems,omitempty"`
}

type AppraisalViews {
	TeacherId  string           `json:"teacherId,omitempty"`
	Appraisals []*AppraisalView `json:"appraisals,omitempty"` // 评价详情
}

type AppraisalView {
	RecordId        int64  `json:"recordId,omitempty"`    // 评价记录id,删除评价的时候使用
	Type            int32  `json:"type,omitempty"`        // 评价类型
	IndicatorId     int64  `json:"indicatorId,omitempty"` // 教师评价指标
	GradeName       string `json:"gradeName,omitempty"`   // 等第名称
	Score           int64  `json:"score,omitempty"`       // 教师评价分数
	ColorGrade      int32  `json:"colorGrade,omitempty"`  // 颜色等级，1-加分最多，2-中等，3-加分最少，4-待改进
	IndicatorName   string `json:"indicatorName,omitempty"`
	IndicatorSuffix string `json:"indicatorSuffix,omitempty"`
	MessageId       string `json:"messageId,omitempty"`
	ResultId        string `json:"resultId,omitempty"`
	MessageType     string `json:"messageType,omitempty"`
	Icon            string `json:"icon,omitempty"`
}

type OralItem {
	OralId       string   `json:"oralId,omitempty"`
	Status       int      `json:"status,omitempty"`       // 0: not open; 1: 测评中； 2： 测评成功； 3： 测评失败
	Url          string   `json:"url,omitempty"`          // 小程序
	Score        int      `json:"score,omitempty"`        // 评测得分
	AiScoreLevel string   `json:"aiScoreLevel,omitempty"` // 评测等级 A+  A  B C D
	Comment      string   `json:"comment,omitempty"`      // 评语
	Duration     int      `json:"duration,omitempty"`     // 语音时长
	Platform     string   `json:"platform,omitempty"`     // 平台 tal-好未来  singsound-先声
	AudioList    []*Audio `json:"audioList,omitempty"`    // 多个段落的音频
}

type AddOralRemarkRequest {
	ResultId string `json:"resultId,omitempty"` // 成果 Id
	Remark   string `json:"remark,optional"`    // 评语
	Grade    int    `json:"grade,optional"`     // 评分
}

type AddOralRemarkResponse {
}

type SimpleSenderView {
	Id          string `json:"id"`
	DisplayName string `json:"displayName,omitempty"` // 显示名
	Avatar      string `json:"avatar,omitempty"`      // 头像图片id
}

type CommentView {
	Comment         *CommentCell      `json:"comment,omitempty"`
	Sender          string            `json:"sender,omitempty"`
	SenderView      *SimpleSenderView `json:"senderView,omitempty"` // 仅供web使用
	BeReplyUser     string            `json:"beReplyUser,omitempty"`
	BeReplyUserView *SimpleSenderView `json:"beReplyUserView,omitempty"` // 仅供web使用
}

type CommentCell {
	Id        string   `json:"id"`
	ResultId  string   `json:"resultId"`
	Content   string   `json:"content"`
	Timestamp int64    `json:"timestamp"`
	Audio     *Audio   `json:"audio,omitempty"`
	Images    []*Image `json:"images,omitempty"`
}

type ViewsReadMessageRequest {
	HomeWorkId string `path:"homeworkId"`
	Timestamp  int64  `form:"timestamp,optional"`
	Size       int    `form:"size,optional"`
}

type ViewsReadMessageResponse {
	Id            string         `json:"id,omitempty"`  // 是否还有更多消息
	HasMore       bool           `json:"hasMore"`       // 是否还有更多消息
	TotalSize     int            `json:"totalSize"`     // 总记录数
	LastTimestamp int64          `json:"lastTimestamp"` // 本次获取的最后一条timestamp
	List          []*MessageView `json:"list,omitempty"`
}

type MessageView {
	ResultSenderId string `json:"resultSenderId,omitempty"`
	SenderId       string `json:"senderId,omitempty"`
	ReceiverId     string `json:"receiverId,omitempty"`
	Type           string `json:"type,omitempty"`           // comment评论 | praise点赞 | uncomment撤回评论 | highQuality设为精品
	CommentContent string `json:"commentContent,omitempty"` // 评论内容
	ResultId       string `json:"resultId,omitempty"`
	Content        string `json:"content,omitempty"` // 显示的内容
	ClassroomId    string `json:"classroomId,omitempty"`
	Timestamp      int64  `json:"timestamp,omitempty"`
}

type UnreadCountRequest {
	HomeWorkId string `path:"homeworkId"`
}

type UnreadCountResponse {
	Count int64 `json:"count"`
}

type ViewsUnreadMessageRequest {
	HomeWorkId string `path:"homeworkId"`
}

type ViewsUnreadMessageResponse {
	LastTimestamp int64          `json:"lastTimestamp,omitempty"`
	List          []*MessageView `json:"list,omitempty"`
}

type CommentDeleteRequest {
	ResultId   string `path:"resultId"`
	CommentId  string `path:"commentId"`
	HomeworkId string `form:"homeworkId,optional"`
	Desc       string `form:"desc,optional"` // 理由
}

type CommentDeleteResponse {
	CommentIds []string `json:"commentIds"` // 需删除的id
}

type BatchCorrectCommentRequest {
	HomeWorkId  string                     `path:"homeWorkId"`
	CommentList []*BatchCorrectCommentData `json:"commentList"`
}

type BatchCorrectCommentData {
	ResultId string                     `json:"resultId"`
	Images   []*ImageRequest            `json:"images,optional"`
	Comments []*BatchCorrectCommentCell `json:"comments,optional"`
}

type BatchCorrectCommentCell {
	Image   *ImageRequest `json:"image,optional"`
	Content string        `json:"content,optional"`
}

type BatchCorrectCommentResponse {
	ResultList []*ResultCommentItem `json:"resultList"`
}

type ResultCommentItem {
	ResultId    string         `json:"resultId"`
	CommentList []*CommentView `json:"commentList"`
}

type ResultRequest {
	HomeworkId string `path:"homeworkId"`
	UserId     string `form:"userId"`
}

type ResultDetailRequest {
	HomeworkId string `json:"homeworkId"`
	ResultId   string `json:"resultId"`
	UserId     string `json:"userId"`
}

type EmptyMessagesRequest {
	HomeWorkId string `path:"homeworkId"`
}

type EmptyMessagesResponse {
	HomeWorkId string `path:"homeworkId"`
}

type SetResultStatusRequest {
	HomeworkId string       `path:"homeworkId"`
	ResultId   string       `path:"resultId"`
	Status     string       `json:"status"` // Review 订正, Pass 通过
	Content    string       `json:"content"`
	Audio      AudioRequest `json:"audio,optional"`
}

type SetResultStatusResponse {
	ReviewComment *CommentView `json:"comment,omitempty"`
}

type ResultCountRequest {
	HomeworkId string   `path:"homeworkId"`
	Modes      []string `json:"modes"` // Normal,NoOperate,Operated,Review,Pass
}

type ResultCountResponse {
	Counts         []*ResultModeCount `json:"counts"`         // Normal,NoOperate,Operated,Review,Pass
	LastNotifyList []string           `json:"lastNotifyList"` // 最后一次通知的用户ID列表
	UnNotifyNum    int64              `json:"unNotifyNum"`    // 待提醒订正作业数
}

type ResultModeCount {
	Mode  string `json:"mode"` // Normal,NoOperate,Operated,Review,Pass
	Count int64  `json:"count"`
}

type ContentableRequest {
	Title       string                 `json:"title,optional"`
	Content     string                 `json:"content,optional"`
	Images      []*ImageRequest        `json:"images,optional"`
	Audio       *AudioRequest          `json:"audio,optional"`
	Video       *VideoRequest          `json:"video,optional"`
	Attachments []*AttachmentRequest   `json:"attachements,optional"`
	Extras      map[string]interface{} `json:"extras,optional"`
}

type ResultRevisionRequest {
	ContentableRequest
	ResultId    string        `path:"resultId"`
	HomeworkId  string        `path:"homeworkId"`
	OperateType string        `json:"operateType,optional"` // Update 重新提交 Review 订正
	TakeTime    int64         `json:"takeTime,optional"`    // 用时多久
	Signature   ImageRequest  `json:"signature,optional"`   // 家长签名
	AiSpeech    *AiSpeechOral `json:"aiSpeech,optional"`    // 口语测评
}

type ResultRevisionResponse {
	Status    string `json:"status"`
	SubStatus string `json:"subStatus"`
	ResultId  string `json:"resultId"`
}

type GetOralStatisticsRequest {
	HomeworkId string `path:"homeworkId"`
}

type OralStatisticsResponse {
	Score  int32         `json:"score,omitempty"`
	Scores []*ScoreTypes `json:"scores,omitempty"`
}

type ScoreTypes {
	Key   string `json:"key,omitempty"`
	Value int32  `json:"value,omitempty"`
}

type DetailHomeworkWithoutAuthRequest {
	HomeworkId string `json:"homeworkId"`
	UserId     string `json:"userId"`
}

type GenerateClassroomVerificationCodeRequest {
	Token       string `path:"token"`
	ClassroomId string `json:"classroomId"`
}

type GenerateClassroomVerificationCodeResponse {
}

type TransferRoomMemberRequest {
	Token           string   `path:"token"`
	ClassroomId     string   `json:"classroom"`
	MembersIds      []string `json:"members"`
	FromClassroomId string   `json:"fromClassroom"`
}

type BoolResponse {
	Successful bool `json:"successful"`
}

type ChildNameExistInClassroomRequest {
	Token       string `path:"token"`
	ChildName   string `json:"childName"`   // 孩子姓名
	ClassroomId string `json:"classroomId"` // 班级id
}

type ChildNameExistInClassroomResponse {
	Exist        bool   `json:"exist"`        // 是否重名
	Relationship string `json:"relationship"` // 关系
	Mobile       string `json:"mobile"`       // 手机号码
	UserId       string `json:"userId"`       // 用户id
}

type DisplayNameExistInClassroomRequest {
	Token       string `path:"token"`
	ClassroomId string `path:"classroomId"`       // 班级id
	Realname    string `json:"realname,optional"` // 孩子姓名
	UserId      string `json:"userId,optional"`   // 用户id
}

type DisplayNameExistInClassroomResponse {
	Exist bool   `json:"exist"` // 是否重名
	Desc  string `json:"desc"`  // 4.7.3
}

type FindChildByUserIdRequest {
	Token string `path:"token"`
}

type ChildrenStruct {
	ChildName    string `json:"childName"`
	Relationship string `json:"relationship"`
}

type FindChildByUserIdResponse {
	Classroom *ClassroomView   `json:"classroom,omitempty"` // 班级
	Children  []string         `json:"children,omitempty"`  // 孩子列表
	Childrens []ChildrenStruct `json:"childrens,omitempty"` // 孩子列表
}

type SetClassroomUserInfoRequest {
	Token        string `path:"token"`
	UserId       string `json:"userId"`
	ClassroomId  string `json:"classroomId"`
	Owner        bool   `json:"owner,optional"`
	ChildName    string `json:"childName,optional"`
	Relationship string `json:"relationship,optional"` // 关系
	DisplayName  string `json:"displayName,optional"`  // 别名
}

type TeacherQuitClassroomRequest {
	Token         string `path:"token"`
	ClassroomId   string `path:"classroomId"`            // 班级id
	TargetTeacher string `form:"targetTeacher,optional"` // 转让的目的老师
}

type ApplyQuitClassroomRequest {
	Token       string `path:"token"`
	Message     string `json:"message"`     // 验证信息
	ClassroomId string `json:"classroomId"` // 班级id
}

type SetClassroomPermissionRequest {
	Token       string `path:"token"`
	UserId      string `json:"userId"`           // 对方用户id
	ClassroomId string `json:"classroomId"`      // 所在班级id
	Role        string `json:"role"`             // 将要改变的角色  COMMON SPEAKABLE ADMIN MANAGER
	Subject     string `json:"subject,optional"` // 学科
	Code        string `json:"code,optional"`    // 转让班级验证码
}

type ClassroomUsersInfoRequest {
	Token       string   `json:"token"`
	ClassroomId string   `json:"classroomId,optional"`
	UserIds     []string `json:"userIds"`
}

type ClassroomUsersInfoData {
	UserView []*UserView `json:"users,omitempty"`
}

type UserView {
	Id                   string `json:"id"`
	Username             string `json:"username,omitempty"`   // 用户名
	Realname             string `json:"realname,omitempty"`   // 真实姓名
	Email                string `json:"email,omitempty"`      // 邮箱
	Mobile               string `json:"mobile"`               // 手机号码
	Address              string `json:"address,omitempty"`    // 通讯地址
	Role                 string `json:"role"`                 // 用户角色
	Avatar               string `json:"avatar,omitempty"`     // 头像图片id
	Pinyin               string `json:"pinyin,omitempty"`     // 拼音
	School               string `json:"school,omitempty"`     // 所在学校
	DisplayName          string `json:"displayName"`          // 显示名
	UserType             string `json:"userType,omitempty"`   // 用户类型
	SpeakableInClassroom bool   `json:"speakableInClassroom"` // 是否可在班级发言
	ClassroomRole        string `json:"classroomRole"`        // 班级角色
	Subject              string `json:"subject,omitempty"`    // 班级学科
	CreateTime           int64  `json:"createTime,omitempty"` // 创建时间
}

type QueryClassroomsAndMembersRequest {
	Token     string `path:"token"`
	Speakable string `path:"speakable"` // 是否从可发言的班级中获取数据
	Cursor    int64  `form:"cursor,optional"`
	Limit     int8   `form:"limit,optional"`
}

type QueryClassroomsAndMembersResponse {
	Classrooms   []*ClassroomView `json:"classroomViews,omitempty"`
	Cursor       int64            `json:"cursor,omitempty"`
	HaveNextPage bool             `json:"haveNextPage"`
}

type RemoveClassroomMemberRequest {
	Token       string `path:"token"`
	ClassroomId string `json:"classroomId"`
	MemberId    string `json:"memberId"`         // 成员id
	Message     string `json:"message,optional"` // 移除原因
}

type QueryClassroomMembersAndTeachersRequest {
	Token       string `path:"token"`
	ClassroomId string `path:"classroomId"`
}

type QueryClassroomMembersAndTeachersResponse {
	Members  []*UserView `json:"members"`  // 班级成员列表
	Teachers []*UserView `json:"teachers"` // 班级教师列表
}

type BatchQuitClassroomRequest {
	Token       string   `path:"token"`
	ClassroomId string   `json:"classroomId"`
	Members     []string `json:"members"`
	Agree       bool     `json:"agree,optional"`
}

type BatchAuditJoinClassroomRequest {
	Token       string   `path:"token"`
	ClassroomId string   `json:"classroomId"`
	Members     []string `json:"members"`
	Agree       bool     `json:"agree,optional"`
}

type GetClassroomAuditMembersRequest {
	Token       string `path:"token"`
	ClassroomId string `path:"classroomId"` // 班级id
}

type TestPaperJoinRequest {
	HomeworkId  string `path:"homeworkId"`
	TestPaperId string `json:"testPaperId,optional"` // 题库作业报告id
}

type TestPaperJoinResponse {
	ResultId       string         `json:"resultId"`
	HomeworkId     string         `json:"homeworkId"`
	SenderId       string         `json:"senderId"`
	ClassroomId    string         `json:"classroomId"`
	FinishDuration int64          `json:"finishDuration"`
	JoinUserId     string         `json:"classroomMemberId"`     //
	HomeworkType   string         `json:"homeworkType,optional"` //  "COMMON" - 常规作业人， "TESTPAPER" - 题库作业   "AISPEECH" - 口语测评
	TestPaper      *TestPaperInfo `json:"testPaper,optional"`    // 第三方题库作业信息
}
type GetClassroomAuditMembersResponse {
	ApplyJoin []ApplyUser `json:"applyJoin"` // 申请加入班级的成员
	ApplyQuit []ApplyUser `json:"applyQuit"` // 申请退出班级的成员
}

type ApplyUser {
	Id                   string `json:"id"`
	Email                string `json:"email"`                // 邮箱
	Mobile               string `json:"mobile"`               // 手机号码
	Role                 string `json:"role"`                 // 用户角色
	Avatar               string `json:"avatar"`               // 头像图片id
	Pinyin               string `json:"pinyin"`               // 拼音
	VerifyMessage        string `json:"verifyMessage"`        // 当用户加入班级的验证信息
	DisplayName          string `json:"displayName"`          // 显示名
	UserType             string `json:"userType"`             // 用户类型
	SpeakableInClassroom bool   `json:"speakableInClassroom"` // 是否可在班级发言
	NetEaseRegister      string `json:"netEaseRegister"`      // 是否注册云信,默认是false
	ClassroomRole        string `json:"classroomRole"`        // 班级角色
	Timestamp            int64  `json:"timestamp,omitempty"`  // 排序时间戳
}

type RemoveClassroomRequest {
	Token       string `path:"token"`
	ClassroomId string `path:"classroomId"`
	Code        string `json:"code,optional"`
}

type ApplyJoinClassroomRequest {
	Token        string `path:"token"`
	Message      string `json:"message,optional"`      // 验证信息
	DisplayName  string `json:"displayName,optional"`  // 用户在此班级的显示名称(以老师身份加入)
	ClassroomId  string `json:"classroomId"`           // 需要加入的班级id
	ChildName    string `json:"childName,optional"`    // 孩子姓名（以家长身份加入）
	Relationship string `json:"relationship,optional"` // 关系
	JToken       string `json:"token,optional"`
}

type UpdateClassroomRequest {
	UpdateClassroomInfoRequest
}

type UpdateClassroomInfoRequest {
	Token            string `path:"token"`
	Name             string `json:"name,optional"`             // 班级名称
	BadgeId          string `json:"badgeId,optional"`          // 班徽id
	BadgeType        string `json:"badgeType,optional"`        // 班徽类型
	ClassType        string `json:"classType,optional"`        // 班级类型
	ManagerName      string `json:"managerName,optional"`      // 创建者显示名
	Stage            string `json:"stage,optional"`            // 学段(高中，初中)
	Grade            string `json:"grade,optional"`            // 年级
	ClassNo          string `json:"classNo,optional"`          // 班级号（1-20班)
	Subject          string `json:"subject,optional"`          // 学科
	School           string `json:"school,optional"`           // 学校
	ClassroomId      string `json:"classroomId,optional"`      // 班级id
	UserId           string `json:"userId,optional"`           // 用户id
	BgImage          string `json:"bgImage,optional"`          // 班级背景图
	MutualDisclosure bool   `json:"mutualDisclosure,optional"` // 任课教师相互可见
	Hide             bool   `json:"hide,optional"`             // 是否可以根据手机号查询
	Locking          bool   `json:"locking,optional"`          // 是否锁定此班级
	BindCloud        bool   `json:"bindCloud,optional"`        // 是否绑定晓教云
}

type SearchClassroomByCodeOrMobileRequest {
	Token   string `path:"token"`
	Keyword string `path:"keyword"`
}

type QueryClassroomByCodeRequest {
	Code string `path:"code"`
}

type CreateClassroomAddMembersRequest {
	Token        string   `path:"token"`
	Name         string   `json:"name,optional"`         // 班级名称
	BadgeId      string   `json:"badgeId,optional"`      // 班徽id
	BadgeType    string   `json:"badgeType,optional"`    // 班徽类型
	ClassType    string   `json:"classType,optional"`    // 班级类型
	ManagerName  string   `json:"managerName,optional"`  // 创建者显示名
	ClassroomIds []string `json:"classroomIds,optional"` // 班级列表
	Users        []string `json:"users,optional"`        // 人员列表
}

type UserClassroomsRequest {
	Token string `path:"token"`
}

type UserClassroomsResponse {
	LastTimestamp  int64            `json:"lastTimestamp"` // 最近拉取时间
	ClassroomViews []*ClassroomView `json:"classrooms"`    // 班级列表
}

type UpsetExtraHomeworkRequest {
	Id          string                 `json:"id"`          // 补充作业Id
	HomeworkId  string                 `json:"homeworkId"`  // 作业Id
	OperateType string                 `json:"operateType"` // Add,Update,Delete
	Title       string                 `json:"title,optional"`
	Content     string                 `json:"content,optional"`
	Images      []*ImageRequest        `json:"images,optional"`
	Audio       *AudioRequest          `json:"audio,optional"`
	Video       *VideoRequest          `json:"video,optional"`
	Attachments []*AttachmentRequest   `json:"attachements,optional"`
	Extras      map[string]interface{} `json:"extras,omitempty,optional"`
}

type UpsetExtraHomeworkResponse {
	Message *ExtraHomeworkMessage `json:"message"`
}

type ExtraHomeworkMessage {
	*ContentableView
	Id          string            `json:"id"`         // 补充作业Id
	HomeworkId  string            `json:"homeworkId"` // 作业Id
	SenderId    string            `json:"senderId,omitempty"`
	Sender      *SimpleSenderView `json:"sender,omitempty"`
	ClassroomId string            `json:"classroomId"`
	CreateTime  int64             `json:"createTime"`
	UpdateTime  int64             `json:"updateTime"`
}

type GetExtraHomeworkListRequest {
	HomeworkId string `path:"homeworkId"`
}

type GetExtraHomeworkListResponse {
	Messages []*ExtraHomeworkMessage `json:"messages"`
}

type MarkHomeworkResultRequest {
	HomeworkId string `json:"homeworkId"`
	ResultId   string `json:"resultId"`
	Type       string `json:"type"` // Score 分值，Star 星值, Delete 删除
	Score      int    `json:"score"`
}

type AppraisalHomeworkResultRequest {
	HomeworkId string       `json:"homeworkId"`
	ResultId   string       `json:"resultId"`
	Type       string       `json:"type"` // Appraisal 评价, Delete 删除
	Appraisal  []*Appraisal `json:"appraisal"`
}

type AppraisalHomeworkResultResponse {
	IsAppraisal    bool              `json:"isAppraisal"`              // 是否已评价
	AppraisalTotal int64             `json:"appraisalTotal,omitempty"` // 已评价的指标数
	AppraisalScore int64             `json:"appraisalScore,omitempty"` // 已评价的指标分数
	AppraisalList  []*AppraisalViews `json:"appraisalList,omitempty"`  // 评价列表
}

type Appraisal {
	RecordId    int64  `json:"recordId,optional"`  // 评价记录id，删除评价的时候用，评价的时候不传
	Type        int32  `json:"type"`               // 评价类型
	IndicatorId int64  `json:"indicatorId"`        // 教师评价指标
	GradeName   string `json:"gradeName,optional"` // 等第
	Score       int64  `json:"score,optional"`     // 教师评价分数
}

type HomeworkResultStatRequest {
	HomeworkId string `path:"homeworkId"`
}

type HomeworkResultStatResponse {
	MarkNum             int64                 `json:"markNum"`    // 打分成果数
	MarkType            string                `json:"markType"`   // Invalid 未进行过， Score 分值，Star 星值,
	ScoreAvg            float64               `json:"scoreAvg"`   // 平均得分
	UseTimeAvg          float64               `json:"useTimeAvg"` // 平均用时 ms
	PersonalResultStats []*PersonalResultStat `json:"personalResultStats,omitempty"`
	StarStats           []*StarStat           `json:"starStats,omitempty"`
}

type PersonalResultStat {
	ChildName string              `json:"childName,omitempty"`
	Members   []*FamilyMemberView `json:"members,omitempty"`
	Score     int64               `json:"score"`
	UseTime   int64               `json:"useTime"` // ms
	Marked    bool                `json:"marked"`  // 是否评分
}

type StarStat {
	Score     int64 `json:"score"`
	ResultNum int64 `json:"resultNum"` // 成果数
}

type FamilyMemberView {
	UserId      string `json:"userId,omitempty"`
	IsReceipted bool   `json:"isReceipted,omitempty"` // 是否收到 这条消息， receipt
	IsJoined    bool   `json:"isJoined,omitempty"`    // 是否参与 activity，survey
}

type MessageListRequest {
	Size      int    `json:"size,optional"`      //分页大小
	Timestamp int64  `json:"timestamp,optional"` //偏移量
	Status    string `json:"status"`             //状态 3day_in=>3天内,3day_before=>3天前, processing=>进行中,finish=>已完成
}

type HomeworkViewMessage {
	Title           string                 `json:"title,omitempty"`
	Content         string                 `json:"content,omitempty"`
	Images          []*Image               `json:"images,omitempty"`
	Audio           *Audio                 `json:"audio,omitempty"`
	Video           *Video                 `json:"video,omitempty"`
	Attachments     []*Attachment          `json:"attachements,omitempty"`
	Extras          map[string]interface{} `json:"extras,omitempty"`
	From            string                 `json:"from,omitempty"`
	JoinedUser      string                 `json:"joinUserId"`
	Status          string                 `json:"status"`    // "Needless", 无需参加, "Joined" 已提交,"UnJoin" 未提交
	SubStatus       string                 `json:"subStatus"` // "Review", 需订正, "Reviewed" 已订正,"Pass" 已通过
	EndTime         int64                  `json:"endTime"`
	Open            bool                   `json:"open"`                      // 成果是否互相可见
	NeedJoin        bool                   `json:"needJoin"`                  // 是否需要家长参与上传作业
	NeedSignature   bool                   `json:"needSignature"`             // 是否需要签名
	SuggestDuration int64                  `json:"suggestDuration,omitempty"` // 建议时长
	HomeworkType    string                 `json:"homeworkType"`              //  "COMMON" - 常规作业人， "TESTPAPER" - 题库作业   "AISPEECH" - 口语测评
	TestPaper       *TestPaperInfo         `json:"testPaper,optional"`        // 第三方题库作业信息
}

type MessageListView {
	Id            string               `json:"id"`
	From          string               `json:"from,omitempty"`         // 来自哪里
	Category      string               `json:"category,omitempty"`     // 消息分类
	Identifier    string               `json:"identifier,omitempty"`   // 用户端的消息唯一id
	CreateTime    int64                `json:"createTime"`             // 创建时间
	Sender        *SimpleSenderView    `json:"sender,omitempty"`       // 消息发送者
	DeliveryTime  int64                `json:"deliveryTime,omitempty"` // 定时发送时间
	Timestamp     int64                `json:"timestamp"`              // 用于排序的时间
	ClassroomView *ClassroomView       `json:"classroom,omitempty"`    // 如果是班级消息会带上这个班级相关属性
	Receipt       *Receipt             `json:"receipt,omitempty"`
	Observer      bool                 `json:"observer,omitempty"`
	ReceiverId    string               `json:"receiverId,omitempty"`
	SenderId      string               `json:"senderId,omitempty"`
	ClassroomId   string               `json:"classroomId,omitempty"`
	HomeworkView  *HomeworkViewMessage `json:"homeworkView,omitempty"` // 作业
	UnreadCount   int64                `json:"unreadCount,omitempty"`  // 未读数字
	IsTop         bool                 `json:"isTop"`                  // 是否为置顶消息
	IsParticipate bool                 `json:"isParticipate"`          // 是否参与
}

type MessageListResponse {
	LastTimestamp int64              `json:"lastTimestamp,omitempty"`
	HasMore       bool               `json:"hasMore"`
	TotalSize     int                `json:"totalSize"`
	Messages      []*MessageListView `json:"messages,omitempty"`
}

type HomeworkReviseNotifyRequest {
	HomeworkId string `path:"homeworkId"`
}

type HomeworkReviseNotifyResponse {
	Code int `path:"code"`
}

type ExtraHomeworkReadRequest {
	HomeworkId string `path:"homeworkId"`
}

type ExtraHomeworkReadResponse {
	Code int `path:"code"`
}

type ConfigKV {
	Content string `json:"content"`
	Type    int    `json:"type"`
}

type GetJyyConfigRequest {
}

type GetJyyConfigResponse {
	Subject []*ConfigKV `json:"subject"`
	Section []*ConfigKV `json:"section"`
}

type NotPublishedPaperRequest {
}

type NotPublishedPaper {
	Id           int               `json:"id"`
	Title        string            `json:"title"`
	ModifierId   string            `json:"modifierId"`
	CreatorName  string            `json:"creatorName"`
	ModifierName string            `json:"modifierName"`
	ClassId      string            `json:"classId"`
	State        int               `json:"state"`
	CreatorId    string            `json:"creatorId"`
	Deleted      int               `json:"deleted"`
	ModifyTime   int64             `json:"modifyTime"`
	CreateTime   int64             `json:"createTime"`
	HomeworkId   string            `json:"-,option,omitempty"`
	Subject      string            `json:"subject"`     // 学科
	CatalogInfo  []*JyyCatalogInfo `json:"catalogInfo"` // 试题信息统计
}

type JyyCatalogInfo {
	CatalogId     string `json:"catalogId,omitempty"`
	CatalogName   string `json:"catalogName,omitempty"`
	QuestionCount int64  `json:"questionCount"`
}

type JyyUpdateNotPublishedRequest {
	PaperId string `json:"paperId"`
}

type JyyDeleteNotPublishedRequest {
	PaperId string `path:"paperId"`
}

type JyyUpdateNotPublishedResponse {
}

type JyyDeleteNotPublishedResponse {
}

// 跳转选题页面参数
// 1 ：跳转到指定题包页面（此时catalogId,versionId,courseOneLevelId,courseSecondLevelId,oneLevelId,selectNodeId必传）
// 2 ：跳转到指定题库教材版本页面（此时catalogId，versionId必传）
type JumpParams {
	CatalogId           string `json:"catalogId"`
	VersionId           string `json:"versionId"`
	CourseOneLevelId    string `json:"courseOneLevelId,optional"`
	CourseSecondLevelId string `json:"courseSecondLevelId,optional"`
	OneLevelId          string `json:"oneLevelId,optional"`
	SelectNodeId        string `json:"selectNodeId,optional"`
}

type GetJyyUrlRequest {
	UserId      string `json:"-,optional"`
	SenderId    string `json:"senderId,optional,omitempty"` // 用于获取学生个人报告 url
	HomeworkId  string `json:"homeworkId,optional,omitempty"`
	ClassId     string `json:"classId,optional,omitempty"`
	TestPaperId string `json:"testPaperId,optional,omitempty"`
	// summary: routeCode:定义为如下类型：
	// "AddTestPaperUrl"            - 【移动端】获取添加作业选题页面  URL
	// "EditTestPaperUrl"           - 【移动端】获取编辑作业页面    URL 作业ID必传
	// "EditTestPaperPcUrl"         - 【web端】【PC端】获取添加作业选题
	// "EditTestPaperPcUrl"         - 【web端】【PC端】编辑作业页面URL 作业ID必传
	// "StudentTestPaperReportUrl"  - 【各端通用】获取学生报告     URL 作业ID必传
	// "TeacherTestPaperReportUrl"  - 【各端通用】获取老师报告     URL 作业ID必传
	// "StudentAnswerPaperUrl"      - 【各端通用】学生作答       URL
	RouteCode  string      `json:"routeCode"`
	Subject    int         `json:"subject,optional"`    // 学科
	Section    int         `json:"section,optional"`    // 学段
	Jump       bool        `json:"jump,optional"`       // 当RouteCode="AddTestPaperUrl"或"EditTestPaperUrl"添加，用于确定是否需要跳转至指定页面
	JumpParams *JumpParams `json:"jumpParams,optional"` // Jump为true时必传
}

type GetJyyUrlResponse {
	Url string `json:"url"`
}

type TemplateRequest {
	Subject string `json:"subject"` // en 外语  zh 语文
}

type TemplateResponse {
	TemplateList []*TemplateView `json:"templateList"`
}

type TemplateView {
	Tag   string     `json:"tag,omitempty"`
	Items []Template `json:"items,omitempty"`
}

type Template {
	Id          string   `json:"id,omitempty"`
	Title       string   `json:"title,omitempty"`
	SubjectType string   `json:"subjectType,omitempty"`
	Content     string   `json:"content,omitempty"`
	Picture     string   `json:"picture,omitempty"`
	XhbTag      string   `json:"xhbTag,omitempty"`
	XhbTagId    string   `json:"xhbTagId,omitempty"`
	Status      bool     `json:"status,omitempty"`
	UseCount    int32    `json:"useCount,omitempty"`
	CreateTime  int64    `json:"createTime,omitempty"`
	UpdateTime  int64    `json:"updateTime,omitempty"`
	Timestamp   int64    `json:"timestamp,omitempty"`
	Images      []*Image `json:"images,omitempty"`
	Link        *Link    `json:"link,omitempty"`
	Video       *Video   `json:"video,omitempty"`
}

type Link {
	Image string `json:"image,omitempty"`
	Url   string `json:"url,omitempty"`
	Title string `json:"title,omitempty"`
}

type AiSpeechInfo {
	ResultId    string            `json:"resultId,omitempty"`
	SenderId    string            `json:"senderId,omitempty"`
	SenderView  *SimpleSenderView `json:"senderView,omitempty"`
	ClassroomId string            `json:"classroomId,omitempty"`
	Platform    string            `json:"platform,omitempty"` // tal - 好未来  singsound - 先声
	OralItem    *OralItem         `json:"oralItem,omitempty"`
}

type ResultAiSpeechListRequest {
	HomeworkId string `json:"homeworkId"`
}

type ResultAiSpeechListResponse {
	List []*AiSpeechInfo `json:"list"`
}

type ResultAiSpeechListShareRequest {
	HomeworkId string `json:"homeworkId"`
	UserId     string `json:"userId"`
}

type ResultAiSpeechListShareResponse {
	List []*AiSpeechInfo `json:"list"`
}

type AiSpeechResultRequest {
	ResultId   string `json:"resultId"`
	ResultJson string `json:"resultJson"`
	Status     int    `json:"status,omitempty"`
	Platform   string `json:"platform,optional"`  // tal - 好未来  singsound - 先声
	RequestId  string `json:"requestId,optional"` // 平台requestId
}

type AiSpeechResultResponse {
	AiSpeechId string `json:"aiSpeechId"`
}

type ResultAiSpeechLikeRequest {
	ResultId string `json:"resultId"`
	Like     int    `json:"like"`
}

type ResultAiSpeechLikeResponse {
}

type AiSpeechMessageListRequest {
	LastTime int64 `json:"lastTime,optional"`
	PageSize int   `json:"pageSize,optional"`
}

type AiSpeechMessageListResponse {
	LastTimestamp int64          `json:"lastTimestamp,omitempty"`
	HasMore       bool           `json:"hasMore"`
	TotalSize     int            `json:"totalSize"`
	List          []*MessageView `json:"list"`
}

type AispeechBatchLikeRequest {
	HomeworkId string `json:"homeworkId"`
}

type AispeechBatchLikeResponse {
}

type AispeechChartDataRequest {
	HomeworkId string `json:"homeworkId"`
}
type AispeechChartDataResponse {
	AverageScore int                      `json:"averageScore"`
	Columns      []*AispeechChartDataItem `json:"columns"`
	WrongWords   []*WrongWord             `json:"wrongWords"`
}
type AispeechChartDataItem {
	Num          int    `json:"num"`
	LevelDisplay string `json:"levelDisplay"`
}
type WrongWord {
	Word  string `json:"word"`
	Count int    `json:"count"`
}

type AispeechResultInfoRequest {
	HomeworkId string `json:"homeworkId"`
	Type       string `json:"type"` // join-已提交  unjoin-未读
}
type AispeechResultInfoResponse {
	Join          int                   `json:"join"`
	UnJoin        int                   `json:"unJoin"`
	Results       []*AispeechResultItem `json:"results,omitempty"`
	WrongWordsMap map[string]int        `json:"wrongWordsMap,omitempty"` //错字信息 v5
}

type AispeechResultItem {
	SenderId        string      `json:"senderId,omitempty"`
	ResultId        string      `json:"resultId,omitempty"`
	ClassroomId     string      `json:"classroomId,omitempty"`
	IsParise        int         `json:"isParise"`
	PariseMembers   []string    `json:"pariseMembers,omitempty"`
	ThumbUpCount    int         `json:"thumbUpCount"`              //点赞总数 v6
	EarliestThumbUp []string    `json:"earliestThumbUp,omitempty"` //最早的点赞人 v6
	Audio           *Audio      `json:"audio,omitempty"`
	OralItem        *OralItem   `json:"oralItem,omitempty"`
	IsRead          bool        `json:"isRead"`
	CreateTime      int64       `json:"createTime,omitempty"`
	UpdateTime      int64       `json:"updateTime,omitempty"`
	ReplyItems      *ReplyItems `json:"replyItems,omitempty"`
}

type ReplyItems {
	Replies []*Reply `json:"replies"`
	Cursor  *Cursor  `json:"cursor"`
}

type Reply {
	Id            string `json:"id"`
	ReplyUserId   string `json:"replyId"`
	BeReplyUserId string `json:"beReplyId"`
	Content       string `json:"content"`
	Image         *Image `json:"image"`
	Audio         *Audio `json:"audio"`
	CreateTime    int64  `json:"createTime"`
}

type Cursor {
	IsEnd bool  `json:"isEnd"`
	Time  int64 `json:"time"`
	Count int64 `json:"count"`
}

type AispeechSaveRequest {
	HomeworkId string        `json:"homeworkId"`
	ResultId   string        `json:"resultId,optional"`
	AiSpeech   *AiSpeechItem `json:"aiSpeech,optional"` // 口语测评
}

type AiSpeechItem {
	OralLogIds []string `json:"oralLogIds,optional"`
}

type AispeechSaveResponse {
	ResultId string `json:"resultId"`
	OralId   string `json:"oralId"`
}

type ChoicXhbTemplateRequest {
	TemplateId string `path:"templateId"`
}

type ChoicXhbTemplateResponse {
	Id           string     `json:"id,omitempty"`
	Category     string     `json:"category,omitempty"`
	Identifier   string     `json:"identifier,omitempty"`
	Sender       SenderSt   `json:"sender,omitempty"`
	HomeworkView HomeworkSt `json:"homeworkView,omitempty"`
	Receipt      *ReceiptSt `json:"receipt,omitempty"`
	ClassroomId  string     `json:"classroomId,omitempty"`
	CallbackApi  string     `json:"callbackApi,omitempty"`
}

type SenderSt {
	Id          string `json:"id,omitempty"`
	DisplayName string `json:"displayName,omitempty"`
	Avater      string `json:"avatar,omitempty"`
}

type Attrs {
	// 大小
	Size string `bson:"size,omitempty" json:"size,omitempty"`
}

type HomeworkSt {
	Title        string                 `json:"title,omitempty"`
	Content      string                 `json:"content,omitempty"`
	HomeworkType string                 `json:"homeworkType,omitempty"`
	Images       []*Image               `json:"images,omitempty"`
	Video        *Video                 `json:"video,omitempty"`
	Extras       map[string]interface{} `json:"extras,omitempty"`
	Id           string                 `json:"id,omitempty"`
	Open         bool                   `json:"open,omitempty"`
	ExpireTime   int64                  `json:"expireTime,omitempty"`
	Available    bool                   `json:"available,omitempty"`
	Tag          string                 `json:"tag,omitempty"`
	Subject      string                 `json:"subject,omitempty"`
	From         string                 `json:"from,omitempty"`
	ClassroomId  string                 `json:"classroomId,omitempty"`
	Attachments  []*Attachment          `json:"attachements,omitempty"`
}

type ReceiptSt {
	Total     int64 `json:"total,omitempty"`
	Receipted int64 `json:"receipted,omitempty"`
}

type AispeechCollectionView {
	Title      string `json:"title,omitempty"`      // 标题
	Subject    string `json:"subject,omitempty"`    // 科目
	Content    string `json:"content,omitempty"`    // 内容
	From       string `json:"from,omitempty"`       // 来源
	JoinedUser string `json:"joinUser"`             // 已提交用户
	EndTime    int64  `json:"endTime,omitempty"`    // 截止时间
	CreateTime int64  `json:"createTime,omitempty"` // 创建时间
	SubmitCnt  int64  `json:"submitCnt"`            // 提交数量
	TotalCnt   int32  `json:"totalCnt,omitempty"`   // 总数量
}

type HanLinHomework {
	Title         string             `json:"title"`
	Content       string             `json:"content"`
	HanLinAcademy *HanlinAcademyView `json:"hanlinAcademy"`
}

type PublishAispeechCollectionView {
	Id                     string                  `json:"id"`
	Category               string                  `json:"category,omitempty"`
	Timestamp              int64                   `json:"timestamp,omitempty"`
	Observer               bool                    `json:"observer,omitempty"`
	SenderId               string                  `json:"senderId,omitempty"`
	ClassroomId            string                  `json:"classroomId,omitempty"`
	AispeechCollectionView *AispeechCollectionView `json:"aispeechCollectionView,omitempty"`
	IsTop                  bool                    `json:"isTop,omitempty"`
	IsParticipate          bool                    `json:"isParticipate,omitempty"`
	CreateTime             int64                   `json:"createTime,omitempty"`
}

type PublishAispeechBatchRequest {
	DeliveryTime int64                `json:"deliveryTime,optional"` // 定时发送
	Receivers    []*Receiver          `json:"receivers"`             // 接收人
	HomeWork     *HomeWorkRequestBase `json:"homework"`              // 作业
	HanLinList   []*HanLinHomework    `json:"hanlinList"`            // 内容集合
	Aispeech     *Aispeech            `json:"aispeech"`              // 口语测评
}

type PublishAispeechBatchResponse {
	Messages []*PublishAispeechCollectionView `json:"messages,omitempty"`
}

type QueryAiSpeechBatchRequest {
	HomeworkId string `path:"homeworkId"` // 批次作业id
}

type QueryStudentAiSpeechBatchResponse {
	Title      string                           `json:"title"`      // 作业标题
	EndTime    int64                            `json:"endTime"`    // 作业结束时间
	CreateTime int64                            `json:"createTime"` // 布置开始时间
	Messages   []*QueryStudentAiSpeechBatchView `json:"messages"`
}

type QueryTeacherAiSpeechBatchResponse {
	Title        string                           `json:"title"`        // 作业标题
	EndTime      int64                            `json:"endTime"`      // 作业结束时间
	CreateTime   int64                            `json:"createTime"`   // 布置开始时间
	DeliveryTime int64                            `json:"deliveryTime"` // 投递时间
	Messages     []*QueryTeacherAiSpeechBatchView `json:"messages"`
}

type QueryStudentAiSpeechBatchView {
	Title        string `json:"title"`        // 作业标题
	Id           string `json:"id"`           // 作业id
	Status       string `json:"status"`       // 作业状态 Joined 完成，unJoined 未完成
	DeliveryTime int64  `json:"deliveryTime"` // 投递时间
}

type QueryTeacherAiSpeechBatchView {
	Title       string `json:"title"`       // 作业标题
	Id          string `json:"id"`          // 作业id
	DeliverTime int64  `json:"deliverTime"` // 作业投递时间
	SubmitCnt   int    `json:"submitCnt"`   // 已经提交数量
	TotalCnt    int    `json:"totalCnt"`    // 总布置数量
}

type AddResultMarkResponse {
	ResultMarkType string `json:"resultMarkType"` // 当前评分类型。
}

service homework-api {
	@doc(
		summary: 获取教研云相关 url
	)
	@server(
		handler: GetJyyUrlHandler
	)
	post /homework/jyy/url (GetJyyUrlRequest) returns (GetJyyUrlResponse)
	
	@doc(
		summary: 获取教研云年级学段配置
	)
	@server(
		handler: GetJyyConfigHandler
	)
	get /homework/jyy/subject-grade-config (GetJyyConfigRequest) returns (GetJyyConfigResponse)
	
	@doc(
		summary: 删除尚未发布的试题
	)
	@server(
		handler: JyyDeleteNotPublishedHandler
	)
	delete /homework/jyy/delete-not-published/:paperId (JyyDeleteNotPublishedRequest) returns (JyyDeleteNotPublishedResponse)
	
	@doc(
		summary: 更新尚未发布的试题
	)
	@server(
		handler: JyyUpdateNotPublishedHandler
	)
	post /homework/jyy/update-not-published (JyyUpdateNotPublishedRequest) returns (JyyUpdateNotPublishedResponse)
	
	@doc(
		summary: 获取教师未发布的试卷
	)
	@server(
		handler: GetNotPublishedHandler
	)
	get /homework/jyy/not-published (NotPublishedPaperRequest) returns ([]*NotPublishedPaper)
	
	@doc(
		summary: 是否是付费功能
	)
	@server(
		handler: GetAuthHandler
	)
	get /homework/auth (IsAuthRequest) returns (IsAuthResponse)
	
	@doc(
		summary: 是否为灰度用户
	)
	@server(
		handler: GetGrayUserHandler
	)
	get /homework/gray-user (IsGrayUserRequest) returns (IsGrayUserResponse)
	
	@doc(
		summary: 发布作业
	)
	@server(
		handler: PublishHomeworkHandler
	)
	post /homework/publish (PublishHomeworkRequest) returns (PublishHomeworkResponse)
	
	@doc(
		summary: 查看作业详情
	)
	@server(
		handler: HomeworkDetailHandler
	)
	get /homework/publish/detail/:homeworkId (DetailHomeworkRequest) returns (DetailHomeworkResponse)
	
	@doc(
		summary: 设置家庭作业相关
	)
	@server(
		handler: UpdateHomeworkSettingHandler
	)
	post /homework/setting/:homeworkId (UpdateHomeworkSettingRequest) returns (UpdateHomeworkSettingResponse)
	
	@doc(
		summary: 给某个作业成果点赞
	)
	@server(
		handler: PariseHandler
	)
	post /homework/praise/:resultId (PraiseRequest) returns (PraiseResponse)
	
	@doc(
		summary: 给某个作业成果评论
	)
	@server(
		handler: CommentHandler
	)
	post /homework/comment/:resultId (CommentRequest) returns (CommentResponse)
	
	@doc(
		summary: 老师批量批改作业
	)
	@server(
		handler: BatchCorrectionCommentHandler
	)
	post /homework/batch-comment/:homeWorkId (BatchCorrectCommentRequest) returns (BatchCorrectCommentResponse)
	
	@doc(
		summary: 给某个作业设置为精品内容
	)
	@server(
		handler: SetHighQualityHandler
	)
	post /homework/result/highquality/:resultId (ResultHighQualityRequest) returns (ResultHighQualityResponse)
	
	@doc(
		summary: 取消精品
	)
	@server(
		handler: RecallHighQualityHandler
	)
	post /homework/result/recall/highquality/:resultId (ResultHighQualityRecallRequest) returns (ResultHighQualityRecallResponse)
	
	@doc(
		summary: 获取已交作业列表
	)
	@server(
		handler: ResultsListHandler
	)
	get /homework/results/detail/:homeworkId (ResultListRequest) returns (ResultListResponse)
	
	@doc(
		summary: 根据用户id和homeworkId 查询成果
	)
	@server(
		handler: ResultsHandler
	)
	get /homework/result/user/detail/:homeworkId (ResultRequest) returns (Result)
	
	@doc(
		summary: 家长提交作业
	)
	@server(
		handler: JoinHomeworkHandler
	)
	post /homework/result/join/:homeworkId (ResultJoinRequest) returns (ResultJoinResponse)
	
	@doc(
		summary: 家长提交题库作业
	)
	@server(
		handler: JoinTestPaperHandler
	)
	post /homework/result/join/paper/:homeworkId (TestPaperJoinRequest) returns (TestPaperJoinResponse)
	
	@doc(
		summary: 家长撤回成果
	)
	@server(
		handler: RecallResultHandler
	)
	post /homework/result/recall/:resultId (ResultRecallRequest) returns (ResultRecallResponse)
	
	@doc(
		summary:  未读消息数
	)
	@server(
		handler: UnreadCountHandler
	)
	get /homework/unread/count/:homeworkId (UnreadCountRequest) returns (UnreadCountResponse)
	
	@doc(
		summary: 查看未读消息
	)
	@server(
		handler: ViewsUnreadMessageHandler
	)
	get /homework/views/unread/message/:homeworkId (ViewsUnreadMessageRequest) returns (ViewsUnreadMessageResponse)
	
	@doc(
		summary: 查看已读消息
	)
	@server(
		handler: ViewsReadMessageHandler
	)
	get /homework/views/read/message/:homeworkId (ViewsReadMessageRequest) returns (ViewsReadMessageResponse)
	
	@doc(
		summary: 删除评论
	)
	@server(
		handler: CommentDeleteHandler
	)
	delete /homework/comment/:resultId/:commentId (CommentDeleteRequest) returns (CommentDeleteResponse)
	
	@doc(
		summary: 清空角标消息列表
	)
	@server(
		handler: EmptyMessagesHandler
	)
	delete /homework/empty/messages/:homeworkId (EmptyMessagesRequest) returns (EmptyMessagesResponse)
	
	@doc(
		summary: 设置状态
	)
	@server(
		handler: SetResultStatusHandler
	)
	post /homework/result/set-status/:homeworkId/:resultId (SetResultStatusRequest) returns (SetResultStatusResponse)
	
	@doc(
		summary: 家长重新提交作业加订正
	)
	@server(
		handler: RevisionResultHandler
	)
	post /homework/result/revision/:homeworkId/:resultId (ResultRevisionRequest) returns (ResultRevisionResponse)
	
	@doc(
		summary:  获取已交作业成果数
	)
	@server(
		handler: ResultsCountHandler
	)
	post /homework/results/count/:homeworkId (ResultCountRequest) returns (ResultCountResponse)
	
	@doc(
		summary:  根据 Id 获取已交作业成果详情
	)
	@server(
		handler: ResultDetailHandler
	)
	post /homework/result/info (ResultDetailRequest) returns (Result)
	
	@doc(
		summary: 获取班级口语测评统计
	)
	@server(
		handler: GetOralStatistics
	)
	post /homework/oral/statistics/:homeworkId (GetOralStatisticsRequest) returns (OralStatisticsResponse)
	
	@doc(
		summary: 教师新增测评评语
	)
	@server(
		handler: AddOralTeacherRemark
	)
	post /homework/oral/remark (AddOralRemarkRequest) returns (AddOralRemarkResponse)
	
	@doc(
		summary: 查看作业详情不需权限
	)
	@server(
		handler: HomeworkDetail2Handler
	)
	post /homework/publish/homework/detail (DetailHomeworkWithoutAuthRequest) returns (DetailHomeworkResponse)
	
	@doc(
		summary: 新增，更新，删除 补充作业
	)
	@server(
		handler: UpsetExtraHomework
	)
	post /homework/extra-homework/upset (UpsetExtraHomeworkRequest) returns (UpsetExtraHomeworkResponse)
	
	@doc(
		summary: 补充作业列表
	)
	@server(
		handler: GetExtraHomeworkList
	)
	get /homework/extra-homework/list/:homeworkId (GetExtraHomeworkListRequest) returns (GetExtraHomeworkListResponse)
	
	@doc(
		summary: 打分
	)
	@server(
		handler: MarkHomeworkResult
	)
	post /homework/result/mark (MarkHomeworkResultRequest) returns (AddResultMarkResponse)
	
	@doc(
		summary: 评价
	)
	@server(
		handler: AppraisalHomeworkResult
	)
	post /homework/result/appraisal (AppraisalHomeworkResultRequest) returns (AppraisalHomeworkResultResponse)
	
	@doc(
		summary: 成果统计
	)
	@server(
		handler: HomeworkResultStat
	)
	get /homework/result/stat/:homeworkId (HomeworkResultStatRequest) returns (HomeworkResultStatResponse)
	
	@doc(
		summary: 作业消息列表
	)
	@server(
		handler: MessageListHandler
	)
	post /homework/message/list (MessageListRequest) returns (MessageListResponse)
	
	@doc(
		summary: 批量发送订正提醒
	)
	@server(
		handler: HomeworkRevisionPublish
	)
	post /homework/revision/notify/:homeworkId (HomeworkReviseNotifyRequest) returns (HomeworkReviseNotifyResponse)
	
	@doc(
		summary: 补充作业提醒已阅
	)
	@server(
		handler: ExtraHomeworkRead
	)
	post /homework/extra-homework/read/:homeworkId (ExtraHomeworkReadRequest) returns (ExtraHomeworkReadResponse)
	
	@doc(
		summary: 作业朗读模板列表
	)
	@server(
		handler: TemplateList
	)
	post /homework/template/list (TemplateRequest) returns (TemplateResponse)
	
	@doc(
		summary: 班级测评列表
	)
	@server(
		handler: ResultAiSpeechList
	)
	post /homework/result/ai-speech/list (ResultAiSpeechListRequest) returns (ResultAiSpeechListResponse)
	
	@doc(
		summary: 班级测评列表 分享h5
	)
	@server(
		handler: ResultAiSpeechListShare
	)
	post /homework/share/ai-speech/list (ResultAiSpeechListShareRequest) returns (ResultAiSpeechListShareResponse)
	
	@doc(
		summary: 口语测评结果保存
	)
	@server(
		handler: AiSpeechResultSave
	)
	post /homework/aispeech/result-save (AiSpeechResultRequest) returns (AiSpeechResultResponse)
	
	@doc(
		summary: ai测评结果 点赞 点踩
	)
	@server(
		handler: ResultAiSpeechLike
	)
	post /homework/result/ai-speech/like (ResultAiSpeechLikeRequest) returns (ResultAiSpeechLikeResponse)
	
	@doc(
		summary: 口语测评首页列表
	)
	@server(
		handler: AiSpeechMessageList
	)
	post /homework/aispeech/message/list (AiSpeechMessageListRequest) returns (AiSpeechMessageListResponse)
	
	@doc(
		summary: 口语测评批量点赞
	)
	@server(
		handler: AiSpeechBatchLike
	)
	post /homework/result/ai-speech/batch-like (AispeechBatchLikeRequest) returns (AispeechBatchLikeResponse)
	
	@doc(
		summary: 口语测评统计结果
	)
	@server(
		handler: AispeechChartData
	)
	post /homework/result/aispeech/chart-data (AispeechChartDataRequest) returns (AispeechChartDataResponse)
	
	@doc(
		summary: 口语测评统计结果
	)
	@server(
		handler: AiSpeechResultInfo
	)
	post /homework/aispeech/result/info (AispeechResultInfoRequest) returns (AispeechResultInfoResponse)
	
	@doc(
		summary: 提交/重新提交口语作业
	)
	@server(
		handler: AiSpeechSave
	)
	post /homework/aispeech/save (AispeechSaveRequest) returns (AispeechSaveResponse)
	
	@doc(
		summary: 选用晓黑板模板（小程序）
	)
	@server(
		handler: ChoiceXHBTemplate
	)
	get /homework/xhbtemplate/:templateId (ChoicXhbTemplateRequest) returns (ChoicXhbTemplateResponse)
	
	@doc(
		summary: 批量布置口语作业
	)
	@server(
		handler: AispeechPublishTemplate
	)
	post /homework/aispeech/publish (PublishAispeechBatchRequest) returns (PublishAispeechBatchResponse)
	
	@doc(
		summary: 学生获取批量口语作业卡片详情
	)
	@server(
		handler: AiSpeechBatchStudentDetail
	)
	get /homework/aispeech/student/detail/:homeworkId (QueryAiSpeechBatchRequest) returns (QueryStudentAiSpeechBatchResponse)
	
	@doc(
		summary: 老师获取批量口语作业卡片详情
	)
	@server(
		handler: AiSpeechBatchTeacherDetail
	)
	get /homework/aispeech/teacher/detail/:homeworkId (QueryAiSpeechBatchRequest) returns (QueryTeacherAiSpeechBatchResponse)
}