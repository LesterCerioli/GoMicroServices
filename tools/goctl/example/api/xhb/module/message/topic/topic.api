type Contentable {
	Title       string                 `json:"title,omitempty"`
	Content     string                 `json:"content,omitempty"`
	Images      []*Image               `json:"images,omitempty"`
	Audio       *Audio                 `json:"audio,omitempty"`
	Video       *Video                 `json:"video,omitempty"`
	Attachments []*Attachment          `json:"attachements,omitempty"`
	Extras      map[string]interface{} `json:"extras,omitempty"`
}

type Receiver {
	ClassroomId string   `json:"classroomId,optional"`
	Type        string   `json:"type"` // 消息类型  整班 老师 学生 定向选择
	ReceiverIds []string `json:"receiverIds,optional"`
	Additions   []string `json:"additions,optional"`
}

type ImageRequest {
	Original  string `json:"original,optional"`
	Preview   string `json:"preview,optional"`
	Thumbnail string `json:"thumbnail,optional"`
	Size      int    `json:"size,optional"`
	Height    int    `json:"height,optional"`
	Width     int    `json:"width,optional"`
}

type AudioRequest {
	Id            string `json:"id,optional"`
	Duration      int    `json:"duration,optional"`
	FileExtension string `json:"fileExtension,optional"`
	Size          int    `json:"size,optional"`
	Name          string `json:"name,optional"`
}

type VideoRequest {
	Title        string `json:"title,optional"`
	Desc         string `json:"desc,optional"`
	CoverUrl     string `json:"coverUrl,optional"`
	PlayUrl      string `json:"playUrl"`
	PlayTime     int    `json:"playTime,optional"`
	MagicContext string `json:"magicContext,optional"`
	Type         string `json:"type,optional"`
	Height       int    `json:"height,optional"`
	Width        int    `json:"width,optional"`
}

type AttachmentRequest {
	Id       string        `json:"id,optional"`       // 网络文件id
	Name     string        `json:"name,optional"`     // 显示名称
	MimeType string        `json:"mimeType,optional"` // 附件mimeType
	Attrs    *AttrsRequest `json:"attrs,optional"`    // 其他属性
}

type AttrsRequest {
	Size string `json:"size,optional"`
}

type Image {
	Original  string `json:"original,omitempty"`
	Preview   string `json:"preview,omitempty"`
	Thumbnail string `json:"thumbnail,omitempty"`
	Size      int    `json:"size,omitempty"`
	Height    int    `json:"height,omitempty"`
	Width     int    `json:"width,omitempty"`
}

type Audio {
	Id            string `json:"id,omitempty"`
	Duration      int    `json:"duration,omitempty"`
	FileExtension string `json:"fileExtension,omitempty"`
	Size          int    `json:"size,omitempty"`
	Name          string `json:"name,omitempty"`
}

type Attachment {
	Id       string `json:"id"`
	Name     string `json:"name,omitempty"`
	MimeType string `json:"mimeType,omitempty"`
	Attrs    *Attrs `json:"attrs,omitempty"`
	Size     string `json:"size,omitempty"` // 5.0.0 add
}

type Video {
	PlayUrl      string `json:"playUrl,omitempty"`
	Title        string `json:"title,omitempty"`
	Desc         string `json:"desc,omitempty"`
	CoverUrl     string `json:"coverUrl,omitempty"`
	PlayTime     int    `json:"playTime,omitempty"`
	MagicContext string `json:"magicContext,omitempty"`
	Type         string `json:"type,omitempty"`
	Height       int    `json:"height,omitempty"`
	Width        int    `json:"width,omitempty"`
}

type SettingShowTeacherRequest {
	ShowWithTeacher bool   `json:"showWithTeacher"`
	TopicId         string `json:"topicId"`
}

type SettingShowTeacherResponse {
}

type TopicViewRequest {
	Token   string `form:"token"`
	TopicId string `path:"topicId"`
}

type TopicManager {
	Id          string `json:"id,omitempty"`
	DisplayName string `json:"displayName,omitempty"`
	Avatar      string `json:"avatar,omitempty"`
}

type TopicView {
	//讨论标题
	Title               string                 `json:"title,omitempty"`
	Content             string                 `json:"content,omitempty"`
	Images              []*Image               `json:"images,omitempty"`
	Audio               *Audio                 `json:"audio,omitempty"`
	Video               *Video                 `json:"video,omitempty"`
	Attachments         []*Attachment          `json:"attachements,omitempty"`
	Extras              map[string]interface{} `json:"extras,omitempty"`
	Id                  string                 `json:"id,omitempty"`
	Open                bool                   `json:"open,omitempty"`
	ExpireTime          int64                  `json:"expireTime,omitempty"`
	Manager             *TopicManager          `json:"manager,omitempty"`
	ClassroomId         string                 `json:"classroomId,omitempty"`
	Unread              int                    `json:"unread,omitempty"`
	NoticeMessageUnread int                    `json:"notice_message_unread,omitempty"`
	Available           bool                   `json:"available,omitempty"`
	DoNotDisturb        bool                   `json:"doNotDisturb,omitempty"`
	Role                string                 `json:"role,omitempty"`
	IsShowTeacher       bool                   `json:"isShowTeacher"`
}

type SenderView {
	Id          string `json:"id"`
	DisplayName string `json:"displayName,omitempty"`
	Avatar      string `json:"avatar,omitempty"`
	Mobile      string `json:"mobile,omitempty"`
}

type ClassroomView {
	Id        string `json:"id,omitempty"`
	Name      string `json:"name,omitempty"`
	BadgeId   string `json:"badgeId,omitempty"`
	BadgeType string `json:"badgeType,omitempty"`
	BgImage   string `json:"bgImage,omitempty"`
}

type SurveyReceipt {
	JoinUsers  []string `json:"joinUsers"`
	JoinNumber int      `json:"joinNumber"`
}

type PunchCardReceipt {
	TotalFamilyCount   int64    `json:"totalFamilyCount"`             // 需打卡总家庭数 （分母）
	PunchedFamilyCount int64    `json:"punchedFamilyCount"`           // 打卡总家庭数 （分子）
	TotalDays          int64    `json:"totalDays"`                    // 总周期天数
	PassDays           int64    `json:"passDays"`                     // 已进行天数
	TodayJoinUsers     []string `json:"todayJoinUsers,omitempty"`     // 今天打卡的人，最新的5个人  5.0.0 add
	TodayJoinCount     int      `json:"todayJoinCount,omitempty"`     // 今日参加打卡的总人数  5.0.0 add
	TotalNeedJoinCount int      `json:"totalNeedJoinCount,omitempty"` // 今日打卡总人数  5.0.0 add
	Status             string   `json:"status,omitempty"`             // 打卡状态 "NoNeedPunchCard" 无需打卡, "PunchCarded" 已打卡,"UnPunchCard" 未打卡  5.0.0 add
	TotalNatureDay     int64    `json:"totalNatureDay,omitempty"`     // 打卡自然日总天数
	PassNatureDay      int64    `json:"passNatureDay"`                // 打卡已过去的日然日
	FirstTaskPunchTime int64    `json:"firstTaskPunchTime,omitempty"` // 第一个task的打卡时间
}

type Receipt {
	Total         int               `json:"total"`
	Receipted     int               `json:"receipted"`
	Feedbacked    int               `json:"feedbacked,omitempty"`
	Attitude      string            `json:"attitude,omitempty"`
	Received      bool              `json:"received,omitempty"`
	IsObserver    bool              `json:"isObserver,omitempty"`
	PunchCardItem *PunchCardReceipt `json:"punchCardItem,omitempty"` // 打卡反馈情况
	SurveyItem    *SurveyReceipt    `json:"surveyItem,omitempty"`
}

type TopicRequestV2 {
	Open        bool                   `json:"open,optional"`
	ExpireTime  int64                  `json:"expireTime,optional"`
	Content     string                 `json:"content,optional"`
	Title       string                 `json:"title,optional"`
	Images      []*ImageRequest        `json:"images,optional"`
	Video       *VideoRequest          `json:"video,optional"`
	Audio       *AudioRequest          `json:"audio,optional"`
	Attachments []*AttachmentRequest   `json:"attachements,optional"`
	Extras      map[string]interface{} `json:"extras,optional"`
	Receivers   []*Receiver            `json:"receivers"`
	From        string                 `json:"from,optional"`
	FileUpload  bool                   `json:"fileUpload,optional"` // 是否上传至班级文件
	TemplateId  string                 `json:"templateId,optional"` // 使用模板发送的讨论
}

type PublishTopicRequest {
	Token        string          `path:"token"`
	Topic        *TopicRequestV2 `json:"topic"`
	DeliveryTime int64           `json:"deliveryTime,optional"`
}

type PublishTopicMessageViewV2 {
	Topic      *TopicView             `json:"topic,omitempty"`
	Id         string                 `json:"id,omitempty"`
	SenderId   string                 `json:"senderId,omitempty"`
	Sender     SenderView             `json:"sender,omitempty"`
	CreateTime int64                  `json:"createTime,omitempty"`
	Timestamp  int64                  `json:"timestamp,omitempty"`
	Category   string                 `json:"category,omitempty"`
	Classroom  *ClassroomView         `json:"classroom,omitempty"`
	Receipt    *Receipt               `json:"receipt,omitempty"`
	Extras     map[string]interface{} `json:"extras,omitempty,optional"`
}

type PublishTopicResponse {
	Messages []*PublishTopicMessageViewV2 `json:"messages,omitempty"`
}

type FetchTopicMessagesRequest {
	Token         string `path:"token"`
	TopicId       string `path:"topicId"`
	Timestamp     int64  `form:"timestamp,optional"`
	Size          int    `form:"size,default=10"`
	FilterTeacher bool   `form:"filterTeacher,optional"`
}

type CommentView {
	Id            string      `json:"id,omitempty"`
	Author        *SenderView `json:"author,omitempty"`
	TargetUser    *SenderView `json:"target,omitempty"`
	MessageId     string      `json:"messageId,omitempty"`
	Content       string      `json:"content,omitempty"`
	CreateTime    int64       `json:"createTime,omitempty"`
	TargetComment string      `json:"targetComment,omitempty"`
	Audio         *Audio      `json:"audio,omitempty"`
	Images        []*Image    `json:"images,omitempty"`
}

type CommentsView {
	Total int            `json:"total,omitempty"`
	Items []*CommentView `json:"items,omitempty"`
}

type LikeView {
	Count int  `json:"count,omitempty"`
	Ilike bool `json:"ilike,omitempty"`
}

type TopicMessageView {
	Contentable
	Id          string        `json:"id,omitempty"`
	TopicId     string        `json:"topicId,omitempty"`
	CreateTime  int64         `json:"createTime,omitempty"`
	Sender      *SenderView   `json:"sender,omitempty"`
	Comments    *CommentsView `json:"comments,omitempty"`
	Like        *LikeView     `json:"likes,omitempty"`
	MessageType string        `json:"messageType,omitempty"`
	ClassroomId string        `json:"classroomId,omitempty"`

	IsFamily       bool              `json:"isFamily"`                 // 结果详情与当前用户之前的关系  true - 家庭成员关系   false - 非家庭成员关系
	IsAppraisal    bool              `json:"isAppraisal"`              // 是否已评价
	AppraisalTotal int64             `json:"appraisalTotal,omitempty"` // 已评价的指标数
	AppraisalScore int64             `json:"appraisalScore,omitempty"` // 已评价的指标分数
	AppraisalList  []*AppraisalViews `json:"appraisalList,omitempty"`  // 评价列表
}

type AppraisalViews {
	TeacherId  string           `json:"teacherId,omitempty"`
	Appraisals []*AppraisalView `json:"appraisals,omitempty"` // 评价详情
}

type AppraisalView {
	RecordId        int64  `json:"recordId,omitempty"`    // 评价记录id,删除评价的时候使用
	Type            int32  `json:"type,omitempty"`        // 评价类型
	IndicatorId     int64  `json:"indicatorId,omitempty"` // 教师评价指标
	GradeName       string `json:"gradeName,omitempty"`   // 等第名称
	Score           int64  `json:"score,omitempty"`       // 教师评价分数
	ColorGrade      int32  `json:"colorGrade,omitempty"`  // 颜色等级，1-加分最多，2-中等，3-加分最少，4-待改进
	IndicatorName   string `json:"indicatorName,omitempty"`
	IndicatorSuffix string `json:"indicatorSuffix,omitempty"`
	MessageId       string `json:"messageId,omitempty"`
	ResultId        string `json:"resultId,omitempty"`
	MessageType     string `json:"messageType,omitempty"`
	Icon            string `json:"icon,omitempty"`
}

type FetchTopicMessagesResponse {
	HasMore             bool                `json:"hasMore"`
	LastTimestamp       int64               `json:"lastTimestamp"`
	Messages            []*TopicMessageView `json:"messages,omitempty"`
	NoticeMessageUnread int                 `json:"noticeMessageUnread,omitempty"`
	Remind              int                 `json:"remind,omitempty"`
	UnreadCount         int64               `json:"unreadCount,omitempty"`
}

type RevokeMessageRequest {
	Token      string   `path:"token"`
	MessageIds []string `json:"messageIds"`
	TopicId    string   `json:"topicId"`
}

type RevokeMessageResponse {
	Successful bool `json:"successful"`
}

type MessageLikeRequest {
	Token     string `path:"token"`
	MessageId string `path:"messageId"`
	TopicId   string `json:"topicId,optional"`
}

type MessageLikeResponse {
	Successful bool `json:"successful"`
}

type AddMessageCommentRequest {
	Token     string          `path:"token"`
	MessageId string          `json:"messageId"`
	TopicId   string          `json:"topicId,optional"`
	Content   string          `json:"content,optional"`
	Target    string          `json:"target,optional"`
	CommentId string          `json:"commentId,optional"`
	Images    []*ImageRequest `json:"images,omitempty,optional"`
	Audio     *AudioRequest   `json:"audio,omitempty,optional"`
}

type AddMessageAppraisalRequest {
	TopicId   string       `json:"topicId"`
	MessageId string       `json:"messageId"`
	Type      string       `json:"type"` // Appraisal 评价, Delete 删除
	Appraisal []*Appraisal `json:"appraisal"`
}

type Appraisal {
	RecordId    int64  `json:"recordId,optional"`  // 评价记录id，删除评价的时候用，评价的时候不传
	Type        int32  `json:"type"`               // 评价类型
	IndicatorId int64  `json:"indicatorId"`        // 教师评价指标
	GradeName   string `json:"gradeName,optional"` // 等第
	Score       int64  `json:"score,optional"`     // 教师评价分数
}

type AddTopicMessageRequest {
	Token       string                 `path:"token"`
	MessageId   string                 `json:"messageId"`
	TopicId     string                 `json:"topicId"`
	Title       string                 `json:"title,omitempty,optional"`
	Content     string                 `json:"content,omitempty,optional"`
	Images      []*ImageRequest        `json:"images,omitempty,optional"`
	Audio       *AudioRequest          `json:"audio,omitempty,optional"`
	Video       *VideoRequest          `json:"video,omitempty,optional"`
	Attachments []*AttachmentRequest   `json:"attachements,omitempty,optional"`
	Extras      map[string]interface{} `json:"extras,omitempty,optional"`
}

type AddTopicMessageResponse {
	MessageView *TopicMessageView `json:"messageView,optional"`
}

type RevokeMessageCommentV2Request {
	Token     string `path:"token"`
	CommentId string `path:"commentId"`
	MessageId string `json:"messageId"`
	TopicId   string `json:"topicId,optional"`
}

type RevokeMessageCommentV2Response {
	CommentIds []string `json:"commentIds,omitempty"`
}

type UpdateTopicSettingsRequest {
	Token        string `path:"token"`
	MessageId    string `json:"messageId,optional"`
	TopicId      string `json:"topicId"`
	Open         bool   `json:"open,optional"`
	Available    bool   `json:"available,optional"`
	ExpireTime   int64  `json:"expireTime,optional"`
	DoNotDisturb bool   `json:"doNotDisturb,optional"`
}

type UpdateTopicSettingsResponse {
	Successful bool `json:"successful"`
}

type UnlikeMessageRequest {
	Token     string `path:"token"`
	MessageId string `path:"messageId"`
	TopicId   string `json:"topicId"`
}

type RemoveMessageRequest {
	Token     string `path:"token"`
	TopicId   string `json:"topicId,optional"`
	MessageId string `json:"messageId"`
	CommentId string `json:"commentId,optional"`
	Reason    string `json:"reason,optional"`
}

type BoolResponse {
	Successful bool `json:"successful"` // 是否成功应答
}

type UnreadMessageRequest {
	Token   string `path:"token"`
	TopicId string `path:"topicId"`
}

type MessageView {
	SenderId       string `json:"senderId,omitempty"`
	ReceiverId     string `json:"receiverId,omitempty"`
	ClassroomId    string `json:"classroomId,omitempty"`
	Type           string `json:"type,omitempty"`           // comment评论 | praise点赞 | unpraise取消点赞 | uncomment撤回评论
	CommentContent string `json:"commentContent,omitempty"` //评论内容
	MessageId      string `json:"messageId,omitempty"`
	Content        string `json:"content,omitempty"` //显示的内容
	Timestamp      int64  `json:"timestamp,omitempty"`
}

type UnreadMessageResponse {
	LastTimestamp int64          `json:"lastTimestamp,omitempty"`
	List          []*MessageView `json:"list,omitempty"`
}

type ReadMessageRequest {
	Token     string `path:"token"`
	TopicId   string `path:"topicId"`
	Timestamp int64  `form:"timestamp,optional"`
	Size      int    `form:"size,optional"`
}

type PagingView {
	Id            string `json:"id,omitempty"`  // 是否还有更多消息
	HasMore       bool   `json:"hasMore"`       // 是否还有更多消息
	TotalSize     int    `json:"totalSize"`     // 总记录数
	LastTimestamp int64  `json:"lastTimestamp"` // 本次获取的最后一条timestamp
}

type ReadMessageResponse {
	PagingView
	List []*MessageView `json:"list,omitempty"`
}

type EmptyMessagesRequest {
	Token   string `path:"token"`
	TopicId string `path:"topicId"`
}

type RemoveMessageCommentRequest {
	Token     string `path:"token"`
	MessageId string `json:"messageId"`
	TopicId   string `json:"topicId,optional"`
	CommentId string `json:"commentId"`
	Reason    string `json:"reason,optional"`
}

type GetMessageByIdRequest {
	TopicId   string `path:"topicId"`
	MessageId string `path:"messageId"`
}

type GetMessageByIdResponse {
	Message *TopicMessageView `json:"message,omitempty"`
}

type ChoiceXHBTemplateRequest {
	TemplateId string `path:"templateId"`
}

type ChoiceXHBTemplateResponse {
	Id          string  `json:"id,omitempty"`
	Topic       TopicSt `json:"topic,omitempty"`
	SenderId    string  `json:"senderId,omitempty"`
	Category    string  `json:"category,omitempty"`
	CreateTime  int64   `json:"createTime,omitempty"`
	Timestamp   string  `json:"timestamp,omitempty"`
	ClassroomId string  `json:"classroomId,omitempty"`
	Identifier  string  `json:"identifier,omitempty"`
	ExpireTime  int64   `json:"expireTime,omitempty"`
	CallbackApi string  `json:"callbackApi,omitempty"`
}

type TopicSt {
	Id          string                 `json:"id,omitempty"`
	Title       string                 `json:"title,omitempty"`
	Content     string                 `json:"content,omitempty"`
	Images      []*ImageSt             `json:"images,omitempty"`
	Video       *VideoSt               `json:"video,omitempty"`
	Extras      map[string]interface{} `json:"extras,omitempty"`
	ExpireTime  int64                  `json:"expireTime,omitempty"`
	Attachments []*Attachment          `json:"attachements,omitempty"`
}

type ImageSt {
	Original  string `json:"original,omitempty"`
	Thumbnail string `json:"thumbnail,omitempty"`
	Height    int64  `json:"height,omitempty"`
	Width     int64  `json:"width,omitempty"`
}

type VideoSt {
	PlayUrl      string `json:"playUrl,omitempty"`
	Title        string `json:"title,omitempty"`
	Desc         string `json:"desc,omitempty"`
	CoverUrl     string `json:"coverUrl,omitempty"`
	PlayTime     int    `json:"playTime,omitempty"`
	MagicContext string `json:"magicContext,omitempty"`
	Type         string `json:"type,omitempty"`
	Height       int    `json:"height,omitempty"`
	Width        int    `json:"width,omitempty"`
}

type Attrs {
	// 大小
	Size string `bson:"size,omitempty" json:"size,omitempty"`
}

service topic-api {
	@doc(
		summary: 晓讨论哪些人设置只看老师
	)
	@server(
		handler: settingShowTeacherHandler
	)
	post /topic/setting/show/teacher(SettingShowTeacherRequest) returns(SettingShowTeacherResponse)
	
	@doc(
		summary: 获取讨论详情
	)
	@server(
		handler: topicViewHandler
	)
	get /topic/view/:topicId(TopicViewRequest) returns(TopicView)
	
	@doc(
		summary: 发表晓讨论
	)
	@server(
		handler: publishTopicHandler
	)
	post /topic/message/publish/pack/v2/:token(PublishTopicRequest) returns(PublishTopicResponse)
	
	@doc(
		summary: 获取讨论历史消息
	)
	@server(
		handler: FetchTopicMessagesHandler
	)
	get /topic/:token/:topicId(FetchTopicMessagesRequest) returns(FetchTopicMessagesResponse)
	
	@doc(
		summary: 撤回发言内容
	)
	@server(
		handler: RevokeMessageHandler
	)
	post /message/pack/retract/:token(RevokeMessageRequest) returns(RevokeMessageResponse)
	
	@doc(
		summary: 对消息点赞
	)
	@server(
		handler: MessageLikeHandler
	)
	put /topic/like/:token/:messageId(MessageLikeRequest) returns(MessageLikeResponse)
	
	@doc(
		summary: 添加评论
	)
	@server(
		handler: AddMessageCommentHandler
	)
	post /topic/comment/:token(AddMessageCommentRequest) returns(TopicMessageView)
	
	@doc(
		summary: 发布讨论内容
	)
	@server(
		handler: AddTopicMessageHandler
	)
	post /topic/publish/pack/:token(AddTopicMessageRequest) returns(AddTopicMessageResponse)
	
	@doc(
		summary: 撤回评论
	)
	@server(
		handler: RevokeMessageCommentV2Handler
	)
	post /topic/comment/remove/v2/:token/:commentId(RevokeMessageCommentV2Request) returns(RevokeMessageCommentV2Response)
	
	@doc(
		summary: 晓讨论设置
	)
	@server(
		handler: UpdateTopicSettingsHandler
	)
	post /v2/topic/setting/:token(UpdateTopicSettingsRequest) returns(UpdateTopicSettingsResponse)
	
	@doc(
		summary: 取消点赞
	)
	@server(
		handler: UnlikeMessageHandler
	)
	put /topic/unlike/:token/:messageId(UnlikeMessageRequest) returns(BoolResponse)
	
	@doc(
		summary: 删除内容
	)
	@server(
		handler: RemoveMessageHandler
	)
	post /remove/topic/message/:token(RemoveMessageRequest) returns(BoolResponse)
	
	@doc(
		summary: 查看讨论新消息
	)
	@server(
		handler: ViewsUnreadMessageHandler
	)
	get /topic/views/unread/message/:token/:topicId(UnreadMessageRequest) returns(UnreadMessageResponse)
	
	@doc(
		summary: 查看已查看消息
	)
	@server(
		handler: ViewsReadMessageHandler
	)
	get /topic/views/read/message/:token/:topicId(ReadMessageRequest) returns(ReadMessageResponse)
	
	@doc(
		summary: 清空角标消息列表
	)
	@server(
		handler: EmptyMessagesHandler
	)
	delete /topic/empty/messages/:token/:topicId(EmptyMessagesRequest) returns(BoolResponse)
	
	@doc(
		summary: 删除评论，删除别人评论
	)
	@server(
		handler: RemoveMessageCommentHandler
	)
	post /remove/topic/comment/:token(RemoveMessageCommentRequest) returns(BoolResponse)
	
	@doc(
		summary: 评价
	)
	@server(
		handler: NewAddMessageAppraisalHandler
	)
	post /topic/appraisal(AddMessageAppraisalRequest) returns(BoolResponse)
	
	@doc(
		summary: 根据晓讨论发言id获取晓讨论发言
	)
	@server(
		handler: GetMessageByIdHandler
	)
	get /topic/detail/:topicId/:messageId(GetMessageByIdRequest) returns(GetMessageByIdResponse)
	
	@doc(
		summary: 选用xhb模板
	)
	@server(
		handler: ChoiceXHBTemplate
	)
	get /topic/xhbtemplate/:templateId (ChoiceXHBTemplateRequest) returns(ChoiceXHBTemplateResponse)
}