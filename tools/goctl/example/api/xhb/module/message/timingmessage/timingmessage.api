type FetchAllTimingMessageRequest {
	Token     string `path:"token"`
	Timestamp int64  `json:"timestamp,optional"`
	Limit     int    `json:"limit,optional"`
}

type Image {
	Original  string `json:"original,omitempty"`
	Preview   string `json:"preview,omitempty"`
	Thumbnail string `json:"thumbnail,omitempty"`
	Size      int    `json:"size,omitempty"`
	Height    int    `json:"height,omitempty"`
	Width     int    `json:"width,omitempty"`
}

type Audio {
	Id            string `json:"id,omitempty"`
	Duration      int    `json:"duration,omitempty"`
	FileExtension string `json:"fileExtension,omitempty"`
	Size          int    `json:"size,omitempty"`
	Name          string `json:"name,omitempty"`
}

type Attachment {
	Id       string `json:"id"`
	Name     string `json:"name,omitempty"`
	MimeType string `json:"mimeType,omitempty"`
	Attrs    *Attrs `json:"attrs,omitempty"`
	Size     string `json:"size,omitempty"` // 5.0.0 add
}

type Attrs {
	Size string `json:"size,omitempty"`
}

type Video {
	PlayUrl      string `json:"playUrl,omitempty"`
	Title        string `json:"title,omitempty"`
	Desc         string `json:"desc,omitempty"`
	CoverUrl     string `json:"coverUrl,omitempty"`
	PlayTime     int    `json:"playTime,omitempty"`
	MagicContext string `json:"magicContext,omitempty"`
	Type         string `json:"type,omitempty"`
	Height       int    `json:"height,omitempty"`
	Width        int    `json:"width,omitempty"`
}

type SimpleSenderView {
	Id          string `json:"id"`
	DisplayName string `json:"displayName,omitempty"` // 显示名
	Avatar      string `json:"avatar,omitempty"`      // 头像图片id
}

type SchoolSenderView {
	Id          string `json:"id,omitempty"`
	DisplayName string `json:"displayName,omitempty"` // 显示名
	Avatar      string `json:"avatar,omitempty"`      // 头像图片id
}

type ClassroomView {
	Id        string `json:"id,omitempty"`
	Name      string `json:"name,omitempty"`
	BadgeId   string `json:"badgeId,omitempty"`
	BadgeType string `json:"badgeType,omitempty"`
	BgImage   string `json:"bgImage,omitempty"`
}

type Receiver {
	ClassroomId string   `json:"classroomId,optional"`
	Type        string   `json:"type"` // 消息类型  整班 老师 学生 定向选择
	ReceiverIds []string `json:"receiverIds,optional"`
	Additions   []string `json:"additions,optional"`
}

type UserView {
	Id          string `json:"id"`
	Realname    string `json:"realname,omitempty"` // 真实姓名
	Avatar      string `json:"avatar,omitempty"`   // 头像图片id
	DisplayName string `json:"displayName"`        // 显示名
}

type NoticeView {
	ContentableView
}

type TopicView {
	ContentableView
	Id                  string            `json:"id,omitempty"`
	Open                bool              `json:"open,omitempty"`                // 是否开放式讨论
	ExpireTime          int64             `json:"expireTime,omitempty"`          // 晓讨论结束日期, 不填写代表永不过期
	Manager             *SimpleSenderView `json:"manager,omitempty"`             // 管理员
	Members             []*UserView       `json:"members,omitempty"`             // 成员
	Receivers           []string          `json:"receivers,omitempty"`           // 晓讨论接收人
	Classrooms          []string          `json:"classrooms,omitempty"`          // 班级
	Unread              int               `json:"unread,omitempty"`              // 未读消息数量
	NoticeMessageUnread int               `json:"noticeMessageUnread,omitempty"` // 未读晓讨论通知数量
	Available           bool              `json:"available"`                     // 是否处于可用状态,非可用状态的晓讨论,无法发言
	DoNotDisturb        bool              `json:"doNotDisturb"`
}

type ActivityView {
	TopicView
	Tag           string         `json:"tag,omitempty"`           // 标签
	Participate   bool           `json:"participate,omitempty"`   // 是否参加活动
	Expired       bool           `json:"expired,omitempty"`       // 是否过期
	ClassroomView *ClassroomView `json:"classroomView,omitempty"` // 所属班级
}

type Receipt {
	Total         int               `json:"total"`                // 消息接收总数量
	Receipted     int               `json:"receipted"`            // 已成功接收数量
	Feedbacked    int               `json:"feedbacked,omitempty"` // 已成功反馈数量
	Attitude      string            `json:"attitude,omitempty"`   // 我发送的反馈
	Received      bool              `json:"received,omitempty"`   // 我是否已经已收到此消息
	IsObserver    bool              `json:"isObserver,omitempty"`
	PunchCardItem *PunchCardReceipt `json:"punchCardItem,omitempty"` //打卡反馈情况
	SurveyItem    *SurveyReceipt    `json:"surveyItem,omitempty"`
}

type PunchCardReceipt {
	TotalFamilyCount   int64    `json:"totalFamilyCount"`             //需打卡总家庭数 （分母）
	PunchedFamilyCount int64    `json:"punchedFamilyCount"`           // 打卡总家庭数 （分子）
	TotalDays          int64    `json:"totalDays"`                    // 总周期天数
	PassDays           int64    `json:"passDays"`                     // 已进行天数
	TodayJoinUsers     []string `json:"todayJoinUsers,omitempty"`     //今天打卡的人，最新的5个人  5.0.0 add
	TodayJoinCount     int      `json:"todayJoinCount,omitempty"`     //今日参加打卡的总人数  5.0.0 add
	TotalNeedJoinCount int      `json:"totalNeedJoinCount,omitempty"` //今日打卡总人数  5.0.0 add
	Status             string   `json:"status,omitempty"`             //打卡状态 "NoNeedPunchCard" 无需打卡, "PunchCarded" 已打卡,"UnPunchCard" 未打卡  5.0.0 add
	TotalNatureDay     int64    `json:"totalNatureDay,omitempty"`     //打卡自然日总天数
	PassNatureDay      int64    `json:"passNatureDay"`                //打卡已过去的日然日
	FirstTaskPunchTime int64    `json:"firstTaskPunchTime,omitempty"` //第一个task的打卡时间
}

type SurveyReceipt {
	JoinUsers  []string `json:"joinUsers"`
	JoinNumber int      `json:"joinNumber"`
}

type ScoreNoticeView {
	Id       string `json:"id,omitempty"`
	Title    string `json:"title,omitempty"`    // 考试名称
	Subjects string `json:"subjects,omitempty"` // 考试科目
	SubType  string `json:"subType,omitempty"`  // 消息子类型：成绩或者分析
	Url      string `json:"url,omitempty"`      // 成绩链接
}

type SurveyOption {
	Value  string              `json:"value,omitempty"`  // 值
	Image  *Image              `json:"image,omitempty"`  // 图片
	Ratio  int                 `json:"ratio,omitempty"`  // 选择比率(50%为50)
	Voters []*SimpleSenderView `json:"voters,omitempty"` // 投票人
}

type SurveyView {
	ContentableView
	Id             string                   `json:"id,omitempty"`             // 平台id
	Subject        string                   `json:"subject,omitempty"`        // 主题
	MultiChoose    bool                     `json:"multiChoose,omitempty"`    // 是否多选
	Anonymous      bool                     `json:"anonymous,omitempty"`      // 是否匿名
	Open           bool                     `json:"open,omitempty"`           // 是否公开,即家长是否可以查看结果
	MaxOptionalNum int                      `json:"maxOptionalNum,omitempty"` // 最多可选数量
	ExpireTime     int64                    `json:"expireTime,omitempty"`     // 晓调查结束日期
	Available      bool                     `json:"available,omitempty"`      // 是否处于可用状态
	SurveyOptions  map[string]*SurveyOption `json:"surveyOptions,omitempty"`  // 所有选项
	VotersNumber   int                      `json:"votersNumber,omitempty"`   // 投票人数
	Voted          []*SimpleSenderView      `json:"voted,omitempty"`          // 投票的人
	Unvoted        []*SimpleSenderView      `json:"unvoted,omitempty"`        // 未投票的人
}

type PunchCardReceiptResult {
	ResultNumber     int64 `json:"resultNumber,omitempty"`     //老师/家长打卡成果数
	TotalDays        int64 `json:"totalDays,omitempty"`        //家长：总天数
	JoinDays         int64 `json:"joinDays,omitempty"`         // 家长：参加天数
	JoinPersons      int64 `json:"joinPersons,omitempty"`      //老师：参与人数
	TotalFamilyCount int64 `json:"totalFamilyCount,omitempty"` //老师：所有家庭数
}

type PunchStemView {
	Stem      string   `json:"stem"`      // 题干
	BlankType string   `json:"blankType"` // 填空题类型 counter | timer
	Options   []string `json:"options"`   // 选择题选项
}

type PunchCardView {
	ContentableView
	Open           bool                    `json:"open,omitempty"`
	Tag            string                  `json:"tag,omitempty"`
	Endtime        int64                   `json:"endTime,omitempty"`
	RemindTime     string                  `json:"remindTime,omitempty"`
	LastDays       int                     `json:"lastDays,omitempty"`      // 打卡周期天数
	PunchcardWeek  []string                `json:"punchcardWeek,omitempty"` // 打卡频次
	PunchcardId    string                  `json:"id,omitempty"`
	Result         *PunchCardReceiptResult `json:"result,omitempty"` //5.0.0 add
	IsForwardEnd   bool                    `json:"isForwardEnd"`
	ForwardEndTime int64                   `json:"forwardEndTime"`
	PunchType      string                  `json:"punchType"`           // 打卡类型
	PunchStem      *PunchStemView          `json:"punchStem,omitempty"` // 题干相关
	ReplenishDays  int                     `json:"replenishDays"`       // 设置可补卡天数
}

type SurveyV2View {
	Id         string `json:"id,omitempty"`
	Title      string `json:"title,omitempty"`      // 调查名称
	SubTitle   string `json:"subTitle,omitempty"`   // 副标题
	Open       bool   `json:"open,omitempty"`       // 参与者是否可以查看结果
	ExpireTime int64  `json:"expireTime,omitempty"` // 晓调查结束日期
	Anonymous  bool   `json:"anonymous,omitempty"`  // 是否匿名
	IsVoted    bool   `json:"isVoted,omitempty"`    // 是否已投票
	Available  bool   `json:"available,omitempty"`  // 是否处于可用状态
	CreateTime int64  `json:"createTime,omitempty"` // 创建时间
	From       string `json:"from,omitempty"`       // 来自哪里
	VoteCount  int    `json:"voteCount,omitempty"`  // 投票人数
	ReplyCount int    `json:"replyCount,omitempty"` // 题目总数
	IsDaily    bool   `json:"isDaily,omitempty"`    // 是否是连续调查
}

type WeeklyView {
	Articles []*WeeklyArticle `json:"articles,omitempty"`
	Version  int              `json:"version,omitempty"`
	Title    string           `json:"title,omitempty"`
	Image    string           `json:"image,omitempty"`
	Url      string           `json:"url,omitempty"`
	History  string           `json:"history,omitempty"`
}
type WeeklyArticle {
	Url   string `json:"url,omitempty"`
	Title string `json:"title,omitempty"`
}
type PostView {
	Title   string `json:"title,omitempty"`
	Content string `json:"content,omitempty"`
	Image   string `json:"image,omitempty"`
	Url     string `json:"url,omitempty"`
}

type AppletsView {
	Type            string                 `json:"type,omitempty"`
	Icon            string                 `json:"icon,omitempty"`
	Title           string                 `json:"title,omitempty"`
	Content         string                 `json:"content,omitempty"`
	Url             string                 `json:"url,omitempty"`
	ShowInClassroom bool                   `json:"showInClassroom"`
	Extras          map[string]interface{} `json:"extras,omitempty"`
}

type ContentableView {
	Title       string                 `json:"title,omitempty"`        // 标题
	Content     string                 `json:"content,omitempty"`      // 内容
	Images      []*Image               `json:"images,omitempty"`       // 图片id列表, 需要先上传
	Audio       *Audio                 `json:"audio,omitempty"`        // 语音上传后的对象
	Video       *Video                 `json:"video,omitempty"`        // 上传后的视频
	Attachments []*Attachment          `json:"attachements,omitempty"` // 其他附件
	Extras      map[string]interface{} `json:"extras,omitempty"`
	From        string                 `json:"from,omitempty"` // 来自哪里
}

type QuestionnaireView {
	Title string `json:"title"`
	Url   string `json:"url"`
}

type LiveView {
	ContentableView
	ClassroomList []string   `json:"classroomList"`
	HasVideo      bool       `json:"hasVideo"`
	HasStat       bool       `json:"hasStat"`
	Subject       string     `json:"subject"`
	StartTime     int64      `json:"startTime"`
	EndTime       int64      `json:"endTime"`
	Status        int        `json:"status"` // 0:未开始 1:进行中 2:已结束
	WhiteBoard    WhiteBoard `json:"whiteBoard"`
}

type WhiteBoard {
	Token string `json:"token,omitempty"`
	UUID  string `json:"uuid,omitempty"`
}

type HomeworkView {
	ContentableView
	JoinedUser       string         `json:"joinUserId"`
	Status           string         `json:"status"`    //"Needless", 无需参加, "Joined" 已提交,"UnJoin" 未提交
	SubStatus        string         `json:"subStatus"` // "Review", 需订正, "Reviewed" 已订正,"Pass" 已通过
	EndTime          int64          `json:"endTime"`
	Open             bool           `json:"open"`                      // 成果是否互相可见
	NeedJoin         bool           `json:"needJoin"`                  // 是否需要家长参与上传作业
	NeedSignature    bool           `json:"needSignature"`             // 是否需要签名
	SuggestDuration  int64          `json:"suggestDuration,omitempty"` //建议时长
	CreateTime       int64          `json:"createTime"`
	UpdateTime       int64          `json:"updateTime"`
	HomeworkType     string         `json:"homeworkType"`
	TestPaper        *TestPaperInfo `json:"testPaper,optional"` // 第三方题库作业信息
	Subject          string         `json:"subject"`            //科目
	MarkType         string         `json:"resultMarkType"`     //Invalid, Score, Star
	UnreadCount      int64          `json:"unReadCount"`
	ExtraUnreadCount int64          `json:"extraHomeworkUnreadCount"`
	NeedTeacherJoin  bool           `json:"needTeacherJoin"` //老师是否可以提交作业
}

type TestPaperInfo {
	Id    string `json:"id,optional"`
	Title string `json:"title,optional"`
}

type MessageView {
	Id string `json:"id,omitempty"` // 消息id
	ContentableView
	Category          string             `json:"category,omitempty"`
	Identifier        string             `json:"identifier,omitempty"`    // 用户端的消息唯一id
	CreateTime        int64              `json:"createTime,omitempty"`    // 消息创建日期
	Sender            *SimpleSenderView  `json:"sender,omitempty"`        // 消息发送人id
	School            *SchoolSenderView  `json:"school,omitempty"`        // school 信息
	DeliveryTime      int64              `json:"deliveryTime,omitempty"`  // 期望发送的时间, 小于服务器当前时间的值会立即发送,否则由服务器安排并在指定时间发送
	Timestamp         int64              `json:"timestamp,omitempty"`     // 消息时间, 客户端以此排序
	ClassroomView     *ClassroomView     `json:"classroom,omitempty"`     // 目标班级
	NoticeView        *NoticeView        `json:"notice,omitempty"`        //通知
	TopicView         *TopicView         `json:"topic,omitempty"`         // 目标晓讨论
	ActivityView      *ActivityView      `json:"activity,omitempty"`      // 晓活动
	Receipt           *Receipt           `json:"receipt,omitempty"`       // 回执信息
	Observer          bool               `json:"observer,omitempty"`      // 是否以观察者角度看消息
	ReceiverId        string             `json:"receiverId,omitempty"`    // 消息发送人id
	SenderId          string             `json:"senderId,omitempty"`      // 消息接收人
	ClassroomId       string             `json:"classroomId,omitempty"`   // 目标班级id
	ScoreNoticeView   *ScoreNoticeView   `json:"scoreNotice,omitempty"`   // 晓成绩
	SurveyView        *SurveyView        `json:"survey,omitempty"`        // 小调查
	PunchCardView     *PunchCardView     `json:"punchcard,omitempty"`     // 打卡
	SurveyV2View      *SurveyV2View      `json:"surveyV2,omitempty"`      // 小调查（V2）
	WeeklyView        *WeeklyView        `json:"weekly,omitempty"`        // 5.0.0 add// 晓周刊
	PostView          *PostView          `json:"post,omitempty"`          // 5.0.0 add// 公告
	AppletsView       *AppletsView       `json:"applets,omitempty"`       // 5.0.0 add// 小程序
	QuestionnaireView *QuestionnaireView `json:"questionnaire,omitempty"` // 5.0.05 add// 问卷调查
	LiveView          *LiveView          `json:"live,omitempty"`          // 直播
	HomeworkView      *HomeworkView      `json:"homeworkView,omitempty"`  // 作业
	UnreadCount       int64              `json:"unreadCount,omitempty"`   //未读消息数量
	IsTop             bool               `json:"isTop"`                   // 是否为置顶消息
	IsParticipate     bool               `json:"isParticipate"`           // 是否参与
	CampusId          int64              `json:"campusId,omitempty"`      // 学校id, 通过此字段来判断是否是晓教云web发的消息
}

type FetchAllTimingMessageResponse {
	Messages      []*MessageView `json:"messages,omitempty"`
	Count         int            `json:"count"`
	HasMore       bool           `json:"hasMore"`
	LastTimestamp int64          `json:"lastTimestamp"`
}

type RemoveTimingMessageRequest {
	Token     string `path:"token"`
	MessageId string `path:"messageId"`
}

type CodeResponse {
	Code int `json:"code"`
}

@server(
	host: 0.0.0.0
	port: 8888
)
service timingmessage-api {
	@doc(
		summary: 获取所有定时消息
	)
	@server(
		handler: FetchAllTimingMessageHandler
	)
	post /message/timing/all/:token(FetchAllTimingMessageRequest) returns(FetchAllTimingMessageResponse)
	
	@doc(
		summary: 删除定时消息
	)
	@server(
		handler: RemoveTimingMessageHandler
	)
	delete /message/timing/remove/:token/:messageId(RemoveTimingMessageRequest) returns(CodeResponse)
}