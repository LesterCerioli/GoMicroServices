type SimpleSenderView {
	Id            string `json:"id"`
	DisplayName   string `json:"displayName,omitempty"`
	Avatar        string `json:"avatar,omitempty"`
	StudentNumber string `json:"studentNumber,omitempty"`
}

type PunchCardReceipt {
	TotalFamilyCount   int64    `json:"totalFamilyCount"`             // 需打卡总家庭数 （分母）
	PunchedFamilyCount int64    `json:"punchedFamilyCount"`           // 打卡总家庭数 （分子）
	TotalDays          int64    `json:"totalDays"`                    // 总周期天数
	PassDays           int64    `json:"passDays"`                     // 已进行天数
	TodayJoinUsers     []string `json:"todayJoinUsers,omitempty"`     // 今天打卡的人，最新的5个人  5.0.0 add
	TodayJoinCount     int      `json:"todayJoinCount,omitempty"`     // 今日参加打卡的总人数  5.0.0 add
	TotalNeedJoinCount int      `json:"totalNeedJoinCount,omitempty"` // 今日打卡总人数  5.0.0 add
	Status             string   `json:"status,omitempty"`             // 打卡状态 "NoNeedPunchCard" 无需打卡, "PunchCarded" 已打卡,"UnPunchCard" 未打卡  5.0.0 add
	TotalNatureDay     int64    `json:"totalNatureDay,omitempty"`     // 打卡自然日总天数
	PassNatureDay      int64    `json:"passNatureDay"`                // 打卡已过去的日然日
	FirstTaskPunchTime int64    `json:"firstTaskPunchTime,omitempty"` // 第一个task的打卡时间
}

type SurveyReceipt {
	JoinUsers  []string `json:"joinUsers"`
	JoinNumber int      `json:"joinNumber"`
}

type ImageRequest {
	Original  string `json:"original,optional"`
	Preview   string `json:"preview,optional"`
	Thumbnail string `json:"thumbnail,optional"`
	Size      int    `json:"size,optional"`
	Height    int    `json:"height,optional"`
	Width     int    `json:"width,optional"`
}

type AudioRequest {
	Id            string `json:"id"`
	Duration      int    `json:"duration,optional"`
	FileExtension string `json:"fileExtension,optional"`
	Size          int    `json:"size,optional"`
	Name          string `json:"name,optional"`
}

type AttachmentRequest {
	Id       string        `json:"id,optional"`
	Name     string        `json:"name,optional"`
	MimeType string        `json:"mimeType,optional"`
	Attrs    *AttrsRequest `json:"attrs,optional"`
}

type AttrsRequest {
	Size string `json:"size,optional"`
}

type VideoRequest {
	Title        string `json:"title,optional"`
	Desc         string `json:"desc,optional"`
	CoverUrl     string `json:"coverUrl,optional"`
	PlayUrl      string `json:"playUrl"`
	PlayTime     int    `json:"playTime,optional"`
	MagicContext string `json:"magicContext,optional"`
	Type         string `json:"type,optional"`
	Height       int    `json:"height,optional"`
	Width        int    `json:"width,optional"`
}

type Attrs {
	Size string `json:"size,omitempty"`
}

type Receiver {
	ClassroomId string   `json:"classroomId,optional"`
	Type        string   `json:"type"` // 消息类型  整班 老师 学生 定向选择
	ReceiverIds []string `json:"receiverIds,optional"`
	Additions   []string `json:"additions,optional"`
}

type Receipt {
	Total         int               `json:"total"`
	Receipted     int               `json:"receipted"`
	Feedbacked    int               `json:"feedbacked,omitempty"`
	Attitude      string            `json:"attitude,omitempty"`
	Received      bool              `json:"received,omitempty"`
	IsObserver    bool              `json:"isObserver,omitempty"`
	PunchCardItem *PunchCardReceipt `json:"punchCardItem,omitempty"` // 打卡反馈情况
	SurveyItem    *SurveyReceipt    `json:"surveyItem,omitempty"`
}

type SurveyOptionRequest {
	Value string        `json:"value,optional"`
	Image *ImageRequest `json:"image,optional"`
}

type SurveyQuestion {
	ContentableRequest
	Type           string                 `json:"type,optional"`           // 题目类型 : SINGLE单选题 | MULTIPLE多选 | BLANK填空题 | IMAGE图片题
	Options        []*SurveyOptionRequest `json:"options,optional"`        // 仅 SINGlE 和 MULTIPLE 设置
	MustAnswer     bool                   `json:"mustAnswer,optional"`     // 是否必答
	MaxOptionalNum int                    `json:"maxOptionalNum,optional"` // 最大可选数量，仅MULTIPLE时设置
}

type SurveyRequestBaseV2 {
	Title               string                 `json:"title,optional"`               // 调查名称
	SubTitle            string                 `json:"subTitle,optional"`            // 副标题
	QuestionList        []*SurveyQuestion      `json:"questionList,optional"`        // 问题列表
	FileUpload          bool                   `json:"fileUpload,optional"`          // 是否上传至班级文件
	Anonymous           bool                   `json:"anonymous,optional"`           // 是否匿名
	Open                bool                   `json:"open,optional"`                // 是否公开,即家长是否可以查看结果
	ExpireTime          int64                  `json:"expireTime,optional"`          // 调查结束时间
	Extras              map[string]interface{} `json:"extras,optional"`              // 额外属性
	IsDaily             bool                   `json:"isDaily,optional"`             // 是否是连续每天发送调查
	DailySurveyDuration int                    `json:"dailySurveyDuration,optional"` // 连续每天调查的有效时间
	From                string                 `json:"from,optional"`                // 来自哪里
	InvisibleForSender  bool                   `json:"invisibleForSender,optional"`  // 是否对发送者不可见
	TemplateId          string                 `json:"templateId,optional"`          // 使用模板发布
}

type SurveyViewsRequest {
	Token string `path:"token"`
}

type SurveyV2View {
	Id         string `json:"id,omitempty"`
	Title      string `json:"title,omitempty"` // 调查名称
	SubTitle   string `json:"subTitle,omitempty"`
	Open       bool   `json:"open,omitempty"`
	ExpireTime int64  `json:"expireTime,omitempty"`
	Anonymous  bool   `json:"anonymous,omitempty"`
	IsVoted    bool   `json:"isVoted,omitempty"`
	Available  bool   `json:"available,omitempty"`
	CreateTime int64  `json:"createTime,omitempty"`
	From       string `json:"from,omitempty"`
	VoteCount  int    `json:"voteCount,omitempty"`
	ReplyCount int    `json:"replyCount,omitempty"`
	IsDaily    bool   `json:"isDaily,omitempty"`
}

type SurveyViewsResponse {
	Surveys []*SurveyV2View `json:"surveys,omitempty"`
}

type SurveyViewRequest {
	Token    string `path:"token"`
	SurveyId string `path:"surveyId"`
}

type SurveyPublishRequest {
	Token        string               `path:"token"`
	Receivers    []*Receiver          `json:"receivers,optional"` // 接收对象
	Survey       *SurveyRequestBaseV2 `json:"survey,optional"`
	DeliveryTime int64                `json:"deliveryTime,optional"` // 期望到达时间，为0时为立即发送
	SchoolName   string               `json:"schoolName,optional"`
	SchoolAvatar string               `json:"schoolAvatar,optional"`
}

type PublishSurveyMessageView {
	Id          string                 `json:"id,omitempty"`         // 消息id
	SenderId    string                 `json:"senderId,omitempty"`   // 发送人
	CreateTime  int64                  `json:"createTime,omitempty"` // 消息创建时间
	Timestamp   int64                  `json:"timestamp,omitempty"`
	Category    string                 `json:"category"`              // 消息分类
	ClassroomId string                 `json:"classroomId,omitempty"` // 班级id
	Receipt     *Receipt               `json:"receipt,omitempty"`     // 小眼睛
	SurveyV2    *SurveyV2View          `json:"surveyV2,omitempty"`
	Extras      map[string]interface{} `json:"extras,optional"`
	From        string                 `json:"from,optional"`
}

type SurveyPublishResponse {
	Messages []*PublishSurveyMessageView `json:"messages,omitempty"`
}

type SurveyExpiredModifyRequest {
	Token    string `path:"token"`
	SurveyId string `path:"surveyId"`
	Expired  int64  `json:"expired"` // 调查结束时间
}

type SurveyExpiredModifyResponse {
	Successful bool `json:"successful"`
}

type SurveyWebBlankDetailRequest {
	Token   string `path:"token"`
	ReplyId string `path:"replyId"`
}

type WebBlankView {
	*SimpleSenderView
	Content    string `json:"content,omitempty"` // 填空内容
	CreateTime int64  `json:"createTime,omitempty"`
}

type SurveyWebBlankDetailResponse {
	Blanks []*WebBlankView `json:"blanks,omitempty"`
}

type SurveyWebExportRequest {
	Token    string `path:"token"`
	SurveyId string `path:"surveyId"`
}

type SurveyWebExportResponse {
	FileName string `json:"fileName"`
}

type SurveyBlankDetailRequest {
	Token   string `path:"token"`
	ReplyId string `path:"replyId"`
}

type SurveyBlankDetailResponse {
	Blanks []*BlankView `json:"blanks,omitempty"`
}

type BlankView {
	SenderId   string `json:"senderId,omitempty"` // 发送者id
	Content    string `json:"content,omitempty"`  // 填空内容
	CreateTime int64  `json:"createTime,omitempty"`
}

type SurveyImageDetailRequest {
	ReplyId string `path:"replyId"`
}

type SurveyImageDetailResponse {
	Details []*ImageView `json:"details,omitempty"`
}

type ImageView {
	ContentableView
	Sender     *SimpleSenderView `json:"sender,omitempty"`
	CreateTime int64             `json:"createTime,omitempty"`
}

type SurveyParticipateRequest {
	Token     string         `path:"token"`
	SurveyId  string         `path:"surveyId"`
	ReplyList []*SurveyReply `json:"replyList,optional"`
}

type ContentableRequest {
	Title       string                 `json:"title,optional"`        // 标题
	Content     string                 `json:"content,optional"`      // 内容
	Images      []*ImageRequest        `json:"images,optional"`       // 图片id列表, 需要先上传
	Audio       *AudioRequest          `json:"audio,optional"`        // 语音上传后的对象
	Video       *VideoRequest          `json:"video,optional"`        // 上传后的视频
	Attachments []*AttachmentRequest   `json:"attachements,optional"` // 其他附件
	Extras      map[string]interface{} `json:"extras,optional"`       // 额外属性
}

type SurveyReply {
	ContentableRequest
	Qid        string `json:"qid,optional"`        // 题号id
	OptionKeys []int  `json:"optionKeys,optional"` // 答题选项下标，仅选择题
	Blank      string `json:"blank,optional"`      // 填空题答案
}

type SurveyMemberDetailRequest {
	Token    string `path:"token"`
	SurveyId string `path:"surveyId"`
}

type SurveyMemberDetailResponse {
	Id          string             `json:"id,omitempty"`         //调查id
	Title       string             `json:"title,omitempty"`      //调查名称
	SubTitle    string             `json:"subTitle,omitempty"`   //副标题
	ExpireTime  int64              `json:"expireTime,omitempty"` //调查结束时间
	Anonymous   bool               `json:"anonymous,omitempty"`  //是否匿名
	ReplyList   []*MemberReplyView `json:"replyList,omitempty"`
	Available   bool               `json:"available,omitempty"`   // 服务器端判断是否过期
	IsVoted     bool               `json:"isVoted,omitempty"`     // 家庭成员是否投票
	VoteUserId  string             `json:"voteUserId,omitempty"`  // 家庭投票成员id
	HasLastInfo bool               `json:"hasLastInfo,omitempty"` //上次是否提交过作业
}

type MemberReplyView {
	Qid string `json:"qid,omitempty"` //问题题号，对应reply的id
	ContentableView
	Type           string               `json:"type,omitempty"`           //题目类型 : SINGLE单选题 | MULTIPLE多选 | BLANK填空题 | IMAGE图片题
	MustAnswer     bool                 `json:"mustAnswer,omitempty"`     //是否必答
	MaxOptionalNum int                  `json:"maxOptionalNum,omitempty"` //最大可选数量，仅MULTIPLE时设置
	Blank          string               `json:"blank,omitempty"`
	Options        []*MemberReplyOption `json:"options,omitempty"`
	ImageReply     ContentableView      `json:"imageReply,omitempty"` // 图片题用户的答案，仅IMAGE时返回
}

type MemberReplyOption {
	Value  string `json:"value,omitempty"` //答题内容
	Image  *Image `json:"image,omitempty"` //图片
	IsVote bool   `json:"isVote"`          //是否选择
}

type ViewDetailRequest {
	Token    string `path:"token"`
	SurveyId string `path:"surveyId"`
}

type ViewDetailResponse {
	Id         string         `json:"id,omitempty"`         //调查id
	Title      string         `json:"title,omitempty"`      //调查名称
	SubTitle   string         `json:"subTitle,omitempty"`   //副标题
	ExpireTime int64          `json:"expireTime,omitempty"` //调查结束时间
	Anonymous  bool           `json:"anonymous,omitempty"`  //是否匿名
	ReplyList  []*ReplyDetail `json:"replyList,omitempty"`
	Available  bool           `json:"available,omitempty"` // 服务器端判断是否过期
}

type ReplyDetail {
	ContentableRequest
	Qid            string               `json:"qid,omitempty"`            //问题题号，对应reply的id
	Type           string               `json:"type,omitempty"`           //题目类型 : SINGLE单选题 | MULTIPLE多选 | BLANK填空题
	MustAnswer     bool                 `json:"mustAnswer,omitempty"`     //是否必答
	MaxOptionalNum int                  `json:"maxOptionalNum,omitempty"` //最大可选数量，仅MULTIPLE时设置
	Options        []*ReplyOptionDetail `json:"options,omitempty"`
}

type ReplyOptionDetail {
	Value string `json:"value,omitempty"` //答题内容
	Image *Image `json:"image,omitempty"` //图片
}

type ViewReplyImagesRequest {
	SurveyId string `path:"surveyId"`
}

type ViewReplyImagesResponse {
	Details []*ExportImage `json:"details,omitempty"`
}

type ExportImage {
	Sender SimpleSenderView `json:"sender,omitempty"`
	Qid    int              `json:"qid,omitempty"`
	Images []*Image         `json:"images,omitempty"`
}

type ChoiceXHBTemplateRequest {
	TemplateId string `path:"templateId"`
}

type ChoiceXHBTemplateResponse {
	Id          string        `json:"id,omitempty"`
	SenderId    string        `json:"senderId,omitempty"`
	Category    string        `json:"category,omitempty"`
	ClassroomId string        `json:"classroomId,omitempty"`
	Receipt     *ReceiptSt    `json:"receipt,omitempty"`
	SurveyV2    SurveyProfile `json:"surveyV2,omitempty"`
	From        string        `json:"from,omitempty"`
	Title       string        `json:"title,omitempty"`
	CallbackApi string        `json:"callbackApi,omitempty"`
}

type ReceiptSt {
	Total     int64 `json:"total,omitempty"`
	Receipted int64 `json:"receipted,omitempty"`
}

type SurveyProfile {
	Id             string                `json:"id,omitempty"`
	Title          string                `json:"title,omitempty"`
	SubTitle       string                `json:"subTitle,omitempty"`
	From           string                `json:"from,omitempty"`
	Anonymous      bool                  `json:"anonymous,omitempty"`
	Open           bool                  `json:"open,omitempty"`
	ExpireTime     int64                 `json:"expireTime,omitempty"`
	QuestionList   []*SurveyQuestionView `json:"replyList,omitempty"`
	DeliveryStatus string                `json:"deliveryStatus,omitempty"`
}

type SurveyQuestionView {
	ContentableView
	Type           string          `json:"type,omitempty"`
	Options        []*SurveyOption `json:"options,omitempty"`
	MustAnswer     bool            `json:"mustAnswer"`               // 是否必答
	MaxOptionalNum int             `json:"maxOptionalNum,omitempty"` // 最大可选数量，仅MULTIPLE时设置
}

type ContentableView {
	// 标题
	Title string `json:"title,omitempty"`
	// 内容
	Content string `json:"content,omitempty"`
	// 图片id列表, 需要先上传
	Images []*Image `json:"images,omitempty"`
	// 语音上传后的对象
	Audio *Audio `json:"audio,omitempty"`
	// 上传后的视频
	Video *Video `json:"video,omitempty"`
	// 其他附件
	Attachments []*Attachment `json:"attachements,omitempty"`

	Extras map[string]interface{} `json:"extras,omitempty"`
	// 来自哪里
	From string `json:"from,omitempty"`
}

type SurveyOption {
	// 值
	Value string `json:"value,omitempty"`
	// 图片
	Image *Image `json:"image,omitempty"`
	// 选择比率(50%为50)
	Ratio int `json:"ratio,omitempty"`
	// 投票人
	Voters []*SimpleSenderView `json:"voters,omitempty"`
}

type Image {
	Original  string `json:"original,omitempty"`
	Preview   string `json:"preview,omitempty"`
	Thumbnail string `json:"thumbnail,omitempty"`
	Size      int    `json:"size,omitempty"`
	Height    int    `json:"height,omitempty"`
	Width     int    `json:"width,omitempty"`
}

type Audio {
	Id            string `json:"id,omitempty"`
	Duration      int    `json:"duration,omitempty"`
	FileExtension string `json:"fileExtension,omitempty"`
	Size          int    `json:"size,omitempty"`
	Name          string `json:"name,omitempty"`
}

type Video {
	PlayUrl      string `json:"playUrl,omitempty"`
	Title        string `json:"title,omitempty"`
	Desc         string `json:"desc,omitempty"`
	CoverUrl     string `json:"coverUrl,omitempty"`
	PlayTime     int    `json:"playTime,omitempty"`
	MagicContext string `json:"magicContext,omitempty"`
	Type         string `json:"type,omitempty"`
	Height       int    `json:"height,omitempty"`
	Width        int    `json:"width,omitempty"`
}

type Attachment {
	Id       string `json:"id"`
	Name     string `json:"name,omitempty"`
	MimeType string `json:"mimeType,omitempty"`
	Attrs    *Attrs `json:"attrs,omitempty"`
	Size     string `json:"size,omitempty"`
}

type SurveyListRequest {
	Token    string `path:"token"`
	SurveyId string `path:"surveyId"`
}

type SurveyListResponse {
	HistoryList  []*SurveyInfo `json:"historyList"`
	NotBeginList []*SurveyInfo `json:"notBeginList"`
	RunningList  []*SurveyInfo `json:"runningList"`
	HasMore      bool          `json:"hasMore"`
}

type SurveyInfo {
	Date     int64  `json:"date"`
	EndTime  int64  `json:"endTime"`
	SurveyId string `json:"surveyId"`
	Total    int    `json:"total"`
	VotedNum int    `json:"votedNum"`
}

type SurveyLastInfoRequest {
	Token    string `path:"token"`
	SurveyId string `path:"surveyId"`
}

type SurveyLastInfoResponse {
	ReplyList []*MemberReplyView `json:"replyList,omitempty"`
}

type SurveyPageListRequest {
	Token     string `path:"token"`
	SurveyId  string `path:"surveyId"`
	PageIndex int32  `json:"pageIndex"`
	PageCap   int32  `json:"pageCap"`
}

type SurveyPageListResponse {
	HistoryList []*SurveyInfo `json:"historyList"`
	Total       int           `json:"total"`
	HasMore     bool          `json:"hasMore"`
}

type SurveyViewResponse {
	Id          string       `json:"id,omitempty"`         // 调查id
	Title       string       `json:"title,omitempty"`      //调查名称
	SubTitle    string       `json:"subTitle,omitempty"`   //副标题
	ExpireTime  int64        `json:"expireTime,omitempty"` //调查结束时间
	Anonymous   bool         `json:"anonymous,omitempty"`  //是否匿名
	ReplyList   []*ReplyView `json:"replyList,omitempty"`
	Available   bool         `json:"available,omitempty"`   // 服务器端判断是否过期
	ClassroomId string       `json:"classroomId,omitempty"` // 班级id
	Open        bool         `json:"open,omitempty"`        // 是否公开,即家长是否可以查看结果
	SenderId    string       `json:"senderId,omitempty"`    // 调查发送者
}

type ReplyView {
	Qid string `json:"qid,omitempty"` //问题题号，对应reply的id
	ContentableView
	Type           string         `json:"type,omitempty"`           //题目类型 : SINGLE单选题 | MULTIPLE多选 | BLANK填空题
	MustAnswer     bool           `json:"mustAnswer,omitempty"`     //是否必答
	MaxOptionalNum int            `json:"maxOptionalNum,omitempty"` //最大可选数量，仅MULTIPLE时设置
	Options        []*ReplyOption `json:"options,omitempty"`
	BlankOption    *Option        `json:"blankOption,omitempty"` //填空相关信息
	ImageOption    *Option        `json:"imageOption,omitempty"` //图片相关信息
}

type ReplyOption {
	Value  string   `json:"value,omitempty"`  //答题内容
	Image  *Image   `json:"image,omitempty"`  //图片
	Voters []string `json:"voters,omitempty"` //答题人id
}

type Option {
	Ratio    int `json:"ratio,omitempty"`    //填空题参与比例
	VoterNum int `json:"voterNum,omitempty"` //参与填空题人数
}

type BoolResponse {
	Successful bool `json:"successful"`
}

type (
	GetReceiptDetailRequest {
		SurveyId string `path:"surveyId"`
	}

	GetReceiptDetailResponse {
		FeedbackView   []*FamilyGroupMemberDetailView `json:"feedbackView,omitempty"`
		UnFeedbackView []*FamilyGroupMemberIdView     `json:"unfeedbackView,omitempty"`
		ReceiptedNum   int64                          `json:"receiptedNum,omitempty"`
	}
	FamilyGroupMemberIdView {
		ChildName string   `json:"childName,omitempty"`
		MemberIds []string `json:"memberIds,omitempty"`
	}
	FamilyGroupMemberDetailView {
		ChildName string              `json:"childName,omitempty"`
		Members   []*FamilyMemberView `json:"members,omitempty"`
	}
	FamilyMemberView {
		UserId string `json:"userId,omitempty"`
		// 是否收到 这条消息， receipt
		IsReceipted bool `json:"isReceipted,omitempty"`
		// notice
		Attitude string `json:"attitude,omitempty"`
		// topic
		SpeakCount int `json:"speakCount,omitempty"`
		// 是否参与 activity，survey
		IsJoined bool `json:"isJoined,omitempty"`

		// 反馈的时间点，用于排序
		FeedbackCursor int64 `json:"feedbackCursor,omitempty"`
	}

	WebSurveyReceiptDetailResponse {
		FeedbackView   []*WebFamilyGroupMemberDetailView `json:"feedbackView,omitempty"`
		UnFeedbackView []*WebFamilyGroupMemberSimpleView `json:"unfeedbackView,omitempty"`
		ReceiptedNum   int64                             `json:"receiptedNum,omitempty"`
	}

	WebFamilyGroupMemberDetailView {
		ChildName string                 `json:"childName,omitempty"`
		Members   []*WebFamilyMemberView `json:"members,omitempty"`
	}

	WebFamilyMemberView {
		*FamilyMemberView
		DisplayName string `json:"displayName,omitempty"`
		Avatar      string `json:"avatar,omitempty"`
	}

	WebFamilyGroupMemberSimpleView {
		ChildName string              `json:"childName,omitempty"`
		Members   []*SimpleSenderView `json:"members,omitempty"`
	}
)

service surveyv2-api {
	@doc(
		summary: 获取调查列表
	)
	@server(
		handler: SurveyViewsHandler
	)
	get /surveyv2/views/:token(SurveyViewsRequest) returns(SurveyViewsResponse)
	
	@doc(
		summary: 查看小调查统计
	)
	@server(
		handler: SurveyViewHandler
	)
	get /surveyv2/view/:token/:surveyId(SurveyViewRequest) returns(SurveyViewResponse)
	
	@doc(
		summary: 发布调查
	)
	@server(
		handler: SurveyPublishHandler
	)
	post /surveyv2/publish/:token(SurveyPublishRequest) returns(SurveyPublishResponse)
	
	@doc(
		summary: 修改调查结束时间
	)
	@server(
		handler: SurveyExpiredModifyHandler
	)
	post /surveyv2/expired/modify/:token/:surveyId(SurveyExpiredModifyRequest) returns(SurveyExpiredModifyResponse)
	
	@doc(
		summary: 网页端导出
	)
	@server(
		handler: SurveyWebExportHandler
	)
	get /surveyv2/web/export/:token/:surveyId(SurveyWebExportRequest) returns(SurveyWebExportResponse)
	
	@doc(
		summary: 查看填空题详情
	)
	@server(
		handler: SurveyBlankDetailHandler
	)
	get /surveyv2/blank/detail/:token/:replyId(SurveyBlankDetailRequest) returns(SurveyBlankDetailResponse)
	
	@doc(
		summary: 查看图片题详情
	)
	@server(
		handler: SurveyImageDetailHandler
	)
	get /surveyv2/image/detail/:replyId(SurveyImageDetailRequest) returns(SurveyImageDetailResponse)
	
	@doc(
		summary: 网页端查看填空题详情
	)
	@server(
		handler: SurveyWebBlankDetailHandler
	)
	get /surveyv2/web/blank/detail/:token/:replyId(SurveyWebBlankDetailRequest) returns(SurveyWebBlankDetailResponse)
	
	@doc(
		summary: 参与晓调查
	)
	@server(
		handler: SurveyParticipateHandler
	)
	post /surveyv2/participate/:token/:surveyId(SurveyParticipateRequest) returns(BoolResponse)
	
	@doc(
		summary: 参与晓调查
	)
	@server(
		handler: SurveyMemberDetailHandler
	)
	get /surveyv2/member/detail/:token/:surveyId(SurveyParticipateRequest) returns(BoolResponse)
	
	@doc(
		summary: 查看调查详情（不包括成员提交数据）
	)
	@server(
		handler: ViewDetailHandler
	)
	get /surveyv2/view/detail/:token/:surveyId(ViewDetailRequest) returns(ViewDetailResponse)
	
	@doc(
		summary: 查看调查所有的图片题答案
	)
	@server(
		handler: ViewReplyImagesHandler
	)
	get /surveyv2/views/reply-image/:surveyId(ViewReplyImagesRequest) returns(ViewReplyImagesResponse)
	
	@doc(
		summary: 选用xhb模板
	)
	@server(
		handler: ChoiceXHBTemplate
	)
	get /surveyv2/xhbtemplate/:templateId (ChoiceXHBTemplateRequest) returns(ChoiceXHBTemplateResponse)
	
	@doc(
		summary: 根据调查母模板获取子模板 列表
	)
	@server(
		handler: NewSurveyListHandler
	)
	get /surveyv2/list/:token/:surveyId (SurveyListRequest) returns (SurveyListResponse)
	
	@doc(
		summary: 查找上一次提交信息
	)
	@server(
		handler: LastSubmitInfo
	)
	get /surveyv2/last/info/:token/:surveyId (SurveyLastInfoRequest) returns (SurveyLastInfoResponse)
	
	@doc(
		summary: 分页查找
	)
	@server(
		handler: SurveyListByPage
	)
	post /surveyv2/page/list/:token/:surveyId (SurveyPageListRequest) returns (SurveyPageListResponse)
	
	@doc(
		summary: 回执信息
	)
	@server(
		handler: GetSurveyReceiptedDetail
	)
	get /surveyv2/receipted/detail/:surveyId (GetReceiptDetailRequest) returns (GetReceiptDetailResponse)
	
	@doc(
		summary: 网页回执信息
	)
	@server(
		handler: WebSurveyReceiptedDetail
	)
	get /surveyv2/web/receipted/detail/:surveyId (GetReceiptDetailRequest) returns (WebSurveyReceiptDetailResponse)
}