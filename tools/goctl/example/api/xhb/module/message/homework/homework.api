info(
	title: doc title
	desc: "goctl api go -api homeworkadmin.api -dir ./
	这是晓黑板作业api文档（部分）"
	version: 1.0
)

type TemplateListRequest {
	Subject string `path:"subject,optional"`
}
type TemplateListResponse {
	TemplateView []*TemplateTagsView `json:"data,omitempty"`
}
type TemplateTagsView {
	Tag   string          `json:"tag,omitempty"`
	Items []*TemplateItem `json:"items,omitempty"`
}

type TemplateItem {
	Id           string `json:"id"`
	TemplateName string `json:"templateName"`
	Avatar       string `json:"avatar"`
	UseCount     int    `json:"useCount"`
}

type ChoiceTemplateRequest {
	Token      string `path:"token"`
	TemplateId string `path:"templateId"`
}

type ChoiceTemplateResponse {
	Title       string                 `json:"title"`
	Content     string                 `json:"content"`
	Tag         string                 `json:"tag"`
	Images      []*Image               `json:"images"`
	Video       *Video                 `json:"video,omitempty"`
	Attachments []*Attachment          `json:"attachements,omitempty"` //因为app那边是attachements，只能将错就错
	Extras      map[string]interface{} `json:"extras,omitempty"`
}

type Video {
	// 视频标题
	Title string `json:"title,optional"`
	// 视频描述
	Desc string `json:"desc,optional"`
	// 视频封面url
	CoverUrl string `json:"coverUrl,optional"`
	// 视频url
	PlayUrl string `json:"playUrl"`
	// 视频的播放时长
	PlayTime int `json:"playTime,optional"`
	// 视频回调标识字段[回调透传字段]
	MagicContext string `json:"magicContext,optional"`
	// 视频类型
	Type string `json:"type,optional"`
	// 视频高
	Height int `json:"height,optional"`
	// 视频宽
	Width int `json:"width,optional"`
}

type Attachment {
	// 网络文件id
	Id string `json:"id,omitempty"`
	// 显示名称
	Name string `json:"name,omitempty"`
	// 附件mimeType
	MimeType string `json:"mimeType,omitempty"`
	// 其他属性
	Attrs *Attrs `json:"attrs,omitempty"`
}

type Attrs {
	Size string `json:"size,omitempty"`
}

type Image {
	Original string `json:"original,omitempty"`
	Height   int32  `json:"height,omitempty"`
	Width    int32  `json:"width,omitempty"`
}

type ChoicXhbTemplateRequest {
	TemplateId string `path:"templateId"`
}

type ChoiceHomeworkMessage {
	Id          string                 `json:"id,omitempty"`
	Extras      map[string]interface{} `json:"extras,omitempty"`
	Category    string                 `json:"category,omitempty"`
	Identifier  string                 `json:"identifier,omitempty"`
	Sender      SenderSt               `json:"sender,omitempty"`
	Homework    HomeworkSt             `json:"activity,omitempty"`
	Receipt     *ReceiptSt             `json:"receipt,omitempty"`
	ClassroomId string                 `json:"classroomId,omitempty"`

	CallbackApi string `json:"callbackApi,omitempty"`
}
type SenderSt {
	Id          string `json:"id,omitempty"`
	DisplayName string `json:"displayName,omitempty"`
	Avater      string `json:"avatar,omitempty"`
}

type HomeworkSt {
	Title         string                 `json:"title,omitempty"`
	Content       string                 `json:"content,omitempty"`
	Images        []*Image               `json:"images,omitempty"`
	Video         *Video                 `json:"video,omitempty"`
	Extras        map[string]interface{} `json:"extras,omitempty"`
	Id            string                 `json:"id,omitempty"`
	Open          bool                   `json:"open,omitempty"`
	ExpireTime    int64                  `json:"expireTime,omitempty"`
	Available     bool                   `json:"available,omitempty"`
	Tag           string                 `json:"tag,omitempty"`
	From          string                 `json:"from,omitempty"`
	ClassroomView *ClassroomViewSt       `json:"classroomView,omitempty"`
	Attachments   []*Attachment          `json:"attachements,omitempty"`
}

type ClassroomViewSt {
	Id        string `json:"id,omitempty"`
	Name      string `json:"name,omitempty"`
	BadgeId   string `json:"badgeId,omitempty"`
	BadgeType string `json:"badgeType,omitempty"`
}

type ReceiptSt {
	Total     int64 `json:"total,omitempty"`
	Receipted int64 `json:"receipted,omitempty"`
}

@server(
	host: 0.0.0.0
	port: 1062
)
service homework-api {
	@doc(
		summary: 获取模板列表（可选参数：subject
	)
	@server(
		handler: getTemplateList
	)
	get /homework/template/all/:subject(TemplateListRequest) returns (TemplateListResponse)
	
	@doc(
		summary: 获取模板详情
	)
	@server(
		handler: getTemplateInfo
	)
	get /homework/choice/template/:token/:templateId(ChoiceTemplateRequest) returns (ChoiceTemplateResponse)
	
	@doc(
		summary: 学科资料选择消息模板发送消息
	)
	@server(
		handler: choiceXHBTemplate
	)
	get /homework/xhbtemplate/:templateId(ChoicXhbTemplateRequest) returns (ChoiceHomeworkMessage)
	
}