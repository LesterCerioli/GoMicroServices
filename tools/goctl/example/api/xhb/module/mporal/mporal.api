type Audio {
	Id            string `bson:"_id,omitempty" json:"id,omitempty"`
	Duration      int    `bson:"duration,omitempty" json:"duration,omitempty"`
	FileExtension string `bson:"fileExtension,omitempty" json:"fileExtension,omitempty"`
	Size          int    `bson:"size,omitempty" json:"size,omitempty"`
	Name          string `bson:"name,omitempty" json:"name,omitempty,optional"`
	Index         int    `bson:"index,omitempty" json:"index,omitempty,optional"`
}

type ErrWordItem {
	C string `json:"c"`
	S int    `json:"s"`
}

type HomeworkDataChartRequest {
	HomeworkId string `json:"homeworkId"`
	SubtaskId  string `json:"subtaskId,optional"`
}

type HomeworkDataChartResponse {
	UserNum      int                  `json:"userNum"`
	AverageScore int                  `json:"averageScore"`
	Columns      []*OralChartDataItem `json:"columns"`
}

type HomeworkDetailRequest {
	HomeworkId string `json:"homeworkId"`
}

type HomeworkDetailResponse {
	Id          string           `json:"id,omitempty"`
	Title       string           `json:"title,omitempty"`
	Mode        string           `json:"mode"`                  // SCORE_SYSTEM:分数制  RANK_SYSTEM:等第制
	Subject     string           `json:"subject,omitempty"`     // 学科  zh-语文  en-外语  math-数学
	SubType     string           `json:"subType"`               // 作业类型 recite-背诵  readLoud-朗读
	Grade       string           `json:"grade,omitempty"`       // 年级
	BookVersion string           `json:"bookVersion,omitempty"` // 教材版本
	EndTime     int64            `json:"endTime,omitempty"`     // 截止时间
	HasCommit   bool             `json:"hasCommit"`             // 是否已提交
	OralId 		string 			 `json:"oralId"`
	CanSelfTest bool             `json:"canSelfTest"`           // 是否可以进行自测,是发布者且以往未有学生提交他的作业时，才为true
	User        *UserInfo        `json:"user,omitempty"`
	Content     *ResponseContent `json:"content,omitempty"`
	CreateTime  int64            `json:"createTime,omitempty"`
	UpdateTime  int64            `json:"updateTime,omitempty"`
}

type PeriodicHomeworkDetailRequest {
	HomeworkId string `json:"homeworkId"`
}

type PeriodicHomeworkDetailResponse {
	Id          string            `json:"id,omitempty"` // 作业id
	Title       string            `json:"title,omitempty"`
	Mode        string            `json:"mode"`                  // SCORE_SYSTEM:分数制  RANK_SYSTEM:等第制
	Subject     string            `json:"subject,omitempty"`     // 学科  zh-语文  en-外语  math-数学
	SubType     string            `json:"subType"`               // 作业类型 recite-背诵  readLoud-朗读
	Grade       string            `json:"grade,omitempty"`       // 年级
	BookVersion string            `json:"bookVersion,omitempty"` // 教材版本
	EndTime     int64             `json:"endTime,omitempty"`     // 截止时间
	CanSelfTest bool              `json:"canSelfTest"`           // 是否可以进行自测,是发布者且以往未有学生提交他的作业时，才为true
	User        *UserInfo         `json:"user,omitempty"`
	Content     []*SubtaskContent `json:"content,omitempty"` // 子任务内容
	CreateTime  int64             `json:"createTime,omitempty"`
	UpdateTime  int64             `json:"updateTime,omitempty"`
}


type HomeworkRelatedReq {
	HomeworkId string `json:"homeworkId"`
}

type HomeworkJoinRequest {
	HomeworkId    string   `json:"homeworkId"`
	SubtaskId     string   `json:"subtaskId,optional"`
	DisName       string   `json:"disName"`
	OralResultIds []string `json:"oralResultIds"`
}

type HomeworkJoinResponse {
	OralId string `json:"oralId,omitempty"`
}

type HomeworkHasCommitRequest {
	HomeworkId    string   `form:"homeworkId"`
	SubtaskId     string   `form:"subtaskId,optional"`
}

type HomeworkHasCommitResponse {
	HasCommit bool `json:"hasCommit,omitempty"`
}

type HomeworkListItem {
	Id           string           `json:"id,omitempty"`
	Title        string           `json:"title,omitempty"`
	Subject      string           `json:"subject,omitempty"`     // 学科  zh-语文  en-外语  math-数学
	Grade        string           `json:"grade,omitempty"`       // 年级
	BookVersion  string           `json:"bookVersion,omitempty"` // 教材版本
	Periodic     int              `json:"periodic"`              // 周期性作业  是：1 否：0
	Content      *ResponseContent `json:"content,omitempty"`     // 作业内容
	EndTime      int64            `json:"endTime,omitempty"`     // 截止时间
	User         *UserInfo        `json:"user,omitempty"`        // 用户信息
	SubmitCount  int              `json:"submitCount"`           // 教师身份返回，作业提交人数
	AverageScore int              `json:"averageScore"`          // 教师身份返回，作业平均分
	JoinStatus   int              `json:"joinStatus,omitempty"`  // 家长身份返回，提交状态  0-去提交  1-重新提交  在个人的列表里才会有
	Level        int              `json:"level,omitempty"`       // 家长身份返回，成绩等级   1|2|3|4 对应 ABCD
	SubmitTask   int              `json:"submitTask,omitempty"`  // 家长身份返回，周期性作业提交数量
	TotalTask    int              `json:"totalTask,omitempty"`   // 家长身份返回，周期性作业总数量
	SubType      string           `json:"subType"`
	HasCommit    bool             `json:"hasCommit"`
	OralId       string           `json:"oralId"`
	Index        int              `json:"index"`
	CreateTime   int64            `json:"createTime,omitempty"`
	UpdateTime   int64            `json:"updateTime,omitempty"`
}

type HomeworkOralListItem {
	Id         string    `json:"id,omitempty"`
	HomeworkId string    `json:"homeworkId,omitempty"`
	User       *UserInfo `json:"user,omitempty"`
	Level      string    `json:"level,omitempty"`
	Overall    int       `json:"overall"`             // 综合分
	AudioList  []*Audio  `json:"audioList,omitempty"` // 音频列表
	Status     int       `json:"status,omitempty"`    // 状态 1-评测中 2-评测成功 3-评测失败
	CreateTime int64     `json:"createTime,omitempty"`
	Type       int 		 `json:"type"`				  //oral类型，0:学生提交的oral 1:老师自测提交的oral
}

type HomeworkOralListRequest {
	HomeworkId    string `json:"homeworkId"`
	SubtaskId     string `json:"subtaskId,optional"`
	LastTimestamp int64  `json:"lastTimestamp"`
	PageSize      int    `json:"pageSize"`
}

type HomeworkOralListResponse {
	HasMore       bool                    `json:"hasMore"`
	LastTimestamp int64                   `json:"lastTimestamp,omitempty"`
	List          []*HomeworkOralListItem `json:"list,omitempty"`
}

type DelHomeworkOralReq {
	OralId string `path:"oralId"`
}

type SuccessfulResp {
	Successful bool `json:"successful"`
}

type HomeworkOralReportRequest {
	HomeworkId string `json:"homeworkId"`
	SubtaskId  string `json:"subtaskId,optional"`
}

type HomeworkOralReportResponse  {
	User            *UserInfo         `json:"user,omitempty"`
	Title           string            `json:"title,omitempty"`
	SnapshotId      string            `json:"snapshotId,omitempty"`
	JoinStatus      int               `json:"joinStatus,omitempty"` // 提交状态  0-去提交  1-重新提交  在个人的列表里才会有
	Subject         string            `json:"subject,omitempty"`
	Count           int               `json:"count,omitempty"`
	ScoreLevel      *ScoreLevel       `json:"scoreLevel,omitempty"`
	AverageDuration int               `json:"averageDuration"`
	WrongWords      []*ErrWordItem    `json:"wrongWords,omitempty"`
	AverageScore    *AverageScoreItem `json:"averageScore,omitempty"`
}

type AverageScoreItem {
	Overall    int `json:"overall"`
	Integrity  int `json:"integrity"`
	Pron       int `json:"pron"`
	Fluency    int `json:"fluency"`
	ErrWordNum int `json:"errWordNum"`
}

type HomeworkOralReportUserListItem {
	OralId     string    `json:"oralId,omitempty"`
	User       *UserInfo `json:"user,omitempty"`
	Overall    int       `json:"overall"`
	Integrity  int       `json:"integrity"`
	Pron       int       `json:"pron"`
	Fluency    int       `json:"fluency"`
	ErrWordNum int       `json:"errWordNum"`
	UpdateTime int64     `json:"updateTime,omitempty"`
}

type HomeworkOralReportUserListRequest {
	HomeworkId    string `json:"homeworkId"`
	SubtaskId     string `json:"subtaskId,optional"`
	PageSize      int    `json:"pageSize"`
	LastTimestamp int64  `json:"lastTimestamp"`
}

type HomeworkOralReportUserListResponse {
	HasMore       bool                              `json:"hasMore"`
	LastTimestamp int64                             `json:"lastTimestamp,omitempty"`
	List          []*HomeworkOralReportUserListItem `json:"list,omitempty"`
}


type OralChartDataItem {
	Level int `json:"level,omitempty"`
	Num   int `json:"num"`
}

type OralDeleteRequest {
	OralId string `json:"oralId"`
}

type OralDeleteResponse {
}

type OralItem {
	OralId       string    `json:"oralId,omitempty"`
	User         *UserInfo `json:"user,omitempty"`
	Status       int       `json:"status,omitempty"`       // 1-评测中 2-评测成功 3-测试失败
	Overall      int       `json:"overall,omitempty"`      // 综合分
	Pron         int       `json:"pron,omitempty"`         // 发音得分
	Integrity    int       `json:"integrity,omitempty"`    // 完整性得分
	Fluency      int       `json:"fluency,omitempty"`      // 流利度得分
	WrongWordNum int       `json:"wrongWordNum,omitempty"` // 错字数
	Duration     int       `json:"duration,omitempty"`     // 音频时长
}

type OralListItem {
	Id            string    `json:"id,omitempty"`
	User          *UserInfo `json:"user,omitempty"`
	Level         string    `json:"level,omitempty"`
	Overall       int       `json:"overall"`
	Title         string    `json:"title"`
	TxtSnapshotId string    `json:"txtSnapshotId,omitempty"`
	Status        int       `json:"status,omitempty"` // 状态 1-评测中 2-评测成功 3-评测失败
	AudioList     []*Audio  `json:"audioList,omitempty"`
	CreateTime    int64     `json:"createTime,omitempty"`
}

type OralListRequest {
	Subject       string `json:"subject,optional"` // zh-语文  en-外语  math-数学   不传的话就是all
	PageSize      int    `json:"pageSize"`
	LastTimestamp int64  `json:"lastTimestamp"`
}

type OralListResponse {
	HasMore       bool            `json:"hasMore"`
	LastTimestamp int64           `json:"lastTimestamp,omitempty"`
	Count         int             `json:"count,omitempty"`
	List          []*OralListItem `json:"list,omitempty"`
}

type OralReportRequest {
	OralId string `json:"oralId"`
}

type OralReportResponse {
	Id            string        `json:"id,omitempty"`
	Subject       string        `json:"subject,omitempty"`
	Status        int           `json:"status,omitempty"`
	Level         string        `json:"level,omitempty"`
	Mode          string        `json:"mode,omitempty"`
	Score         int           `json:"score,omitempty"`
	User          *UserInfo     `json:"user"`
	Type          string        `json:"type,omitempty"` // myself-自主练  homework-口语作业
	HomeworkId    string        `json:"homeworkId,omitempty"`
	Publisher     string        `json:"publisher,omitempty"`
	SubtaskId     string        `json:"subtaskId,omitempty"`
	Comment       string        `json:"comment"` // 快捷评语
	TxtSnapshotId string        `json:"txtSnapshotId,omitempty"`
	SubType       string        `json:"subType"`
	OralResult    []*OralResult `json:"oralResult,omitempty"`
	ErrWordNum    int           `json:"errWordNum"`
	CreateTime    int64         `json:"createTime,omitempty"`
}

type OralResult {
	SectionId string      `json:"sectionId,omitempty"` // 段落ID
	WordId    string      `json:"wordId,omitempty"`    // 词句ID
	Words     []*OralWord `json:"words,omitempty"`
	Score     *OralScore  `json:"score,omitempty"`
	Audio     *Audio      `json:"audio,omitempty"`
}

type OralSaveRequest {
	OralId        string   `json:"oralId,optional"`
	SnapshotId    string   `json:"snapshotId"`
	Subject       string   `json:"subject"`
	Grade         string   `json:"grade"`
	SubType       string   `json:"subType"` // 练习方式 recite-背诵  readLoud-朗读
	BookVersion   string   `json:"bookVersion"`
	DisName       string   `json:"disName"` // 显示名字
	OralResultIds []string `json:"oralResultIds"`
}

type OralSaveResponse {
	OralId string `json:"oralId"`
}

type OralScore {
	Overall   int `json:"overall"`
	Integrity int `json:"integrity"`
	Pron      int `json:"pron"`
	Fluency   int `json:"fluency"`
}

type OralWord {
	W string `json:"w,omitempty"`
	S int    `json:"s"`
	C string `json:"c,omitempty"`
}

type PublishHomeworkRequest {
	Title       string          `json:"title"`
	Mode        string          `json:"mode,optional"`// SCORE_SYSTEM:分数制  RANK_SYSTEM:等第制
	Subject     string          `json:"subject"`      // 学科  zh-语文  en-外语  math-数学
	Grade       string          `json:"grade"`        // 年级
	BookId      int64           `json:"bookId,optional"`
	BookVersion string          `json:"bookVersion"`  // 教材版本
	SubType     string          `json:"subType"`      // 作业类型 recite-背诵  readLoud-朗读
	EndTime     int64           `json:"endTime"`      // 截止时间
	Signature   string          `json:"signature"`    // 署名
	Content     *RequestContent `json:"content"`
}

type PublishHomeworkResponse {
	HomeworkId string `json:"homeworkId,omitempty"`
}

type PublishPeriodicHomeworkRequest {
	Title       string            `json:"title"`
	Mode        string            `json:"mode,optional"`// SCORE_SYSTEM:分数制  RANK_SYSTEM:等第制
	Subject     string            `json:"subject"`      // 学科  zh-语文  en-外语  math-数学
	Grade       string            `json:"grade"`        // 年级
	BookId      int64             `json:"bookId,optional"`
	BookVersion string            `json:"bookVersion"`  // 教材版本
	SubType     string            `json:"subType"`      // 作业类型 recite-背诵  readLoud-朗读
	EndTime     int64             `json:"endTime"`      // 截止时间
	Signature   string            `json:"signature"`    // 署名
	Content     []*RequestContent `json:"content"`
}

type PublishPeriodicHomeworkResponse {
	HomeworkId string `json:"homeworkId,omitempty"`
}

type RequestContent {
	Index    int        `json:"index,optional"` // 周期性作业文章顺序
	Unit     string     `json:"unit,optional"`  // 周期性作业，子任务传入单元名
	Title    string     `json:"title,optional"` // 周期性作业，子任务传入文章名
	TxtId    string     `json:"txtId"`          // 翰林院文章ID
	Sections []*Section `json:"sections"`       // 段落
}

type ResponseContent {
	TxtSnapshotId string     `json:"txtSnapshotId"`      // 翰林院文章ID
	Sections      []*Section `json:"sections,omitempty"` // 段落
}

type SubtaskContent {
	Index         int        `json:"index"` // 文章顺序
	SubtaskId     string     `json:"subtaskId"`
	TxtSnapshotId string     `json:"txtSnapshotId"`      // 翰林院文章ID
	Sections      []*Section `json:"sections,omitempty"` // 段落
	Unit          string     `json:"unit,omitempty"`     // 单元名
	Title         string     `json:"title,omitempty"`    // 文章名
	SubmitCount   int        `json:"submitCount"`        // 教师身份返回，作业提交人数
	HasCommit     bool       `json:"hasCommit"`          // 家长身份返回，是否已提交
	OralId        string     `json:"oralId,omitempty"`   // 家长身份返回，我提交的成果Id
	Level         int        `json:"level,omitempty"`    // 家长身份返回，成绩等级   1|2|3|4 对应 ABCD
}

type ScoreLevel {
	Overall   *ScoreItem `json:"overall,omitempty"`
	Integrity *ScoreItem `json:"integrity,omitempty"`
	Pron      *ScoreItem `json:"pron,omitempty"`
	Fluency   *ScoreItem `json:"fluency,omitempty"`
}

type ScoreItem {
	Score           int                  `json:"score"`
	ScoreStatistics *ScoreStatisticsItem `json:"scoreStatistics"`
	ScoreLevel      *ScoreLevelItem      `json:"scoreLevel"`
}

type ScoreStatisticsItem {
	Max     int `json:"max"`
	Min     int `json:"min"`
	Average int `json:"average"`
}

type ScoreLevelItem {
	L1 int `json:"l1"`
	L2 int `json:"l2"`
	L3 int `json:"l3"`
	L4 int `json:"l4"`
}

type Section {
	Id string `json:"id,omitempty"` // 段落ID
}

type UserInfo {
	Id          string `json:"id,omitempty"`
	DisplayName string `json:"displayName"`
	Avatar      string `json:"avatar"`
}

type MpBindMobileRequest {
	EncryptedData string `json:"encryptedData"`
	Iv            string `json:"iv"`
}

type AuthorizeRequest {
	NickName  string `json:"nickName"`
	Gender    int    `json:"gender"`
	Language  string `json:"language"`
	City      string `json:"city"`
	Province  string `json:"province"`
	Country   string `json:"country"`
	AvatarUrl string `json:"avatarUrl"`
}

type MpLoginRequest {
	AuthCode string `json:"authCode"`
}

type MpLoginResponse {
	UserId        string `json:"userId"`
	UserName      string `json:"userName"`
	AvatarUrl     string `json:"avatarUrl"`
	Mobile        string `json:"mobile"`
	HasBindMobile bool   `json:"hasBindMobile"`
	OpenId        string `json:"openId"`
	AccessToken   string `json:"accessToken"`
	Role          string `json:"role"` // 身份 空字符串为未设置过身份 TEACHER-教师 | PARENT-家长
	HasPublished  bool   `json:"hasPublished"`
}

type MpSwitchRoleRequest {
	Role string `json:"role,options=TEACHER|PARENT"` // 身份 TEACHER-教师 | PARENT-家长
}

type WxPublicResp {
	Follow bool `json:"follow"` //是否关注过公众号
}

type ResultParseRequest {
	Id         string `json:"id,optional"`    // 快照Id
	TxtId      string `json:"txtId,optional"` // 活动解析传文章Id，不传快照Id
	Subject    string `json:"subject"`
	Platform   string `json:"platform"` // 评测平台  singsound-先声 chivox-驰声
	Type       string `json:"type"`     // myself-自主练   homework-作业   activity-活动
	Audio      *Audio `json:"audio"`
	SectionId  string `json:"sectionId"`       // 段落ID 必传
	WordId     string `json:"wordId,optional"` // 词句ID 没有话可以不传
	Status     int    `json:"status"`          // 1-评测中  2-评测成功  3-评测失败
	ResultJson string `json:"resultJson"`
}

type ResultParseResponse {
	OralResultId string      `json:"oralResultId"`
	OralResult   *OralResult `json:"oralResult"`
}

type UserSignatureRequest {
	TypeName string `json:"typeName"`
}

type UserSignatureResponse {
	DisplayName string `json:"displayName"`
}

type SubmitCountRequest {
	HomeworkId string `path:"homeworkId"`
	SubtaskId  string `form:"subtaskId,optional"`
}

type SubmitCountResponse {
	Count int `json:"count,omitempty"`
}

type UndoRequest {
	HomeworkId string `json:"homeworkId"`
}

type UndoResponse {
}

type ExperienceResult {
	Audio      *Audio `json:"audio"`
	SectionId  string `json:"sectionId"`            // 段落ID 必传
	WordId     string `json:"wordId,optional"`      // 词句ID 没有话可以不传
	Status     int    `json:"status,options=1|2|3"` // 1-评测中  2-评测成功  3-评测失败
	ResultJson string `json:"resultJson"`
}

type ExperienceRequest {
	Subject  string              `json:"subject,options=zh|en"`
	Platform string              `json:"platform"` // 评测平台  singsound-先声 chivox-驰声
	Results  []*ExperienceResult `json:"results"`
}

type ExperienceResponse {
	Subject       string        `json:"subject,omitempty"`
	Level         string        `json:"level,omitempty"`
	Comment       string        `json:"comment"`
	Type          string        `json:"type,omitempty"` // myself-自主练  homework-口语作业
	TxtSnapshotId string        `json:"txtSnapshotId,omitempty"`
	SubType       string        `json:"subType"`
	ErrWordNum    int           `json:"errWordNum"`
	OralResult    []*OralResult `json:"oralResult,omitempty"`
}

type ExperienceArticleResponse {
	Zh *Text `json:"zh"`
	En *Text `json:"en"`
}

type Text {
	TxtId         string    `json:"txtId"`
	Title         string    `json:"title"`
	Author        string    `json:"author"`
	BookId        int       `json:"bookId"`
	ChapterId     int       `json:"chapterId"`
	Context       string    `json:"context"`
	AudioUrl      string    `json:"audioUrl"`
	AudioDuration int       `json:"audioDuration"`
	ImageUrl      string    `json:"imageUrl"`
	TagId         int       `json:"tagId"`
	TagName       string    `json:"tagName"`
	Status        int       `json:"status"`
	ContentType   int       `json:"contentType"`
	ParentId      string    `json:"parentId"`
	OriginId      string    `json:"originId"`
	IsRecite      int       `json:"isRecite"`
	ContentChild  []*TextL1 `json:"contentChild"`
}

type TextL1 {
	TxtId         string    `json:"txtId"`
	Title         string    `json:"title"`
	Context       string    `json:"context"`
	AudioUrl      string    `json:"audioUrl"`
	AudioDuration int       `json:"audioDuration"`
	ImageUrl      string    `json:"imageUrl"`
	Status        int       `json:"status"`
	ContentType   int       `json:"contentType"`
	ParentId      string    `json:"parentId"`
	OriginId      string    `json:"originId"`
	IsRecite      int       `json:"isRecite"`
	ContentChild  []*TextL2 `json:"contentChild"`
}

type TextL2 {
	TxtId         string `json:"txtId"`
	Context       string `json:"context"`
	AudioUrl      string `json:"audioUrl"`
	AudioDuration int    `json:"audioDuration"`
	ImageUrl      string `json:"imageUrl"`
	Status        int    `json:"status"`
	ContentType   int    `json:"contentType"`
	ParentId      string `json:"parentId"`
	OriginId      string `json:"originId"`
	IsRecite      int    `json:"isRecite"`
}

type RoleListRequest {
	Role          string `json:"role,options=TEACHER|PARENT"`
	PageSize      int    `json:"pageSize"`
	LastTimestamp int64  `json:"lastTimestamp"`
}

type RoleListResponse {
	HasMore       bool                `json:"hasMore"`
	LastTimestamp int64               `json:"lastTimestamp,omitempty"`
	List          []*HomeworkListItem `json:"list,omitempty"`
}

type ShowStripResponse {
	Show bool `json:"show"` // 是否显示复习资料包MVP
}

type Color {
	R string `json:"r"`
	G string `json:"g"`
	B string `json:"b"`
}

type GetwxacodeRequest {
	Scene     string `json:"scene"`
	Page      string `json:"page,optional"`
	Width     int    `json:"width,optional"`
	AutoColor bool   `json:"auto_color,optional"`
	LineColor Color  `json:"line_color,optional"`
	IsHyaline bool   `json:"is_hyaline,optional"`
}

type GetwxacodeResponse {
	Buffer []byte `json:"buffer"`
}

type GetPosterRequest {
	UserId string `path:"userId"`
}

type GetPosterResponse {
	Days        int64  `json:"days"`
	Emoji       string `json:"emoji"`
	Saying      string `json:"saying"`
	BackPicture string `json:"backPicture"`
}

type GetBookUrlRequest {
	BookId int64 `path:"bookId"`
}

type GetBookUrlResponse {
	Url  string `json:"url"`
	Name string `json:"name"`
}

type GetBookFilterResponse {
	SchoolSection []*SchoolSection   `json:"schoolSection"`
}

type SchoolSection {
	LevelId int64 `json:"levelId"`
	LevelName string `json:"levelName"`
	Subject []*Subject `json:"subject"`
}

type Subject {
	SubjectId int64 `json:"subjectId"`
	SubjectName string `json:"subjectName"`
	Grade []*Grade `json:"grade"`
}

type Grade {
	GradeId int64 `json:"gradeId"`
	GradeName string `json:"gradeName"`
}

type SearchBookRequest {
	Type     string  `json:"type"` // myself-自主练  homework-口语作业
	Level    int64   `json:"level"`
	Subjects []int64 `json:"subjects"`
	Grades   []int64 `json:"grades"`
}

type SearchBookResponse {
	InClass     []*SubjectData `json:"inClass"`
	Extra       []*SubjectData `json:"extra"`
	Review      []*SubjectData `json:"review"`
}

type SubjectData {
	SubjectId   int64       `json:"subjectId"`
	Category   []*Category 	`json:"category"`
}

type Category {
	CategoryId   int64   `json:"categoryId"`
	CategoryName string  `json:"categoryName"`
	Books        []*Book `json:"books"`
}

type Book {
	GradeId      int64  `json:"gradeId"`
	GradeName    string `json:"gradeName"`
	BookId       int64  `json:"bookId"`
	BookName     string `json:"bookName"`
	Cover        string `json:"cover,omitempty"`
	Downloadable bool   `json:"downloadable,omitempty"`
	LastUse      bool   `json:"lastUse,omitempty"`
}

type RecordRequest {
	BookId int64  `json:"bookId"`
	Type   string `json:"type"`     // myself-自主练   homework-作业
}

type RecordResponse {
}

type BookNameRequest {
	BookId int64 `path:"bookId"`
}

type BookNameResponse {
	BookName string `json:"bookName"`
}

type MyselfDataResponse {
	Orals int `json:"orals"`
	Days  int `json:"days"`
}

type NewDisNameRequest {
	OralId  string `json:"oralId"`
	DisName string `json:"disName"`
}

type PopupsReq {
	PopupsType int `form:"popupsType"` //弹框类型  1：漫画弹框
}

type PopusResp {
	IsShow bool     `json:"isShow"`
	ImgUrl string   `json:"imgUrl"`
	Title string    `json:"title"`
	ExtraMsg string `json:"extraMsg"`
}

type UpdatePopupsReq {
	PopupsType int `json:"popupsType"`
	ImgUrls []string   `json:"imgUrls,optional"`
}

type MsgCheckRequest {
	Content string `json:"content"`
}

type MsgCheckResponse {
	Errcode int64  `json:"errcode"`
	ErrMsg  string `json:"errMsg"`
}


type GetActivityListResp {
	List []*ActivityItem `json:"list"`
}

type ActivityItem {
	ActivityId string 		`json:"activityId"`
	ActivityName string 	`json:"activityName"`
	ActivityType int64		`json:"activityType"`
	DefaultNum int64 		`json:"defaultNum"` //默认参与人数
	ActualNum int64 		`json:"actualNum"` //实际参与人数
	Participated  bool 		`json:"participated"` //是否已参加
	CurrentMission int64     `json:"currentMission"`
	TotalMission int64 		`json:"totalMission"`
}

type GetMissionsReq {
	ActivityId string `form:"activityId"`
}

type GetMissionsResp {
	Missions []*MissionItem `json:"missions"`
	ActivityName string `json:"activityName"`
	Current int64 `json:"current"`
	BookId int64 `json:"bookId"`
}

type MissionItem {
	DefaultNum int64 `json:"defaultNum"`
	ActualNum int64 `json:"actualNum"`
	Mission int64`json:"mission"`
	Status int64 `json:"status"`
	ImgUrl string `json:"imgUrl"`
	Name string `json:"name"`
	TxtId string `json:"txtId"`
}

type GetRankingsReq {
	ActivityId string `form:"activityId"`
	StartRank  int64  `form:"startRank"`
	PageSize   int64  `form:"pageSize"`
}

type GetRankingsResp {
	List []*RankingsItem `json:"list"`
}

type RankingsItem {
	InRankings bool `json:"inRankings"`
	Rank int `json:"rank"`
	CurrentMission int64 `json:"currentMission"`
	Uid string `json:"uid"`
	AvatarUrl string `json:"avatarUrl"`
	Name string `json:"name"`
	TotalScore int64 `json:"totalScore"`
}

type GetUserRankingsDetailReq {
	ActivityId string `form:"activityId"`
	Uid string `form:"uid"`
}

type GetUserRankingsDetailResp {
	List []*UserRankingsDetailItem `json:"list"`
}

type UserRankingsDetailItem {
	Mission int64 `json:"mission"`
	MissionName string `json:"missionName"`
	TotalScore int64 `json:"totalScore"`
	AiScore int64 `json:"aiScore"`
	LikeCount int64 `json:"likeCount"`
	OralId string `json:"oralId"`
	ResultId string `json:"resultId"`
	Like bool `json:"like"`
	PlayCount int64 `json:"playCount"`
	Audios    []*Audio `json:"audios"`
}

type getUserTotalRankReq {
	ActivityId string `form:"activityId"`
}

type getUserTotalRankResp {
	RankingsItem
}

type GetUserMissionRankReq {
	ActivityId string `form:"activityId"`
	BookId     int64  `form:"bookId"`
	TxtId      string `form:"txtId"`
	Mission    int64  `form:"mission"`
}

type GetUserMissionRankResp {
	InRankings bool   `json:"inRankings"`
	OralId     string `json:"oralId"`
	MissionRankingsItem
}

type GetMissionRankingsReq {
	ActivityId string `form:"activityId"`
	BookId     int64  `form:"bookId"`
	TxtId      string `form:"txtId"`
	Mission    int64  `form:"mission"`
	StartRank  int64  `form:"startRank"`
	PageSize   int64  `form:"pageSize"`
}

type GetMissionRankingsResp {
	List []*MissionRankingsItem `json:"list"`
}

type MissionRankingsItem {
	Audios     []*Audio `json:"audios,omitempty"`
	Name       string   `json:"name,omitempty"`
	AvatarUrl  string   `json:"avatarUrl,omitempty"`
	Rank       int64    `json:"rank"`
	TotalScore int64    `json:"totalScore"`
	AiScore    int64    `json:"aiScore"`
	PlayCount  int64    `json:"playCount"`
	LikeCount  int64    `json:"likeCount"`
	Like       bool     `json:"like"`
	ResultId   string   `json:"resultId,omitempty"`
}

type ActivityResultLikeReq {
	ResultId string `json:"resultId"`
	Like bool `json:"like"`
}

type ActivityResultPlayReq {
	ResultId   string `json:"resultId"`
}

type SaveActivityOralReq {
	OralId        string   `json:"oralId,optional"`
	ActivityId 	  string   `json:"activityId"`
	BookId  	  int64    `json:"bookId"`
	TxtId         string   `json:"txtId"`
	Mission		  int64    `json:"mission"`
	MissionName   string   `json:"missionName"`
	Subject       string   `json:"subject"`
	DisName       string   `json:"disName"` // 显示名字
	OralResultIds []string `json:"oralResultIds"`
}

type SaveActivityOralResp {
	ResultId string `json:"resultId"`
	OralId   string `json:"oralId"`
	Replace  bool   `json:"replace"`
	First    bool   `json:"first"`
}

type ActivityOralReportReq {
	ResultId string `form:"resultId"`
	OralId   string `form:"oralId"`
}

type ActivityOralReportResp {
	Id            string        `json:"id,omitempty"`
	Status        int           `json:"status,omitempty"`
	Score         int           `json:"score,omitempty"`
	User          *UserInfo     `json:"user"`
	Comment       string        `json:"comment"` // 快捷评语
	TxtSnapshotId string        `json:"txtSnapshotId,omitempty"`
	OralResult    []*OralResult `json:"oralResult,omitempty"`
	ErrWordNum    int           `json:"errWordNum"`
	Like          bool          `json:"like"`
	CreateTime    int64         `json:"createTime,omitempty"`
}

@server(
	group: user
)
service mporal-api {
	@doc "微信小程序授权码登录"
	@handler MpLoginHandler
	post /mporal/user/login(MpLoginRequest) returns(MpLoginResponse)

	@doc "微信事件推送"
	@handler WxPublicCallbackHandler
	post /mporal/user/public/callback()

	@doc "微信推送配置校验token"
	@handler WxCallbackVerificationHandler
	get /mporal/user/public/callback()
}

@server(
	group: user
	jwt: Auth
	signature: Auth
)
service mporal-api {
	@doc "绑定手机号到微信小程序账号"
	@handler mpBindMobileHandler
	post /mporal/user/bind(MpBindMobileRequest)

	@doc "用户授权"
	@handler authorizeHandler
	post /mporal/user/authorize(AuthorizeRequest)

	@doc "切换用户身份"
	@handler mpSwitchRoleHandler
	post /mporal/user/switch/role(MpSwitchRoleRequest)

	@doc "检查用户是否关注过公众号"
	@handler wxPublicHandler
	get /mporal/user/public() returns(WxPublicResp)

	@doc "获取名字"
	@handler userSignatureHandler
	post /mporal/user/signature(UserSignatureRequest) returns(UserSignatureResponse)
}


@server(
	group: homework
	jwt: Auth
	signature: Auth
)
service mporal-api {
	@doc "发布作业"
	@handler publishHomeworkHandler
	post /mporal/homework/publish (PublishHomeworkRequest) returns (PublishHomeworkResponse)

	@doc "发布周期性作业"
	@handler publishPeriodicHomeworkHandler
	post /mporal/periodic-homework/publish(PublishPeriodicHomeworkRequest) returns(PublishPeriodicHomeworkResponse)

	@doc "作业详情"
	@handler homeworkDetailHandler
	post /mporal/homework/detail(HomeworkDetailRequest) returns(HomeworkDetailResponse)

	@doc "周期性作业详情"
	@handler periodicHomeworkDetailHandler
	post /mporal/periodic-homework/detail(PeriodicHomeworkDetailRequest) returns(PeriodicHomeworkDetailResponse)

	@doc "作业关联"
	@handler homeworkRelateHandler
	post /mporal/homework/relate(HomeworkRelatedReq) returns(SuccessfulResp)

	@doc "提交作业"
	@handler homeworkJoinHandler
	post /mporal/homework/join(HomeworkJoinRequest) returns(HomeworkJoinResponse)

	@doc "是否提交过作业"
	@handler homeworkHasCommitHandler
	get /mporal/homework/hascommit(HomeworkHasCommitRequest) returns(HomeworkHasCommitResponse)

	@doc "作业口语测评报告"
	@handler homeworkOralReportHandler
	post /mporal/homework/oral/report(HomeworkOralReportRequest) returns(HomeworkOralReportResponse)

	@doc "作业详情柱状图统计"
	@handler homeworkDataChartHandler
	post /mporal/homework/data-chart(HomeworkDataChartRequest) returns(HomeworkDataChartResponse)

	@doc "作业成果列表"
	@handler homeworkOralListHandler
	post /mporal/homework/oral/list(HomeworkOralListRequest) returns(HomeworkOralListResponse)

	@doc "删除作业成果"
	@handler delHomeworkOralHandler
	delete /mporal/homework/oral/:oralId(DelHomeworkOralReq) returns(SuccessfulResp)

	@doc "作业报告参与用户列表"
	@handler homeworkOralReportUserListHandler
	post /mporal/homework/oral/report/user/list(HomeworkOralReportUserListRequest) returns(HomeworkOralReportUserListResponse)

	@doc "作业提交数统计"
	@handler submitCountHandler
	get /mporal/homework/submit-count/:homeworkId(SubmitCountRequest) returns(SubmitCountResponse)

	@doc "撤回口语作业"
	@handler undoHandler
	post /mporal/homework/undo(UndoRequest) returns(UndoResponse)
}

@server(
	group: oral
	jwt: Auth
	signature: Auth
)
service mporal-api {
	@doc "个人口语测评报告"
	@handler oralReportHandler
	post /mporal/oral/report(OralReportRequest) returns(OralReportResponse)

	@doc "自己读展示数据"
	@handler myselfDataHandler
	get /mporal/myself/data() returns(MyselfDataResponse)

	@doc "自主练成果提交"
	@handler oralSaveHandler
	post /mporal/oral/save(OralSaveRequest) returns(OralSaveResponse)

	@doc "自主练成果列表"
	@handler oralListHandler
	post /mporal/oral/list(OralListRequest) returns(OralListResponse)

	@doc "个人作业成果删除"
	@handler oralDeleteHandler
	post /mporal/oral/delete(OralDeleteRequest) returns(OralDeleteResponse)

	@doc "更新成果署名"
	@handler updateDisNameHandler
	post /mporal/oral/new-disname(NewDisNameRequest) returns(SuccessfulResp)
}

@server(
	group: hanlin
	jwt: Auth
	signature: Auth
)
service mporal-api {
	@doc "获取翰林院筛选条件"
	@handler getBookFilterHandler
	get /mporal/hanlin/filter() returns(GetBookFilterResponse)

	@doc "根据筛选条件查找教材"
	@handler searchBookHandler
	post /mporal/hanlin/search/book(SearchBookRequest) returns(SearchBookResponse)

	@doc "更新最新使用的教材"
	@handler recordHandler
	post /mporal/hanlin/record(RecordRequest) returns(RecordResponse)

	@doc "根据bookId获取教材名称"
	@handler bookNameHandler
	get /mporal/hanlin/bookname/:bookId(BookNameRequest) returns(BookNameResponse)
}

@server(
	jwt: Auth
	signature: Auth
)
service mporal-api {
	@doc "报告解析"
	@handler resultParseHandler
	post /mporal/oral/result/parse(ResultParseRequest) returns(ResultParseResponse)

	@doc "体验评测"
	@handler experienceHandler
	post /mporal/experience/parse(ExperienceRequest) returns(ExperienceResponse)

	@doc "体验文章查询"
	@handler experienceArticleHandler
	get /mporal/experience/article() returns(ExperienceArticleResponse)

	@doc "根据身份获取作业列表"
	@handler roleListHandler
	post /mporal/role/homework/list(RoleListRequest) returns(RoleListResponse)

	@doc "是否显示复习资料包MVP"
	@handler showStripHandler
	get /mporal/showstrip() returns(ShowStripResponse)

	@doc "生成小程序码"
	@handler getwxacodeHandler
	post /mporal/getwxacode(GetwxacodeRequest) returns(GetwxacodeResponse)

	@doc "获取海报参数"
	@handler getPosterHandler
	get /mporal/poster/param/:userId(GetPosterRequest) returns(GetPosterResponse)

	@doc "获取书本下载地址"
	@handler getBookUrlHandler
	get /mporal/book/url/:bookId(GetBookUrlRequest) returns(GetBookUrlResponse)

	@doc "获取弹框展示"
	@handler getPopupsHandler
	get /mporal/recom/popups(PopupsReq) returns(PopusResp)

	@doc "文本敏感词校验"
	@handler msgSecurityCheck
	post /mporal/msg/security/check(MsgCheckRequest) returns(MsgCheckResponse)
}


@server(
	group: activity
	jwt: Auth
	signature: Auth
)

service mporal-api {
	@doc "获取当前活动列表"
	@handler getActivityHandler
	get /mporal/activity/list () returns (GetActivityListResp)

	@doc "获取闯关活动详情"
	@handler getMissionListHandler
	get /mporal/activity/missions (GetMissionsReq) returns (GetMissionsResp)

	@doc "获取个人总榜信息(冻结内容)"
	@handler getUserTotalRankHandler
	get /mporal/activity/user/total/rank (getUserTotalRankReq) returns (getUserTotalRankResp)

	@doc "获取活动总排行榜"
	@handler getActivityRankingsHandler
	get /mporal/activity/rankings (GetRankingsReq) returns (GetRankingsResp)

	@doc "获取用户全部排行榜战绩"
	@handler getUserRankingsDetailHandler
	get /mporal/activity/user/all-rankings/detail (GetUserRankingsDetailReq) returns (GetUserRankingsDetailResp)

	@doc "获取个人子榜信息(冻结内容)"
	@handler getUserMissionRankHandler
	get /mporal/activity/user/mission/rank (GetUserMissionRankReq) returns (GetUserMissionRankResp)

	@doc "获取单关排行榜"
	@handler getMissionRankingsHandler
	get /mporal/activity/mission/rankings (GetMissionRankingsReq) returns (GetMissionRankingsResp)

	@doc "活动成果点赞、取消赞"
	@handler activityResultLikeHandler
	post /mporal/activity/result/like (ActivityResultLikeReq) returns (SuccessfulResp)

	@doc "活动成果播放"
	@handler activityResultPlayHandler
	post /mporal/activity/result/play (ActivityResultPlayReq)

	@doc "提交活动成果"
	@handler saveActivityOralHandler
	post /mporal/activity/oral/save (SaveActivityOralReq) returns (SaveActivityOralResp)

	@doc "个人活动成果报告"
	@handler getActivityOralReportHandler
	get /mporal/activity/oral/report (ActivityOralReportReq) returns (ActivityOralReportResp)
}



type ActivityStatusReq {
	ActivityId string `json:"activityId"`
	Mission []int64 `json:"mission"`
	Status int64 `json:"status"` //1：上线  2：下线
}

type GetUserMissionDetailReq {
	Mission int64 `form:"mission"`
	ActivityId string `form:"activityId"`
	Rank int64 `form:"rank"`
}

type GetUserMissionDetailResp {
	Uid string `json:"uid"`
	Name string `json:"name"`
	ResultId string `json:"resultId"`
	Audios  []*Audio `json:"audios,omitempty"`
}

type DelUserMissionResultReq {
	Uid string `json:"uid"`
	ResultId string `json:"resultId"`
	Op  int `json:"op"` //1: 强制修改用户名称 2、强制清除用户榜单数据 3：强制修改用户名称和用户数据
}

@server(
	group : inter
)

service mporal-api {
	@doc "更新弹窗imgUrl"
	@handler updatePopupsHandler
	put /internal/mporal/recom/popups(UpdatePopupsReq) returns(SuccessfulResp)

	@doc "活动关卡状态修改"
	@handler UpdateActivityMissionHandler
	post /internal/mporal/activity/status (ActivityStatusReq) returns (SuccessfulResp)

	@doc "获取用户活动成果"
	@handler GetUserMissionDetailHandler
	get /internal/mporal/activity/mission/detail (GetUserMissionDetailReq) returns (GetUserMissionDetailResp)

	@doc "删除用户活动成果数据"
	@handler DelUserMissionResultHandler
	delete /internal/mporal/activity/mission (DelUserMissionResultReq) returns (SuccessfulResp)
}