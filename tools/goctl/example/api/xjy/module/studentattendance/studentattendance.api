info(
	title: 学生考勤
	desc: 学生考勤api
	author: huleiyu
	email: huleiyu@xiaoheiban.cn
)

type StatisticAllRequest {
	StartTime       int64  `json:"startTime"`              // 开始时间
	EndTime         int64  `json:"endTime"`                // 结束时间
	CampusGradeId   int64  `json:"campusGradeId,optional"` // 年级id
	ClassId         int64  `json:"classId,optional"`       // 班级id
	StatisticalType int64  `json:"statisticalType"`        // 统计类型；1-班级点名，2-课程点名
	StudentName     string `json:"studentName,optional"`   // 学生姓名搜索
	Page            int    `json:"page,default=1"`
	PageSize        int    `json:"pageSize,default=12"`
}

type StatisticsAllResponse {
	Count int           `json:"count"`
	List  []*Statistics `json:"list"`
}

type Statistics {
	CampusGradeName  string            `json:"campusGradeName"`  // 年级名
	ClassName        string            `json:"className"`        // 班级名
	StudentProfileId int64             `json:"studentProfileId"` // 学生id
	StudentName      string            `json:"studentName"`      // 学生姓名
	StudentCode      string            `json:"studentCode"`      // 学籍号
	Statistic        *StatisticsCircle `json:"statistic"`        // 应到、实到、未到、迟到、生病
}

type StatisticsCircleRequest {
	StartTime       int64  `json:"startTime"`              // 开始时间
	EndTime         int64  `json:"endTime"`                // 结束时间
	CampusGradeId   int64  `json:"campusGradeId,optional"` // 年级id
	ClassId         int64  `json:"classId,optional"`       // 班级id
	StatisticalType int64  `json:"statisticalType"`        // 统计类型；1-班级点名，2-课程点名
	StudentName     string `json:"studentName,optional"`   // 学生姓名搜索
}

type StatisticsCircleResponse {
	Statistic *StatisticsCircle `json:"statistic"` // 应到、实到、未到、迟到、生病。为nil时，说明筛选的数据为一个人不展示
}

type StatisticsCircle {
	ShouldArrived   int64 `json:"shouldArrived"`   // 应到
	ActuallyArrived int64 `json:"actuallyArrived"` // 实到
	NeverArrived    int64 `json:"neverArrived"`    // 未到
	BeLate          int64 `json:"beLate"`          // 迟到
	Sick            int64 `json:"sick"`            // 生病
}

@server(
	host:0.0.0
	port: 8080
)
service studentattendance-api {
	@doc(
		summary: 考勤统计列表
	)
	@server(
		handler: StatisticsAllHandler
	)
	post /studentattendance/statistics/all(StatisticAllRequest) returns(StatisticsAllResponse)
	
	@doc(
		summary: 考情情况数据
	)
	@server(
		handler: StatisticsCircleHandler
	)
	post /studentattendance/statistics/circle(StatisticsCircleRequest) returns(StatisticsCircleResponse)
}