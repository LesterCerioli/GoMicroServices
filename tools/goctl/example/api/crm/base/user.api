info(
	title: " CRM-USER"
	desc:  "这是联系人的API文档"
	version:  "1.0"
)

type LoginRequest {
	Username         string `json:"username"`
	VerificationCode string `json:"verificationCode,optional"`
	FingerPrint      string `json:"fingerPrint,optional"` //指纹，public key
}

type Tokens {
	AccessToken   string `json:"access_token"`   // Access token to access the apis
	AccessExpire  int64  `json:"access_expire"`  // Access token expire time, generated like: time.Now().Add(time.Day*14).Unix()
	RefreshToken  string `json:"refresh_token"`  // Refresh token, use this to refresh the token
	RefreshExpire int64  `json:"refresh_expire"` // Refresh token expire time, generated like: time.Now().Add(time.Month).Unix()
	RefreshAfter  int64  `json:"refresh_after"`  // Recommended time to refresh the access token
}

type LoginResponse {
	Uid            int64  `json:"uid"`
	UserName       string `json:"userName"`
	XhbToken       string `json:"xhbToken,omitempty"`
	Tokens         Tokens `json:"tokens"`
	ClientAuth     string `json:"clientAuth"`
	UserType       int64  `json:"userType"` // userType: 1：管理员；2：leader；3：普通培训师；4：普通督导；5. 其他用户（财务、法务等）
	InvitedCode    string `json:"invitedCode"`
	Phone          string `json:"phone"`
	Email          string `json:"email"`
	ProjectManager bool   `json:"projectManager"`
}

type XhbData {
	UserId string `json:"userId"`
	Avatar string `json:"avatar"`
}

type XhbLoginResponse {
	Code int     `json:"code"`
	Data XhbData `json:"data"`
	Desc string  `json:"desc"`
}

type RefreshTokenRequest {
	UserId int64 `json:"uid"`
}

type XhbUpdatePasswordResponse {
	Code int    `json:"code"`
	Desc string `json:"desc"`
}

type AliCloudAssumeRoleRequest {
	Expired int `json:"expired,optional"`
}

// 访问凭证
type Credential {
	Expiration      string `json:"expiration"`
	AccessKeyId     string `json:"accessKeyId"`
	AccessKeySecret string `json:"accessKeySecret"`
	SecurityToken   string `json:"securityToken"`
}

// 角色扮演临时身份
type AssumedRoleUser {
	Arn           string `json:"arn"`
	AssumedRoleId string `json:"assumedRoleId"`
}

type AliCloudAssumeRoleResponse {
	FileDirectorie  string           `json:"fileDirectorie"` // 文件目录
	Credential      *Credential      `json:"credentials"`
	AssumedRoleUser *AssumedRoleUser `json:"assumedRoleUser"`
}

type Activation {
	Username string `json:"username"`
}

type CenterUserView {
	UserId       int64  `json:"user_id"`
	UserName     string `json:"user_name"`
	WorkPosition string `json:"work_position"`
	Name         string `json:"name"`
	ParentName   string `json:"parentName"`
	Avatar       string `json:"avatar"`
	InvitedCode  string `json:"invited_code"`
}

type CenterResponse {
	ApplyCount   int             `json:"apply_count"`
	MessageCount int             `json:"message_count"`
	User         *CenterUserView `json:"user"`
}

type QueryUserByNameRequest {
	UserName string `form:"user_name,optional"`
}

type QueryUserByNameResponse {
	Users []*UserObj `json:"users"`
}

type UserObj {
	UId         int64  `json:"u_id"`
	UserName    string `json:"user_name"`
	MobilePhone string `json:"mobile_phone"`
}

type MenuAddRequest {
	Id       int64  `json:"id,optional"`
	MenuName string `json:"menuName"`
	ParentId int64  `json:"parentId"`
	OrderNum int64  `json:"orderNum,optional"`
	MenuUrl  string `json:"menuUrl,optional"`
	Comment  string `json:"comment,optional"`
	DelFlag  int64  `json:"delFlag,optional"`
}

type MenuAddResponse {
	Id int64 `json:"id"`
}

type MenuDeleteRequest {
	MenuId int64 `json:"menuId"`
}

type MenuFuncAddRequest {
	Id      int64  `json:"id,optional"`
	MenuId  int64  `json:"menuId"`
	Name    string `json:"name"`
	Remark  string `json:"remark,optional"`
	Comment string `json:"comment,optional"`
	DelFlag int64  `json:"delFlag,optional"`
}

type MenuFuncAddResponse {
	Id int64 `json:"id"`
}

type MenuFuncDeleteRequest {
	Id int64 `json:"id"`
}

type MenuDataAddRequest {
	Id      int64  `json:"id,optional"`
	MenuId  int64  `json:"menuId"`
	Name    string `json:"name"`
	Remark  string `json:"remark,optional"`
	Comment string `json:"comment,optional"`
	DelFlag int64  `json:"delFlag,optional"`
}

type MenuDataAddResponse {
	Id int64 `json:"id"`
}

type MenuDataDeleteRequest {
	Id int64 `json:"id"`
}

type MenuMoveRequest {
	Id        int64  `json:"id"`
	Direction string `json:"direction"` //"up":向上；"down":向下
}

type Menu {
	Id         int64  `json:"yt_m_id"`
	MenuName   string `json:"menu_name"`
	ParentId   int64  `json:"parent_id"`
	OrderNum   int64  `json:"order_num"`
	MenuUrl    string `json:"menu_url"`
	Comment    string `json:"comment"`
	DeleteFlag int64  `json:"del_flag"`
	CreateTime int64  `json:"create_time"`
	UpdateTime int64  `json:"update_time"`
}

type MenuView {
	*Menu
	ChildMenu []*MenuView `json:"child_menu,optional"`
}

type MenuViewResponse {
	Menus []*MenuView `json:"menus"`
}

type MenuObject {
	Id       int64         `json:"id"`
	MenuName string        `json:"menuName"`
	ParentId int64         `json:"parentId"`
	OrderNum int64         `json:"orderNum"`
	MenuUrl  string        `json:"menuUrl"`
	Function []string      `json:"function"`
	Data     []string      `json:"data"`
	Children []*MenuObject `json:"children"`
}

type MenuTreeRequest {
	RoleId int64 `json:"roleId"`
}

type MenuOpeTip {
	Id       int64  `json:"id"`
	MenuId   int64  `json:"menuId"`
	Name     string `json:"name"`
	Remark   string `json:"remark"`
	Comment  string `json:"comment"`
	Selected bool   `json:"selected"`
}

type MenuNode {
	Id       int64         `json:"id"`
	MenuName string        `json:"menuName"`
	ParentId int64         `json:"parentId"`
	MenuUrl  string        `json:"menuUrl"`
	Comment  string        `json:"comment"`
	Selected bool          `json:"selected"`
	Function []*MenuOpeTip `json:"function"`
	Data     []*MenuOpeTip `json:"data"`
	Children []*MenuNode   `json:"children"`
}

type MenuModuleResponse {
	List []*MenuObject `json:"list"`
}

type RoleAddEditRequest {
	Id        int64  `json:"id"`                 // 角色ID
	RoleName  string `json:"roleName"`           // 角色名称
	Comment   string `json:"comment,optional"`   // 备注
	CreatorId int64  `json:"creatorId,optional"` // 创建人ID,编辑时填写
	RoleAuth  string `json:"roleAuth"`           // 角色权限,(首页和个人中心必须选)
}

type RoleOperateAuth {
	Function []string `json:"function"`
	Data     []string `json:"data"`
}

type RoleDeleteRequest {
	Id int64 `json:"id"` // 角色ID
}

type RoleListRequest {
	PageSize int64 `json:"pageSize,optional,default=10"`
	NowPage  int64 `json:"nowPage,optional,default=1"`
}

type RoleListResponse {
	Count    int64                `json:"count"`
	List     []*RoleManageProfile `json:"list"`
	NowPage  int64                `json:"nowPage"`
	PageSize int64                `json:"pageSize"`
}

type RoleManageProfile {
	Id          int64  `json:"id"`
	RoleName    string `json:"roleName"`
	Comment     string `json:"comment"`
	RoleAuth    string `json:"roleAuth"`
	CreatorId   int64  `json:"creatorId"`
	CreatorName string `json:"creatorName"`
	UpdateTime  int64  `json:"updateTime"`
	DelFlag     string `json:"delFlag"`
}

type SubordinateRequest {
	FilterInviteCode    []string `json:"filter_invite_code,optional"`
	IncludeInviteCode   []string `json:"include_invite_code,optional"`
	LimitedStatus       string   `json:"limited_status,optional"`
	Name                string   `json:"name,optional"`
	FilterMySelf        bool     `json:"filter_my_self,optional"`
	TopMyself           bool     `json:"topMyself,optional"`
	TopMyselfDifference bool     `json:"topMyselfDifference,optional"`
	IncludeEmpty        bool     `json:"include_empty,optional"`
	IncludeParentId     bool     `json:"includeParentId,optional"`
	IncludeLeave        bool     `json:"includeLeave,optional"`
	OnlySubordinate     bool     `json:"onlySubordinate,optional"`
}
type SubordinateResponse {
	Users []*User `json:"users,omitempty"`
}
type User {
	InviteCode string `json:"invite_code"`
	Name       string `json:"name"`
	Uid        int64  `json:"uid"`
	ParentId   int64  `json:"parentId,omitempty"`
	LeaveTime  int64  `json:"leaveTime"`
}

type PositionRequest {
	YtDPId        int64  `json:"ytDpId"`
	WorkPosition  string `json:"workPosition"`  //职务
	PositionMark  string `json:"positionMark"`  //职务标示
	WorkLevel     int64  `json:"workLevel"`     //职级
	InvitedNumber string `json:"invitedNumber"` //邀请码
}
type Position {
	YtDPId        int64  `json:"ytDpId"`
	WorkPosition  string `json:"workPosition"`  //职务
	PositionMark  string `json:"positionMark"`  //职务标示
	WorkLevel     int64  `json:"workLevel"`     //职级
	InvitedNumber string `json:"invitedNumber"` //邀请码
	WorkMark      string `json:"workMark"`      //职务+标示拼接
}

type PositionResponse {
	Desc string `json:"desc"`
}

type DeleteAndDetailPositionRequest {
	Id int64 `json:"id"`
}

type StaffRequest {
	WorkCode        string 		 `json:"workCode,optional"`    	//知音楼员工号 ，暂时不必传。
	Uid          int64           `json:"uid,optional"`          //员工ID
	Avatar       string          `json:"avatar,optional"`       //头像
	UserName     string          `json:"userName,optional"`     //姓名
	MobilePhone  string          `json:"mobilePhone,optional"`  //手机
	EnglishName  string          `json:"englishName,optional"`  //英文名
	Sex          int             `json:"sex,optional"`          //性别
	SpecialPlane string          `json:"specialPlane,optional"` //座机
	Email        string          `json:"email,optional"`        //邮件
	CompanyId    int64           `json:"companyId,optional"`    //公司ID
	DepartmentId int64           `json:"departmentId,optional"` //部门ID
	ProvinceCity []*ProvinceCity `json:"provinceCity,optional"` //区域
	EntryTime    int64           `json:"entryTime,optional"`    //入职时间
	LeaveTime    int64           `json:"leaveTime,optional"`    //离职时间
	YtDPId       int64           `json:"ytDpId,optional"`       //职务ID
	ParentId     int64           `json:"parentId,optional"`     //上级ID
	UseFlag      int             `json:"useFlag,optional"`      //是否启用
	CodeFlag     int             `json:"codeFlag,optional"`     //是否生成邀请码
	InvitedCode  string          `json:"invitedCode,optional"`  //邀请码
	YtRMId       []int           `json:"ytRmId,optional"`       //角色ID
	AgentStatus  string          `json:"agentStatus,optional"`  //代理类型 Direct-直系代理，NotDirect-非直系代理
	IsAgent      int             `json:"isAgent,optional"`      //是否为代理1 是代理  0 不是代理
}

type StaffListRequest {
	Company    string `json:"company,optional"`    //公司名
	Department string `json:"department,optional"` //部门m
	Id         int64  `json:"id,optional"`         // 公司/部门ID
	Status     int    `json:"status,optional"`     //状态 1待启用，2已启用，3已冻结
	UserName   string `json:"user_name,optional"`  //员工名字
	Type       int64  `json:"type,optional"`       // 1 员工 2 团队
	Phone      string `json:"phone,optional"`      //手机号精确搜索
	NowPage    int    `json:"nowPage,optional,default=1"`
	PageSize   int    `json:"pageSize,optional,default=10"`
}

type StaffListResponse {
	Page       int         `json:"page"`
	AllPage    int         `json:"allPage"`
	Count      int         `json:"count"`
	ExportAuth bool        `json:"exportAuth"`
	Rows       []*UserInfo `json:"rows"`
}

type StaffExportResponse {
	Name string `json:"name"`
}

type UserInfo {
	Uid               int64                `json:"uid"`             //员工ID
	Avatar            string               `json:"avatar"`          //头像
	UserName          string               `json:"user_name"`       //姓名
	MobilePhone       string               `json:"mobile_phone"`    //手机
	EnglishName       string               `json:"english_name"`    //英文名
	Sex               int                  `json:"sex"`             //性别
	SpecialPlane      string               `json:"special_plane"`   //座机
	Email             string               `json:"email"`           //邮件
	CompanyInfo       []*CompanyInfo       `json:"company_info"`    //公司ID
	DepartmentInfo    []*CompanyInfo       `json:"department_info"` //部门ID
	ProvinceCity      []*ProvinceCity      `json:"province_city"`   //区域
	PositionLevel     []*PositionLevelInfo `json:"position_level"`  //职务职级
	EntryTime         int64                `json:"entry_time"`      //入职时间
	LeaveTime         int64                `json:"leave_time"`      //离职时间
	YtDPId            int64                `json:"yt_d_p_id"`       //职务ID
	ParentId          int64                `json:"parent_id"`       //上级ID
	UseFlag           int                  `json:"use_flag"`        //是否启用
	CodeFlag          int                  `json:"code_flag"`       //是否生成邀请码
	InvitedCode       string               `json:"invited_code"`    //邀请码
	YtRMId            []int                `json:"yt_r_m_id"`       //角色ID
	AgentStatus       string               `json:"agent_status"`    //代理类型 Direct-直系代理，NotDirect-非直系代理
	IsAgent           int                  `json:"isAgent"`         //是否为代理 1 是代理  0 不是代理
	ParentName        string               `json:"parentName"`
	ParentInvitedCode string               `json:"parentInvitedCode"`
	Status            int                  `json:"status"`
	ExportAuth        bool                 `json:"exportAuth"`
}

type CompanyInfo {
	YTCId         int64          `json:"yt_c_id"`
	CompanyFlag   int64          `json:"company_flag"`
	Name          string         `json:"name"`
	ParentId      int64          `json:"parent_id"`
	OrderNum      int64          `json:"order_num"`
	Level         int64          `json:"level"`
	StatisticsNum int64          `json:"statistics_num"`
	Children      []*CompanyInfo `json:"children"`
}

type PositionLevelInfo {
	YTDPId        int64  `json:"yt_d_p_id"`      //职位ID
	WorkPosition  string `json:"work_position"`  //职务
	PositionMark  string `json:"position_mark"`  //职务标示
	WorkLevel     int64  `json:"work_level"`     //职级
	InvitedNumber string `json:"invited_number"` //邀请码号段
	YtCId         int64  `json:"yt_c_id"`        //部门ID
}

type ProvinceCity {
	Province string `json:"province"`
	City     string `json:"city"`
}
type StaffSuperiorRequest {
	Type     int64  `json:"type,optional"`      //1公司，2部门，3职务，4职级,5上级
	YtCId    int64  `json:"yt_d_id,optional"`   //公司/部门Id
	Name     string `json:"name,optional"`      //公司，部门 搜索
	YtDId    int64  `json:"ytDId,optional"`     //职务职级id
	UserName string `json:"user_name,optional"` ////上级姓名搜索
	UId      int64  `json:"u_id,optional"`      //编辑用户要获取上级时必传（去除编辑用户）
}

type GetListByUsernameRequest {
	Username string `json:"username"`
}
type AddEditStaffResponse {
	Uid int64 `json:"uid"`
}

type DepartmentAddRequest {
	Id          int64  `json:"id,optional"`
	Name        string `json:"name"`
	CompanyFlag int64  `json:"companyFlag"` //1:公司；2:部门
	ParentId    int64  `json:"parentId"`
}

type DepartmentMoveRequest {
	Id        int64  `json:"id"`
	Direction string `json:"direction"` // "up":上移；"down":下移
}

type DepartmentTreeResponse {
	Id            int64                     `json:"id"`
	CompanyFlag   int64                     `json:"companyFlag"`
	Name          string                    `json:"name"`
	ParentId      int64                     `json:"parentId"`
	OrderNum      int64                     `json:"orderNum"`
	Level         int64                     `json:"level"`
	StatisticsNum string                    `json:"statisticsNum"`
	DelFlag       int64                     `json:"delFlag"`
	Children      []*DepartmentTreeResponse `json:"children"`
}

type GetManagerByUsernameRequest {
	Username string `json:"username,optional"`
}

type TeamUserRequest {
	UserId int64 `path:"userId"`
}

type UserDetailRequest {
	UserId int64 `json:"userId"`
}

type UserDetailResponse {
	UserProfile *UserProfile `json:"userProfile"`
	RoleInfos   []*RoleInfo  `json:"roleInfos"`
}

type RoleInfo {
	YtRMId   int64  `json:"ytrmId"`   // 角色ID
	RoleName string `json:"roleName"` // 角色名称
	DelFlag  string `json:"delFalg"`  // 删除标记
	Selected bool   `json:"selected"` // 是否选择
}

type UserProfile {
	Id             int64           `json:"id"`             // 用户ID（员工编号）
	Name           string          `json:"name"`           // 用户姓名
	EName          string          `json:"ename"`          // 英文名
	Avatar         string          `json:"avatar"`         // 用户头像
	Gender         int             `json:"gender"`         // 性别:1男，2女
	MobilePhone    string          `json:"mobilePhone"`    // 手机号
	TelPhone       string          `json:"telPhone"`       // 座机
	Email          string          `json:"email"`          // 邮箱
	CompanyId      int64           `json:"companyId"`      // 公司ID
	CompanyName    string          `json:"companyName"`    // 公司名称
	DepartmentId   int64           `json:"departmentId"`   // 部门ID
	DepartmentName string          `json:"departmentName"` // 部门名称
	ProvinceCity   []*ProvinceCity `json:"provinceCity"`   // 分管辖区
	EntryTime      int64           `json:"entryTime"`      // 入职日期
	LeaveTime      int64           `json:"leaveTime"`      // 离职日期
	YtDPId         int64           `json:"ytdpId"`         // 职务ID
	PositionId     int64           `json:"positionId"`     // 职务ID(代替YtDPId）
	PositionName   string          `json:"positionName"`   // 职务名称
	PositionLevel  int64           `json:"positionLevel"`  // 职级
	ParentId       int64           `json:"parentId"`       // 上级ID
	ParentTree     string          `json:"parentTree"`     // 上级树
	ParentName     string          `json:"superior"`       // 上级名
	InvitedCode    string          `json:"invitedCode"`    // 邀请码
	CodeFlag       int             `json:"codeFlag"`       // 0否 1生成邀请码
	UseFlag        int             `json:"useFlag"`        // 1已启用 0 待启用
	Status         int             `json:"status"`         // 1待启用，2已启用，3已冻结
	YtRMId         []int64         `json:"ytrmId"`         // 角色id
	RoleIds        []int64         `json:"roleId"`         //角色id （代替YtRMId）
	XhbUserToken   string          `json:"xhbUserToken"`   // 晓黑板用户token
	WorkCode       string          `json:"workCode"`    // 知音楼工号
	UpdateTime     int64           `json:"updateTime"`     // 更新时间
	CreateTime     int64           `json:"createTime"`     // 创建时间
}

type UserProfileResponse {
	Id           int64           `json:"id"`           // 用户ID（员工编号）
	Name         string          `json:"name"`         // 用户姓名
	EName        string          `json:"ename"`        // 英文名
	Avatar       string          `json:"avatar"`       // 用户头像
	Gender       int             `json:"gender"`       // 性别:1男，2女
	MobilePhone  string          `json:"mobilePhone"`  // 手机号
	TelPhone     string          `json:"telPhone"`     // 座机
	Email        string          `json:"email"`        // 邮箱
	Company      string          `json:"company"`      // 公司
	Department   string          `json:"department"`   // 部门
	ProvinceCity []*ProvinceCity `json:"provinceCity"` // 分管辖区
	EntryTime    int64           `json:"entryTime"`    // 入职日期
	LeaveTime    int64           `json:"leaveTime"`    // 离职日期
	Position     string          `json:"position"`     // 职务
	Level        int64           `json:"level"`        // 职级
	Superior     string          `json:"superior"`     // 上级
	InvitedCode  string          `json:"invitedCode"`  // 邀请码
}

type EditProfileRequest {
	Id       int64  `json:"id"`                // 用户ID（员工编号）
	Name     string `json:"name,optional"`     // 用户姓名
	EName    string `json:"ename,optional"`    // 英文名
	Gender   int    `json:"gender,optional"`   // 性别:1男，2女
	MobilePhone string `json:"mobilePhone,optional"` // 手机
	Email    string `json:"email,optional"`    // 邮箱
}

type SuperiorListRequest {
	DepartmentId int64 `json:"departmentId"`
	Level        int64 `json:"level"` //职级
}

type SuperiorListResponse {
	Id           int64  `json:"id"`           // 用户ID
	Name         string `json:"name"`         // 用户姓名
	DepartmentId int64  `json:"departmentId"` // 部门ID
	Level        int64  `json:"level"`        // 职级
}

type ChangeInvitedCodeRequest {
	InvitedCodes []string `json:"invitedCodes"`
}

type LoginActivationRequest {
	Mobile string `json:"mobile"`
}

type LoginActivationResponse {
	// 是否成功应答
	Successful bool   `json:"successful"`
	Code       string `json:"code"`
}
type ZYLCallBackRequest {
	Token 		string `form:"token"`
	Env 		string `form:"env"`
}
type ZYLLoginRequest {
	Token 		string `json:"token"`
}
type getZYLUserRequest {
	WorkCode string `path:"workCode"`
}
type zylUserResponse {
	Emplid 	string 	`json:"emplid"`
	Name 	string 	`json:"name"`
	Sex 	string 	`json:"sex"`
}

service user-api {
	@doc(
		summary: "生成验证码（登录）"
	)
	@server(
		handler: loginActivationHandler
	)
	post /user/loginActivation(LoginActivationRequest) returns(LoginActivationResponse)
	
	@doc(
		summary:  "验证码登录"
	)
	@server(
		handler: loginHandler
	)
	post /user/login(LoginRequest) returns(LoginResponse)
	
	@doc(
		summary: // 刷新token
	)
	@server(
		handler:refreshTokenHandler
	)
	post /user/refresh/token(RefreshTokenRequest) returns(Tokens)
	
	@doc(
		summary: // 获取阿里云临时身份授权
	)
	@server(
		handler: aliCloudAssumeRoleHandler
	)
	post /user/sign/alicloud/assumerole(AliCloudAssumeRoleRequest) returns(AliCloudAssumeRoleResponse)
	
	@doc(
		summary: // 获取阿里云临时身份授权(web)
	)
	@server(
		handler: aliCloudGetAssumeRoleHandler
	)
	get /user/sign/alicloud/assumerole(AliCloudAssumeRoleRequest) returns(AliCloudAssumeRoleResponse)
	
	@doc(
		summary: //
	)
	@server(
		handler: activationHandler
	)
	post /user/create/phone/activation(Activation)
	
	@doc(
		summary: "知音楼回调"
	)
	@server(
		handler: zhiyinlouCallBackHandler
	)
	get /user/zhiyinlou/callback(ZYLCallBackRequest)
	
	@doc(
		summary: "知音楼登陆"
	)
	@server(
		handler: zhiyinlouLoginHandler
	)
	post /user/zhiyinlou/login(ZYLLoginRequest)  returns(LoginResponse)
	
}

@server(
	jwt: Auth
)
service user-api {
	@doc(
		summary: // 用户中心
	)
	@server(
		handler: centerHandler
	)
	get /user/center() returns(CenterResponse)
	
	@doc(
		summary: // 查询用户
	)
	@server(
		handler: queryUserByNameHandler
	)
	get /user/query(QueryUserByNameRequest) returns(QueryUserByNameResponse)
	
	@doc(
		summary: // 新增/编辑菜单
	)
	@server(
		handler: addMenuHandler
	)
	post /user/menu/add(MenuAddRequest) returns(MenuAddResponse)
	
	@doc(
		summary: // 删除菜单
	)
	@server(
		handler: deleteMenuHandler
	)
	post /user/menu/delete(MenuDeleteRequest)
	
	@doc(
		summary: // 添加菜单功能权限
	)
	@server(
		handler: addMenuFuncHandler
	)
	post /user/menu/function/add(MenuFuncAddRequest) returns(MenuFuncAddResponse)
	
	@doc(
		summary: // 删除菜单功能权限
	)
	@server(
		handler: deleteMenuFuncHandler
	)
	post /user/menu/function/delete(MenuFuncDeleteRequest)
	
	@doc(
		summary: // 添加菜单数据权限
	)
	@server(
		handler: addMenuDataHandler
	)
	post /user/menu/data/add(MenuDataAddRequest) returns(MenuDataAddResponse)
	
	@doc(
		summary: // 移动菜单
	)
	@server(
		handler: moveMenuHandler
	)
	post /user/menu/move(MenuMoveRequest)
	
	@doc(
		summary: // 加载所有菜单
	)
	@server(
		handler: loadAllMenuHandler
	)
	get /user/menu/load-all() returns(MenuViewResponse)
	
	@doc(
		summary: // 权限管理
	)
	@server(
		handler: getPCMenuTreeHandler
	)
	post /user/pc/menu/tree(MenuTreeRequest) returns([]*MenuNode)
	
	@doc(
		summary: // PC端用户菜单列表
	)
	@server(
		handler: getPCMenuListHandler
	)
	get /user/pc/menu/list() returns(MenuModuleResponse)
	
	@doc(
		summary: // APP端用户菜单
	)
	@server(
		handler: getAppMenuListHandler
	)
	get /user/app/menu/list() returns(MenuModuleResponse)
	
	@doc(
		summary: // 添加/编辑角色
	)
	@server(
		handler: addEditRoleHandler
	)
	post /user/role/add(RoleAddEditRequest)
	
	@doc(
		summary: // 删除角色
	)
	@server(
		handler: deleteRoleHandler
	)
	post /user/role/delete(RoleDeleteRequest)
	
	@doc(
		summary: // 角色列表
	)
	@server(
		handler: roleListHandler
	)
	post /user/role/list(RoleListRequest) returns(RoleListResponse)
	
	@doc(
		summary: // 查询用户下级
	)
	@server(
		handler: subordinateHandler
	)
	post /user/subordinate(SubordinateRequest) returns(SubordinateResponse)
	
	@doc(
		summary: // 所有用户
	)
	@server(
		handler: allUserHandler
	)
	post /user/all-user(SubordinateRequest) returns(SubordinateResponse)
	
	@doc(
		summary: // 添加编辑职务
	)
	@server(
		handler: addEditPositionHandler
	)
	post /user/position/add-or-edit(PositionRequest) returns(PositionResponse)
	
	@doc(
		summary: // 删除职务
	)
	@server(
		handler: deletePositionHandler
	)
	post /user/position/delete(DeleteAndDetailPositionRequest) returns(PositionResponse)
	
	@doc(
		summary: // 职务列表
	)
	@server(
		handler: positionListHandler
	)
	get /user/position/list() returns([]*Position)
	
	@doc(
		summary: // 一统后台员工编辑
	)
	@server(
		handler: addEditStaffHandler
	)
	post /user/staff/add-or-edit(StaffRequest) returns(AddEditStaffResponse)
	
	@doc(
		summary: // 临时*督导转培训师
	)
	@server(
		handler: changeInvitedCode
	)
	post /user/staff/changeInvitedCode(ChangeInvitedCodeRequest)
	
	@doc(
		summary: // 一统后台员工列表
	)
	@server(
		handler: staffListHandler
	)
	post /user/staff/list(StaffListRequest) returns(StaffListResponse)
	
	@doc(
		summary: // 全部员工导出
	)
	@server(
		handler: staffExportHandler
	)
	post /user/staff/export() returns(StaffExportResponse)
	
	@doc(
		summary: // 新增部门
	)
	@server(
		handler: addDepartment
	)
	post /user/department/add(DepartmentAddRequest)
	
	@doc(
		summary: // 部门树
	)
	@server(
		handler: getDepartmentTree
	)
	get /user/department/tree() returns([]*DepartmentTreeResponse)
	
	@doc(
		summary: // 跟部门树一样，后续删除
	)
	@server(
		handler: getDepartmentTrees
	)
	get /user/staff/list-menu() returns([]*DepartmentTreeResponse)
	
	@doc(
		summary: // 上移/下移部门
	)
	@server(
		handler: moveDepartmentHandler
	)
	post /user/department/move(DepartmentMoveRequest)
	
	@doc(
		summary: // 姓名查询
	)
	@server(
		handler: getListByUsernameHandler
	)
	post /user/username(GetListByUsernameRequest) returns([]*User)
	
	@doc(
		summary: // 获取有下级用户的列表
	)
	@server(
		handler: getManagerByUsernameHandler
	)
	post /user/manager/list(GetManagerByUsernameRequest) returns([]*User)
	
	@doc(
		summary: // 获取团队成员
	)
	@server(
		handler: teamUserHandler
	)
	get /user/team-user/:userId(TeamUserRequest) returns(User)
	
	@doc(
		summary: // 获取用户详情
	)
	@server(
		handler: getUserDetailHandler
	)
	post /user/detail(UserDetailRequest) returns(UserDetailResponse)
	
	@doc(
		summary: // 获取用户详情
	)
	@server(
		handler: getUserProfileHandler
	)
	get /user/profile() returns(UserProfileResponse)
	
	@doc(
		summary: // 编辑用户详情
	)
	@server(
		handler: editMyProfileHandler
	)
	post /user/profile/edit(EditProfileRequest)
	
	@doc(
		summary: //拉取督导列表
	)
	@server(
		handler: getSuperiorListHandler
	)
	post /user/superior/list(SuperiorListRequest) returns([]*SuperiorListResponse)
	
	@doc(
		summary: "知音楼用户信息"
	)
	@server(
		handler: getZYLUserHandler
	)
	get /user/zhiyinlou/user/:workCode(getZYLUserRequest) returns(zylUserResponse)
}
