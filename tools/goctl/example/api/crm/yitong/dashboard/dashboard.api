info(
	title: dashboard
	desc: "dashboard for yitong
	goctl api go -api dashboard.api -dir ./
	goctl api format -dir ."
	author: yazhou
	email: yazhou@xiaoheiban.cn
)

type TimeRangeReq {
	StartDate string `json:"startDate"`
	EndDate   string `json:"endDate"`
	Myself    bool   `json:"myself,optional"` // 只看我自己
}

type VisualReq {
	StartDate string `json:"startDate"`
	EndDate   string `json:"endDate"`
	Aggregate string `json:"aggregate"`       // count 合同个数, sum 合同金额
	GroupBy   string `json:"groupBy"`         // truely_product 按项目，period_name 按学段, date 日期, month 按月
	Myself    bool   `json:"myself,optional"` // 只看我自己
}

type SubmitListReq {
	StartDate   string `json:"startDate"`
	EndDate     string `json:"endDate"`
	Page        int    `json:"page,optional"`        // 分页
	Limit       int    `json:"limit,optional"`       // 每页数量
	ProductName string `json:"productName,optional"` // 项目名称（中文名）
}

type UniversalRes {
	Entity []map[string]interface{} `json:"entity"`
}

type GeographicReq {
	StartDate string `json:"startDate"`
	EndDate   string `json:"endDate"`
	Province  string `json:"province,optional,default=none"`
	City      string `json:"city,optional,default=none"`
	District  string `json:"district,optional,default=none"`
	OrderBy   string `json:"orderBy"` // "cnt" 合同数,"amount" 金额, "payment" 回款
	Page      int    `json:"page"`    // 分页
	Limit     int    `json:"limit"`   // 每页数量
}

type PaymentReq {
	StartDate string `json:"startDate"`
	EndDate   string `json:"endDate"`
	Myself    bool   `json:"myself"` // 只看我自己
	From      string `json:"from"`
	Search    string `json:"search"`
	Page      int    `json:"page"`
	PageSize  int    `json:"pageSize"`
	OrderBy   string `json:"orderBy,optional"`
}

type PaymentRes {
	Entity []map[string]interface{} `json:"entity"`
	Total  map[string]interface{}   `json:"total"`
}

type DownloadReq {
	StartDate string `json:"startDate"`
	EndDate   string `json:"endDate"`
	Myself    bool   `json:"myself"` // 只看我自己
	From      string `json:"from"`
	Tab       string `json:"tab"`
	Search    string `json:"search"`
}

type DownloadRes {
	Link string `json:"link"`
}

type PersonSignRankRequest {
	DateSearch string `json:"dateSearch"`
	UserType   string `json:"userType,default='ALL'"` // ALL:所有 TEAM:我&我的团队 MYSELF:我自己
	OrderBy    string `json:"orderBy"`                // PAYMENT: 按实收回款倒序 ACHIEVEMENT:按签单业绩倒序 SIGN_COUNT:按签单个数倒序
}

type PersonSignRankResponse {
	SignRankData []*SignRankData `json:"signRankData"`
}

type SignRankData {
	Uid               int64  `json:"uid"`               // uid
	Rank              int64  `json:"rank"`              // 排名
	UserName          string `json:"userName"`          // 用户名
	Avatar            string `json:"avatar"`            // 头像
	InvitedCode       string `json:"invitedCode"`       // 邀请码
	SignCount         int64  `json:"signCount"`         // 签单量
	AchievementAmount int64  `json:"achievementAmount"` // 签单业绩
	PaymentAmount     int64  `json:"paymentAmount"`     // 回款金额
	IsLeave           int64  `json:"isLeave"`           // 是否离职
	IsTeam            int64  `json:"isTeam"`            // 是否带对
	IsView            bool   `json:"isView"`            // 是否有权限
}

type TeamSignRankRequest {
	DateSearch string `json:"dateSearch"`     // 日期,日格式（20190101），月(201901)，季度（2019-01），年（2019）
	Uid        int64  `json:"uid,default=57"` // 团队负责人ID
	OrderBy    string `json:"orderBy"`        // PAYMENT: 按实收回款倒序 SIGN:按签单业绩倒序 SIGN_COUNT:按签单个数倒序
}

type TeamSignRankResponse {
	TeamData    []*SignRankData `json:"teamData"`
	PersonData  []*SignRankData `json:"personData"`
	CurrentData []*SignRankData `json:"currentData"`
}

type PersonCampusRankRequest {
	DateSearch string `json:"dateSearch"`
	UserType   string `json:"userType,default='ALL'"` // ALL:所有 TEAM:我&我的团队 MYSELF:我自己
	OrderBy    string `json:"orderBy"`                // CAMPUS: 按整校数倒序 REACHED:按达标数倒序 ACTIVE: 按活跃数倒序；HEALTHY:按健康数倒序
}

type PersonCampusRankResponse {
	CampusRankData []*CampusRankData `json:"campusRankData"`
}

type PersonCampusRankDetailRequest {
	UserId     int64  `json:"userId"`     // 用户ID
	DateSearch string `json:"dateSearch"` // 时段
	All        bool   `json:"all"`        // 全部
	Reached    int64  `json:"reached"`    // 是否达标:0：未选中；1：达标；2：不达标
	Active     int64  `json:"active"`     // 是否活跃：0：未选中；1：活跃；2：不活跃
	Page       int64  `json:"page"`       // 第几页
	PageSize   int64  `json:"pageSize"`   // 页面大小
}

type PersonCampusRankDetailResponse {
	List     []*CampusDetailObj `json:"list"`     // 详情列表
	Page     int64              `json:"page"`     // 第几页
	PageSize int64              `json:"pageSize"` // 页面大小
}

type CampusDetailObj {
	CampusId    int64   `json:"campusId"`    // 学校ID
	CampusName  string  `json:"campusName"`  // 学校姓名
	ReachedRate float32 `json:"reachedRate"` // 激活率
	ActiveRate  float32 `json:"activeRate"`  // 日均启动率
	CanSkip     bool    `json:"canSkip"`     // 是否可跳转
}

type CampusRankData {
	Uid          int64  `json:"uid"`          // uid
	Rank         int64  `json:"rank"`         // 排名
	UserName     string `json:"userName"`     // 用户名
	Avatar       string `json:"avatar"`       // 头像
	InvitedCode  string `json:"invitedCode"`  // 邀请码
	NumXjyCampus int64  `json:"numXjyCampus"` // 整校数
	NumReached   int64  `json:"numReached"`   // 达标数
	NumActive    int64  `json:"numActive"`    // 活跃数
	NumHealthy   int64  `json:"numHealthy"`   // 健康数
	IsLeave      int64  `json:"isLeave"`      // 是否离职
	IsTeam       int64  `json:"isTeam"`       // 是否带队
	IsView       bool   `json:"isView"`       // 是否有权限
}

type TeamCampusRankRequest {
	DateSearch string `json:"dateSearch"`     // 日期,日格式（20190101），月(201901)，季度（2019-01），年（2019）
	Uid        int64  `json:"uid,default=57"` // 团队负责人ID
	OrderBy    string `json:"orderBy"`        // CAMPUS: 按整校数倒序 REACHED:按达标数倒序 ACTIVE: 按活跃数倒序；HEALTHY:按健康数倒序
}

type TeamCampusRankResponse {
	TeamData    []*CampusRankData `json:"teamData"`    // 主管
	PersonData  []*CampusRankData `json:"personData"`  // 非主管
	CurrentData []*CampusRankData `json:"currentData"` // 我的
}

type XjyCampusStatResponse {
	NumXjyCampus int64 `json:"numXjyCampus"` // 整校数
	NumReached   int64 `json:"numReached"`   // 达标数
	NumActive    int64 `json:"numActive"`    // 活跃数
	NumHealthy   int64 `json:"numHealthy"`   // 健康数
}

type UserStatRequest {
	StartDate string `json:"startDate"` // 开始日期
	EndDate   string `json:"endDate"`   // 结束日期
}

type UserStatResponse {
	NumNew      int64 `json:"numNew"`      // 新增用户
	NumActive   int64 `json:"numActive"`   // 激活用户
	NumStartUp  int64 `json:"numStartUp"`  // 启动用户
	NumRegistry int64 `json:"numRegistry"` // 累计注册用户
}

type DeploymentListRequest {
	StartDate string `json:"startDate"`       // 开始日期
	EndDate   string `json:"endDate"`         // 结束日期
	Type      int    `json:"status"`          // 列表类型 1、未部署 2、已部署  3、开始使用
	Myself    bool   `json:"myself,optional"` // 只看我自己
	Page      int    `json:"page,optional,default=1"`
	PageSize  int    `json:"pageSize,optional,default=20"`
}

type DeploymentListResponse {
	DeployId       int64  `json:"deployId"`       // 自增id
	ContractId     int64  `json:"contractId"`     // 合同id
	CampusId       int64  `json:"campusId"`       // 校方id
	CampusName     string `json:"campusName"`     // 校方名称
	ProductId      int64  `json:"productId"`      // 产品id
	ProductName    string `json:"productName"`    // 产品名称
	ContactId      int64  `json:"contactId"`      // 联系人
	ContactName    string `json:"contactName"`    // 联系人姓名
	ContactPhone   string `json:"contactPhone"`   // 联系人电话
	SupervisorId   int64  `json:"supervisorId"`   // 督导id
	SupervisorName string `json:"supervisorName"` // 督 导id
	TrainerId      int64  `json:"trainerId"`      // 培训师 id
	TrainerName    string `json:"trainerName"`    // 培训师 id
	Remark         string `json:"remark"`         // 备注
	Status         int    `json:"status"`         // 状态 1、等待部署 2、开始部署 3、部署完成
	DeployTime     int64  `json:"deployTime"`     // 部署时间
	CompleteTime   int64  `json:"completeTime"`   // 部署完成时间
	UseTime        int64  `json:"useTime"`        // 使用时间
}

type AchievementReq {
	StartDate string `json:"startDate"`
	EndDate   string `json:"endDate"`
	Myself    bool   `json:"myself,optional"`            // 只看自己
	UserId    int64  `json:"userId,optional,range=[0:]"` // 需要查看的用户id
}

@server(
	host: 0.0.0.0
	port: 12345
	jwt: Auth
	timeout:10000
)
service dashboard-api {
	@doc(
		summary: 回款
	)
	@server(
		handler: Payment
	)
	post /dashboard/payment(TimeRangeReq) returns(UniversalRes)
	
	@doc(
		summary: 提交可视化
	)
	@server(
		handler: SubmitVisualize
	)
	post /dashboard/submit/visualize(VisualReq) returns(UniversalRes)
	
	@doc(
		summary: 签单可视化
	)
	@server(
		handler: SignVisualize
	)
	post /dashboard/sign/visualize(VisualReq) returns(UniversalRes)
	
	@doc(
		summary: 提交合同
	)
	@server(
		handler: Submit
	)
	post /dashboard/submit(TimeRangeReq) returns(UniversalRes)
	
	@doc(
		summary: 提交合同&提交金额 详情列表
	)
	@server(
		handler: SubmitList
	)
	post /dashboard/submit/list(TimeRangeReq) returns(UniversalRes)
	
	@doc(
		summary: 签单合同
	)
	@server(
		handler: Sign
	)
	post /dashboard/sign(TimeRangeReq) returns(UniversalRes)
	
	@doc(
		summary: 签单项目
	)
	@server(
		handler: SignProjects
	)
	post /dashboard/sign-projects(TimeRangeReq) returns(UniversalRes)
	
	@doc(
		summary: 签单合同数列表
	)
	@server(
		handler: SignContractDetail
	)
	post /dashboard/sign/contract-details(TimeRangeReq) returns(UniversalRes)
	
	@doc(
		summary: 签单项目列表
	)
	@server(
		handler: SignProductDetail
	)
	post /dashboard/sign/product-details(TimeRangeReq) returns(UniversalRes)
	
	@doc(
		summary: 业绩
	)
	@server(
		handler: Achievement
	)
	post /dashboard/achievement(TimeRangeReq) returns(UniversalRes)
	
	@doc(
		summary: 签单金额 新增列表
	)
	@server(
		handler: AchievementNewIncome
	)
	post /dashboard/achievement/newIncome(AchievementReq) returns(UniversalRes)
	
	@doc(
		summary: 业绩扣除列表
	)
	@server(
		handler: AchievementDeduction
	)
	post /dashboard/achievement/deduction(AchievementReq) returns(UniversalRes)
	
	@doc(
		summary: 地理分布
	)
	@server(
		handler: Geographic
	)
	post /dashboard/geographic(GeographicReq) returns(UniversalRes)
	
	@doc(
		summary: 项目部署
	)
	@server(
		handler: Deployment
	)
	post /dashboard/deployment(TimeRangeReq) returns(UniversalRes)
	
	@doc(
		summary: 部署项目列表
	)
	@server(
		handler: DeploymentList
	)
	post /dashboard/deployment/list(DeploymentListRequest) returns(UniversalRes)
	
	@doc(
		summary: 拜访
	)
	@server(
		handler: Visit
	)
	post /dashboard/visit(TimeRangeReq) returns(UniversalRes)
	
	@doc(
		summary: 回款-已收
	)
	@server(
		handler: Paid
	)
	post /dashboard/payment/paid(PaymentReq) returns(PaymentRes)
	
	@doc(
		summary: 回款-待收
	)
	@server(
		handler: Yet
	)
	post /dashboard/payment/yet(PaymentReq) returns(PaymentRes)
	
	@doc(
		summary: 回款-全部
	)
	@server(
		handler: Payable
	)
	post /dashboard/payment/payable(PaymentReq) returns(PaymentRes)
	
	@doc(
		summary: 回款-下载
	)
	@server(
		handler: Pdownload
	)
	post /dashboard/payment/download(DownloadReq) returns(DownloadRes)
	
	@doc(
		summary: 个人排行榜-签单榜
	)
	@server(
		handler: PersonSignRank
	)
	post /dashboard/person-sign-rank(PersonSignRankRequest) returns(PersonSignRankResponse)
	
	@doc(
		summary: 团队排行榜-签单榜
	)
	@server(
		handler: TeamSignRank
	)
	post /dashboard/team-sign-rank(TeamSignRankRequest) returns(TeamSignRankResponse)
	
	@doc(
		summary: 个人排行榜-整校榜
	)
	@server(
		handler: PersonCampusRank
	)
	post /dashboard/person-campus-rank(PersonCampusRankRequest) returns(PersonCampusRankResponse)
	
	@doc(
		summary: 个人排行榜-整校榜-单用户详情
	)
	@server(
		handler: PersonCampusRankDetail
	)
	post /dashboard/person-campus-rank/detail(PersonCampusRankDetailRequest) returns(PersonCampusRankDetailResponse)
	
	@doc(
		summary: 团队排行榜-整校榜
	)
	@server(
		handler: TeamCampusRank
	)
	post /dashboard/team-campus-rank() returns(TeamCampusRankResponse)
	
	@doc(
		summary: 首页-整校信息
	)
	@server(
		handler: XjyCampusStat
	)
	get /dashboard/xjy-campus/statistic() returns(XjyCampusStatResponse)
	
	@doc(
		summary: 首页-用户信息
	)
	@server(
		handler: UserStat
	)
	post /dashboard/user/statistic(UserStatRequest) returns(UserStatResponse)
}