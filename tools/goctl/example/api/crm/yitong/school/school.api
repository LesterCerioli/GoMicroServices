info(
	title: school-api
	desc: "goctl api go -api school.api -dir ./
	goctl api format -dir .
	这是school的API文档"
	version: 1.0
)

type GetCompetitionListResponse {
	Id   int64  `json:"id"`   // 竞品id
	Name string `json:"name"` // 竞品名称
}

type AddCompetitionRequest {
	CompetitionName string `json:"competitionName"`
}

type Intention {
	Id            int64  `json:"id,optional"`
	VisitId       int64  `json:"visitId,optional"`
	TruelyProduct string `json:"truelyProduct,optional"`
	ProductName   string `json:"productName,optional"`
	Intention     string `json:"intention,optional"`
}

type Competition {
	Id   int64  `json:"id"`   // 竞品ID
	Name string `json:"name"` // 竞品名称
}

type VisitAddRequest {
	Id               int64          `json:"id,optional"`              // 拜访记录ID
	CampusId         int64          `json:"campusId"`                 // 客户ID
	CampusName       string         `json:"campusName"`               // 客户姓名
	ContactId        int64          `json:"contactId,optional"`       // 联系人ID
	ContactName      string         `json:"contactName,optional"`     // 联系人姓名
	ContactPost      string         `json:"contactPost,optional"`     // 联系人职务
	VisitorId        int64          `json:"visitorId"`                // 拜访人ID
	VisitorType      string         `json:"visitorType"`              // 拜访人身份类型：培训师、督导
	VisitPurpose     string         `json:"visitPurpose"`             // 拜访目的
	PrimaryIntention string         `json:"primaryIntention"`         // 总意向
	Intentions       []*Intention   `json:"intentions,optional"`      // 项目意向
	Description      string         `json:"description"`              // 本次拜访记录
	VisitStartTime   int64          `json:"visitStartTime"`           // 本次拜访开始时间
	VisitEndTime     int64          `json:"visitEndTime"`             // 本次拜访结束时间
	NextVisitTime    int64          `json:"nextVisitTime,optional"`   // 下次拜访时间
	NextVisitRemark  string         `json:"nextVisitRemark,optional"` // 下次拜访备注
	Competitions     []*Competition `json:"competitions,optional"`    // 竞品
}

type VisitDetailRequest {
	VisitId int64 `path:"visitId"` // 拜访记录ID
}

type VisitDetailResponse {
	Id               int64          `json:"id,optional"`              // 拜访记录ID
	CampusId         int64          `json:"campusId"`                 // 客户ID
	CampusName       string         `json:"campusName"`               // 客户姓名
	ContactId        int64          `json:"contactId,optional"`       // 联系人ID
	ContactName      string         `json:"contactName,optional"`     // 联系人姓名
	ContactPost      string         `json:"contactPost,optional"`     // 联系人职务
	VisitorId        int64          `json:"visitorId"`                // 拜访人ID
	VisitorType      string         `json:"visitorType"`              // 拜访人身份类型：培训师、督导
	VisitPurpose     string         `json:"visitPurpose"`             // 拜访目的
	PrimaryIntention string         `json:"primaryIntention"`         // 总意向
	Intentions       []*Intention   `json:"intentions,optional"`      // 项目意向
	Description      string         `json:"description"`              // 本次拜访记录
	VisitStartTime   int64          `json:"visitStartTime"`           // 本次拜访开始时间
	VisitEndTime     int64          `json:"visitEndTime"`             // 本次拜访结束时间
	NextVisitTime    int64          `json:"nextVisitTime,optional"`   // 下次拜访时间
	NextVisitRemark  string         `json:"nextVisitRemark,optional"` // 下次拜访备注
	Competitions     []*Competition `json:"competitions,optional"`    // 竞品
}

type VisitGetListRequest {
	CampusId          int64    `json:"campusId,optional"`          // 客户ID
	UserType          int64    `json:"userType,optional"`          // 拜访人（0：不限；1：我及我下级；2：我自己）
	VisitorType       string   `json:"visitorType,optional"`       // 拜访人类型 （""：不限；"TRAINER":培训师；"SUPERVISOR": 督导）
	VisitPurposes     []string `json:"visitPurposes,optional"`     // 客户目的,多选()
	PrimaryIntentions []string `json:"primaryIntentions,optional"` // 客户总意向，多选 （"A类意向", "B类意向", "C类意向", "D类意向"）
	StartTime         int64    `json:"startTime,optional"`         // 开始时间，秒级
	EndTime           int64    `json:"endTime,optional"`           // 结束时间，秒级
	NextStartTime     int64    `json:"nextStartTime,optional"`     // 开始时间，秒级
	NextEndTime       int64    `json:"nextEndTime,optional"`       // 结束时间，秒级
	SearchKey         string   `json:"searchKey,optional"`         // 搜索关键词汇
	Page              int64    `json:"page,optional,default=1"`
	PageSize          int64    `json:"pageSize,optional,default=12"`
}

type CustomerDetailDataRequest {
	CampusId int64 `json:"campusId"`
}

type CustomerDetailDataResponse {
	SchoolName            string `json:"schoolName"`            // 学校名称1
	TrainerName           string `json:"trainerName"`           // 培训师
	SupervisorName        string `json:"supervisorName"`        // 督导
	StudentsNumber        int64  `json:"studentsNumber"`        // 学生人数
	TeacherNumber         int64  `json:"teacherNumber"`         // 教职工人数
	ClassNumber           int64  `json:"classNumber"`           // 一共有多少班级
	ReachedRate           string `json:"reachedRate"`           // 激活率
	IsFollowing           bool   `json:"isFollowing"`           // 是否跟进人/在跟进
	TodayActiveNumTillNow int64  `json:"todayActiveNumTillNow"` // 今日启动
}

type CustomerVisitItem {
	Id               int64        `json:"id,optional"`              // 拜访记录ID
	CampusId         int64        `json:"campusId"`                 // 客户(学校)ID
	CampusName       string       `json:"campusName"`               // 客户(学校)姓名
	Sequence         int64        `json:"sequence"`                 // 次序，第几次拜访
	Date             int64        `json:"date"`                     // 拜访日期
	VisitPurpose     string       `json:"visitPurpose"`             // 拜访目的
	ContactId        int64        `json:"contactId,optional"`       // 联系人ID
	ContactName      string       `json:"contactName,optional"`     // 联系人姓名
	ContactPost      string       `json:"contactPost,optional"`     // 联系人职务
	VisitorId        int64        `json:"visitorId"`                // 拜访人ID
	VisitorType      string       `json:"visitorType"`              // 拜访人身份类型：培训师、督导
	PrimaryIntention string       `json:"primaryIntention"`         // 总意向
	Intentions       []*Intention `json:"intentions,optional"`      // 项目意向
	Description      string       `json:"description"`              // 本次拜访记录
	NextVisitTime    int64        `json:"nextVisitTime,optional"`   // 下次拜访时间
	NextVisitRemark  string       `json:"nextVisitRemark,optional"` // 下次拜访备注
}

type VisitGetListResponse {
	Count int64                `json:"count"`
	List  []*CustomerVisitItem `json:"list"`
	Page  int64                `json:"page"`
}

type CustomerAddRequest {
	Id             int      `json:"Id,optional"`
	SchoolId       int64    `json:"schoolId,optional"`
	CampusId       int64    `json:"campusId,optional"`
	CampusName     string   `json:"campusName"`
	NickName       string   `json:"nickName,optional"`
	SnapshotId     int      `json:"SnapshotId,optional"`    // 快照ID
	CampusManager  string   `json:"campusManager,optional"` // 校长
	Province       string   `json:"province,optional"`
	City           string   `json:"city,optional"`
	District       string   `json:"district,optional"`
	Address        string   `json:"address,optional"`
	SchoolType     string   `json:"schoolType,optional"`          // 客户类型：'','学校','培训机构','教育局及主管机关
	SchoolProperty string   `json:"schoolProperty,optional"`      // 客户性质：'','公办','民办','私立'
	PeriodId       int64    `json:"periodId,optional"`            // 学段ID
	PeriodName     string   `json:"periodName,optional"`          // 学段名称
	Longitude      float32  `json:"longitude,omitempty,optional"` // 经度
	Latitude       float32  `json:"latitude,omitempty,optional"`  // 纬度
	Pictures       []string `json:"pictures,optional"`            // 图片
}

type DepartmentListRequest {
	CampusId int64 `json:"campusId"` // 学校ID
}

type TeacherItem {
	DepartmentId int64    `json:"departmentId"`
	TeacherName  string   `json:"teacherName"`
	BindTime     string   `json:"bindTime"`
	SubjectList  []string `json:"subjectList"`
}

type DepartmentListResponse {
	TeacherList  []*TeacherItem `json:"teacherList"`
	Department   string         `json:"department"`
	TeacherCount int64          `json:"teacherCount"`
	ScanCount    int64          `json:"scanCount"`
}

type ClassInfoNew {
	ClassName      string `json:"className"`
	XhbClassToken  string `json:"xhbClassToken"`
	ClassId        int64  `json:"classId"`
	SchoolGradeId  int64  `json:"gradeId"`
	BindTime       int    `json:"bindTime"`
	BindTimeString string `json:"bindTimeString"`
	Avatar         string `json:"avatar"`
	TeacherName    string `json:"teacherName"`
	MemberCount    int    `json:"memberCount"`
	Code           string `json:"code"`
	JoinNum        int    `json:"joinNum"`
	ActivationNum  int    `json:"activationNum"`
	StartNum       int    `json:"startNum"`
}

type GradeInfoNew {
	CampusGradeId int64           `json:"campusGradeId"`
	AliasName     string          `json:"aliasName"`
	GradeName     string          `json:"gradeName"`
	CampusId      int64           `json:"campusId"`
	GradeId       int64           `json:"gradeId"`
	OrderBy       int             `json:"orderBy"`
	ClassList     []*ClassInfoNew `json:"classList"`
}

type SchoolInfoNew {
	CampusId       int64  `json:"campusId"`
	Address        string `json:"address"`
	TeacherNum     int    `json:"teacherNum"`
	CampusNum      int    `json:"campusNum"`
	ScanMemberNum  int    `json:"scanMemberNum"`
	ArcTeacher     int    `json:"arcTeacher"`
	ScanTeacher    int    `json:"scanTeacher"`
	AllActNum      int    `json:"allActivationNum"`
	ComplianceRate string `json:"complianceRate"`
	CampusPercent  string `json:"campusPercent"`
}

type ClassListRequest {
	CampusId int64 `json:"campusId"`
}

type ClassListResponse {
	School    SchoolInfoNew   `json:"campusInfo"`
	GradeList []*GradeInfoNew `json:"classList"`
}

type MemberListRequest {
	ClassId       int64  `json:"classId"`
	XhbClassToken string `json:"xhbClassToken"`
}

type MemberListResponse {
	TeacherList []*SchoolTeacherItem `json:"teacherList"`
	ParentList  []*ParentItem        `json:"parentList"`
}

type SchoolTeacherItem {
	TeacherId      int64  `json:"teacherId"`
	XhbUserToken   string `json:"xhbUserToken"`
	Avatar         string `json:"avatar"`
	BindTimeUnix   int64  `json:"bindTime"`
	BindTime       string `json:"bindTimeStr"`
	TeacherType    string `json:"teacherType"`
	SubjectName    string `json:"subjectName"`
	TeacherName    string `json:"teacherName"`
	InvitedTime    string `json:"invitedTime"`
	ActivationTime string `json:"activationTime"`
	IsActivation   string `json:"isActivation"`
	IsInvited      string `json:"isInvited"` //邀请人是否为自己 1 0
	UserId         string `json:"userId"`
	ClassroomId    string `json:"classroomId"` //班级id
	NoticeSum      int64  `json:"noticeSum"`   //30天内老师在该班级累积的通知数量
	CardSum        int64  `json:"cardSum"`     //30天内老师在该班级累积的打卡数量
	TopicSum       int64  `json:"topicSum"`    //30天内老师在该班级累积的讨论数量
	SurveySum      int64  `json:"surveySum"`   //30天内老师在该班级累积的调查数量
	ActivitySum    int64  `json:"activitySum"` //30天内老师在该班级累积的活动数量
	DayCount       int64  `json:"dayCount"`    //30天内老师在该班级的活跃天数
}

type ParentItem {
	Id           string `json:"id,omitempty"`
	ClassroomId  string `json:"classroomId,omitempty"`
	UserId       string `json:"userId,omitempty"`
	Alias        string `json:"alias,omitempty"`
	Role         string `json:"role,omitempty"`
	Subject      string `json:"subject,omitempty"`
	ChildName    string `json:"childName,omitempty"`
	Relationship string `json:"relationship,omitempty"`
	IsActivated  bool   `json:"isActivated,omitempty"`
}

@server(
	host: 0.0.0.0
	port: 2019
)
service school-api {
	@doc(
		summary: 获取竞品列表
	)
	@server(
		handler: GetCompetitionList
	)
	get /customer/competition/list() returns(GetCompetitionListResponse)
	
	@doc(
		summary: 增加竞品
	)
	@server(
		handler: AddCompetition
	)
	post /customer/competition/add(AddCompetitionRequest)
	
	@doc(
		summary: 客户详情页抬头
	)
	@server(
		handler: CustomerDetailData
	)
	post /customer/detail/data(CustomerDetailDataRequest) returns(CustomerDetailDataResponse)
	
	@doc(
		summary: 创建/编辑拜访记录
	)
	@server(
		handler: AddVisit
	)
	post /customer/visit/add(VisitAddRequest)
	
	@doc(
		summary: 查看拜访记录详情
	)
	@server(
		handler: VisitDetail
	)
	get /customer/visit/detail/:visitId(VisitDetailRequest) returns(VisitDetailResponse)
	
	@doc(
		summary: 条件查询拜访记录
	)
	@server(
		handler: GetVisitList
	)
	post /customer/visit/list(VisitGetListRequest) returns(VisitGetListResponse)
	
	@doc(
		summary: 新增客户
	)
	@server(
		handler: AddCustomer
	)
	post /customer/add(CustomerAddRequest)
	
	@doc(
		summary: 客户-办公室架构
	)
	@server(
		handler: SchoolDepartmentList
	)
	post /customer/arch/department/list(CustomerAddRequest)
	
	@doc(
		summary: 客户-班级架构
	)
	@server(
		handler: SchoolClassList
	)
	post /customer/arch/class/list(ClassListRequest) returns(ClassListResponse)
	
	@doc(
		summary: 客户-班级架构-成员列表
	)
	@server(
		handler: ClassMemberList
	)
	post /customer/class/member/list(MemberListRequest) returns(MemberListResponse)
}