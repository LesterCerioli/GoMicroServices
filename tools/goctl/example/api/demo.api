syntax = "v1"

import "base.api"

// The base user info.
type UserBase {
	ID       string            `json:"id"` // The user id.
	Name     string            `json:"name"`
	Nickname string            `json:"nickname"`
	Habbits  []string          `json:"habbits"`
	Extra    map[string]string `json:"extra"` // The user extra info.
}

type LoginRequest {
	Username string `json:"username"`
	Password string `json:"password"`
}

type LoginResponse {
	Base
	UserBase
	ExpireToken string `json:"expire_token"`
	ExpiresAt   string `json:"expires_at"` // The token expires at.
	//    Data {
	//        UserBase
	//        ExpireToken string `json:"expire_token"`
	//        ExpiresAt string `json:"expires_at"` // The token expires at.
	//    } `json:"data"`
}

type GetUserInfoRequest {
	ID string `path:"id"`
}

type GetUserInfoResponse {
	Base
	Data *UserBase `json:"data"`
}

type (
	ModifyUserInfoRequest {
		ID       string            `path:"id"`
		Name     string            `json:"name"`
		Nickname string            `json:"nickname"`
		Habbits  []string          `json:"habbits"`
		Extra    map[string]string `json:"extra"`
	}
	ModifyUserInfoResponse {
		Base
	}
)

type FansRequest {
	ID   string `path:"id"`
	Page int    `form:"page"`
	Size int    `form:"size"`
}

type FansResponse {
	Base
	Total       int         `json:"total"`
	CurrentPage int         `json:"current_page"`
	Data        []*UserBase `json:"data"`
}

type UserListRequest {
	Page int `form:"page"`
	Size int `form:"size"`
}

@server (
	group:  login
	prefix: v1
)
service User {
	@doc "user login"
	@handler login
	post /user/login (LoginRequest) returns (LoginResponse)
}

@server (
	group:  user
	prefix: v1
	jwt:    Auth
)
service User {
	@handler userInfo
	get /user/:id (GetUserInfoRequest) returns (GetUserInfoResponse)
	
	@handler modifyUserInfo
	post /user/:id (ModifyUserInfoRequest) returns (ModifyUserInfoResponse)
	
	@handler fans
	get /user/:id/fans (FansRequest) returns (FansResponse)
	
	@handler userAll
	get /user/all (UserListRequest) returns ([]Base)
	
	@handler userList
	get /user/list (UserListRequest) returns ([]Base)
}