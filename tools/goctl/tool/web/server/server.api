syntax = "v1"

type (
	APIRouteGroup {
		Jwt        bool        `json:"jwt,omitempty,optional"`
		Prefix     string      `json:"prefix,omitempty,optional"`
		Group      string      `json:"group,omitempty,optional"`
		Timeout    int         `json:"timeout,omitempty,optional,range=[0:]"`
		Middleware string      `json:"middleware,omitempty,optional"`
		MaxBytes   int64       `json:"maxBytes,omitempty,optional,range=[0:]"`
		Routes     []*APIRoute `json:"routes,omitempty"`
	}

	APIRoute {
		Handler      string      `json:"handler,omitempty,optional"`
		Method       string      `json:"method,options=get|head|post|put|patch|delete|connect|options|trace"`
		Path         string      `json:"path"`
		ContentType  string      `json:"contentType,omitempty,optional,options=application/json|application/x-www-form-urlencoded"`
		RequestBody  []*FormItem `json:"requestBodyFields,omitempty,optional"`
		ResponseBody string      `json:"responseBody,omitempty,optional"`
	}

	APIGenerateRequest {
		Name string           `json:"serviceName"`
		List []*APIRouteGroup `json:"routeGroups"`
	}

	APIGenerateResponse {
		API string `json:"api"`
	}

	FormItem {
		Name         string `json:"name"`
		Type         string `json:"type"`
		Optional     bool   `json:"optional,optional,omitempty"`
		DefaultValue string `json:"defaultValue,optional,omitempty"`
		CheckEnum    bool   `json:"checkEnum,optional,omitempty"`
		EnumValue    string `json:"enumValue,optional,omitempty"`  // // effect if checkEunm is true
		LowerBound   int64  `json:"lowerBound,optional,omitempty"` // effect if checkEunm is false
		UpperBound   int64  `json:"upperBound,optional,omitempty"` // // effect if checkEunm is false
	}
)

type (
	ParseJsonRequest {
		JSON string `json:"json"`
	}
	ParseJsonResponse {
		Form []*FormItem `json:"form"`
	}
)

service server {
	@handler apiGenerate
	post /api/generate (APIGenerateRequest) returns (APIGenerateResponse)
}

service server {
	@handler requestBodyParse
	post /api/request/body/parse (ParseJsonRequest) returns (ParseJsonResponse)
}